{
	"id": "2bc671eac9da96b11eb70bde57253405",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.20",
	"solcLongVersion": "0.8.20+commit.a1b79de6",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/tokenplay.sol": {
				"content": "\n\n// Sources flattened with hardhat v2.17.0 https://hardhat.org\n\n// File @openzeppelin/contracts/token/ERC20/IERC20.sol@v4.9.2\n\n// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\n}\n\n\n// File @openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol@v4.9.2\n\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n *\n * _Available since v4.1._\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n\n\n// File @openzeppelin/contracts/utils/Context.sol@v4.9.2\n\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n\n\n// File @openzeppelin/contracts/token/ERC20/ERC20.sol@v4.9.2\n\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.0;\n\n\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n * For a generic mechanism see {ERC20PresetMinterPauser}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC20\n * applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n *\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n * functions have been added to mitigate the well-known issues around setting\n * allowances. See {IERC20-approve}.\n */\ncontract ERC20 is Context, IERC20, IERC20Metadata {\n    mapping(address => uint256) private _balances;\n\n    mapping(address => mapping(address => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual override returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual override returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual override returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual override returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual override returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `amount`.\n     */\n    function transfer(address to, uint256 amount) public virtual override returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `amount`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `amount`.\n     */\n    function transferFrom(address from, address to, uint256 amount) public virtual override returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, amount);\n        _transfer(from, to, amount);\n        return true;\n    }\n\n    /**\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, allowance(owner, spender) + addedValue);\n        return true;\n    }\n\n    /**\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `spender` must have allowance for the caller of at least\n     * `subtractedValue`.\n     */\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\n        address owner = _msgSender();\n        uint256 currentAllowance = allowance(owner, spender);\n        require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\");\n        unchecked {\n            _approve(owner, spender, currentAllowance - subtractedValue);\n        }\n\n        return true;\n    }\n\n    /**\n     * @dev Moves `amount` of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `from` must have a balance of at least `amount`.\n     */\n    function _transfer(address from, address to, uint256 amount) internal virtual {\n        require(from != address(0), \"ERC20: transfer from the zero address\");\n        require(to != address(0), \"ERC20: transfer to the zero address\");\n\n        _beforeTokenTransfer(from, to, amount);\n\n        uint256 fromBalance = _balances[from];\n        require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\");\n        unchecked {\n            _balances[from] = fromBalance - amount;\n            // Overflow not possible: the sum of all balances is capped by totalSupply, and the sum is preserved by\n            // decrementing then incrementing.\n            _balances[to] += amount;\n        }\n\n        emit Transfer(from, to, amount);\n\n        _afterTokenTransfer(from, to, amount);\n    }\n\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\n     * the total supply.\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     */\n    function _mint(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: mint to the zero address\");\n\n        _beforeTokenTransfer(address(0), account, amount);\n\n        _totalSupply += amount;\n        unchecked {\n            // Overflow not possible: balance + amount is at most totalSupply + amount, which is checked above.\n            _balances[account] += amount;\n        }\n        emit Transfer(address(0), account, amount);\n\n        _afterTokenTransfer(address(0), account, amount);\n    }\n\n    /**\n     * @dev Destroys `amount` tokens from `account`, reducing the\n     * total supply.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     * - `account` must have at least `amount` tokens.\n     */\n    function _burn(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: burn from the zero address\");\n\n        _beforeTokenTransfer(account, address(0), amount);\n\n        uint256 accountBalance = _balances[account];\n        require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\");\n        unchecked {\n            _balances[account] = accountBalance - amount;\n            // Overflow not possible: amount <= accountBalance <= totalSupply.\n            _totalSupply -= amount;\n        }\n\n        emit Transfer(account, address(0), amount);\n\n        _afterTokenTransfer(account, address(0), amount);\n    }\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     */\n    function _approve(address owner, address spender, uint256 amount) internal virtual {\n        require(owner != address(0), \"ERC20: approve from the zero address\");\n        require(spender != address(0), \"ERC20: approve to the zero address\");\n\n        _allowances[owner][spender] = amount;\n        emit Approval(owner, spender, amount);\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `amount`.\n     *\n     * Does not update the allowance amount in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Might emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 amount) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            require(currentAllowance >= amount, \"ERC20: insufficient allowance\");\n            unchecked {\n                _approve(owner, spender, currentAllowance - amount);\n            }\n        }\n    }\n\n    /**\n     * @dev Hook that is called before any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * will be transferred to `to`.\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(address from, address to, uint256 amount) internal virtual {}\n\n    /**\n     * @dev Hook that is called after any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * has been transferred to `to`.\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _afterTokenTransfer(address from, address to, uint256 amount) internal virtual {}\n}\n\n\n// File contracts/ERC20Functions.sol\n\npragma solidity ^0.8.0;\n\ncontract tokenFunctions is ERC20 {\n    address public admins;\n\n    constructor() ERC20(\"CURRENCY\", \"MATIC\") {\n        admins = msg.sender;\n    }\n\n    function mint(address owner) external {\n        _mint(owner, 70000000 * (10 ** decimals()));\n    }\n\n    function findBalance(address user) external view returns (uint) {\n        uint balance = balanceOf(user);\n        return balance;\n    }\n\n    function transfer(address from, address to, uint amount) external {\n        _transfer(from, to, amount);\n    }\n}\n\n\n// File contracts/InterfaceERC20.sol\n\npragma solidity ^0.8.0;\n interface InterfaceERC20{\n    function mint(address user) external;\n    function transfer(address owner,address referrer,uint tokens) external;\n    function findBalance(address tokenUser) external returns(uint);\n}\n\n\n// File contracts/MultilevelTransfer.sol\n\npragma solidity ^0.8.0;\n\ncontract Tokenplay {\n    address public admins;\n    uint count = 0;\n    bool private sync;\n    address public parent;\n    uint public random;\n    InterfaceERC20 public inter;\n\n    mapping(address => Staker) public staker;\n    struct Staker {\n        uint tokenid;\n        address referrer;\n        bool setreferrer;\n        bool activeUser;\n    }\n\n    constructor(address _ERC20address) {\n        //  ERC20(\"CURRENCY\", \"MATIC\") {\n        inter = InterfaceERC20(_ERC20address);\n        admins = msg.sender;\n        staker[msg.sender].activeUser = true;\n        parent = msg.sender;\n        count = 1;\n        inter.mint(admins);\n    }\n\n    modifier onlyAdmins() {\n        require(msg.sender == admins, \"not an admin\");\n        _;\n    }\n\n    modifier synchronized() {\n        require(!sync, \"Sync lock\");\n        sync = true;\n        _;\n        sync = false;\n        _;\n    }\n    modifier activeUser() {\n        require(staker[msg.sender].activeUser);\n        _;\n    }\n\n    //functon to give random id to user\n    function tokenId() public {\n        require(!staker[msg.sender].activeUser, \"user already exist\");\n        random = uint(\n            keccak256(abi.encodePacked(msg.sender, block.timestamp, random))\n        );\n        staker[msg.sender].tokenid = random;\n    }\n\n    //function to set active user\n    function join() public {\n        require(!staker[msg.sender].activeUser, \"user already exist\");\n        require(staker[msg.sender].tokenid != 0, \"Not a valid TokenID\");\n        require(\n            !(staker[msg.sender].setreferrer),\n            \"Referrer Already used Only 1 allowed\"\n        );\n        staker[msg.sender].referrer = parent;\n        count++;\n        bool validUser = isValidTransfer(msg.sender, count);\n        require(validUser, \"Not a valid user\");\n        staker[msg.sender].activeUser = true;\n        staker[parent].setreferrer = true;\n        changingParent();\n    }\n\n    function isValidTransfer(\n        address user,\n        uint number\n    ) internal returns (bool) {\n        require(inter.findBalance(user) >= 500, \"insufficient balance\");\n        if (number <= 2) {\n            inter.transfer(user, staker[user].referrer, 500);\n        } else {\n            address parent1 = staker[user].referrer;\n            inter.transfer(user, staker[user].referrer, 300);\n            inter.transfer(user, staker[parent1].referrer, 200);\n        }\n        return true;\n    }\n\n    function getparent() public view activeUser returns (address) {\n        return staker[msg.sender].referrer;\n    }\n\n    //To make coming user parent after joining\n    function changingParent() internal activeUser {\n        parent = msg.sender;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/tokenplay.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/tokenplay.sol\":\"Context\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/tokenplay.sol\":{\"keccak256\":\"0xc51203f5a3b51abfdd040e607acf94e478345f1b943b8a21e8633c7956581e73\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://aa1bc6a0aac2c45edfd942dfd39bffba36f9ee6e3522c65c1755891267926394\",\"dweb:/ipfs/QmeJh4iBomTSqbRnFRfim6cQexjAHk57rwmDpTf5L2PawM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "name_",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "symbol_",
									"type": "string"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/tokenplay.sol\":5913:17225  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/tokenplay.sol\":6361:6474  constructor(string memory name_, string memory symbol_) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/tokenplay.sol\":6427:6432  _name */\n  0x03\n    /* \"contracts/tokenplay.sol\":6427:6440  _name = name_ */\n  tag_6\n    /* \"contracts/tokenplay.sol\":6435:6440  name_ */\n  dup4\n    /* \"contracts/tokenplay.sol\":6427:6432  _name */\n  dup3\n    /* \"contracts/tokenplay.sol\":6427:6440  _name = name_ */\n  tag_7\n  jump\t// in\ntag_6:\n  pop\n    /* \"contracts/tokenplay.sol\":6450:6457  _symbol */\n  0x04\n    /* \"contracts/tokenplay.sol\":6450:6467  _symbol = symbol_ */\n  tag_8\n    /* \"contracts/tokenplay.sol\":6460:6467  symbol_ */\n  dup3\n    /* \"contracts/tokenplay.sol\":6450:6457  _symbol */\n  dup3\n    /* \"contracts/tokenplay.sol\":6450:6467  _symbol = symbol_ */\n  tag_7\n  jump\t// in\ntag_8:\n  pop\n    /* \"contracts/tokenplay.sol\":6361:6474  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"contracts/tokenplay.sol\":5913:17225  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n  jump(tag_16)\n    /* \"#utility.yul\":14:141   */\ntag_10:\n    /* \"#utility.yul\":75:85   */\n  0x4e487b71\n    /* \"#utility.yul\":70:73   */\n  0xe0\n    /* \"#utility.yul\":66:86   */\n  shl\n    /* \"#utility.yul\":63:64   */\n  0x00\n    /* \"#utility.yul\":56:87   */\n  mstore\n    /* \"#utility.yul\":106:110   */\n  0x41\n    /* \"#utility.yul\":103:104   */\n  0x04\n    /* \"#utility.yul\":96:111   */\n  mstore\n    /* \"#utility.yul\":130:134   */\n  0x24\n    /* \"#utility.yul\":127:128   */\n  0x00\n    /* \"#utility.yul\":120:135   */\n  revert\n    /* \"#utility.yul\":146:986   */\ntag_11:\n    /* \"#utility.yul\":200:205   */\n  0x00\n    /* \"#utility.yul\":253:256   */\n  dup3\n    /* \"#utility.yul\":246:250   */\n  0x1f\n    /* \"#utility.yul\":238:244   */\n  dup4\n    /* \"#utility.yul\":234:251   */\n  add\n    /* \"#utility.yul\":230:257   */\n  slt\n    /* \"#utility.yul\":220:275   */\n  tag_19\n  jumpi\n    /* \"#utility.yul\":271:272   */\n  0x00\n    /* \"#utility.yul\":268:269   */\n  dup1\n    /* \"#utility.yul\":261:273   */\n  revert\n    /* \"#utility.yul\":220:275   */\ntag_19:\n    /* \"#utility.yul\":294:307   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":356:366   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":353:389   */\n  iszero\n  tag_21\n  jumpi\n    /* \"#utility.yul\":369:387   */\n  tag_21\n  tag_10\n  jump\t// in\ntag_21:\n    /* \"#utility.yul\":444:446   */\n  0x40\n    /* \"#utility.yul\":438:447   */\n  mload\n    /* \"#utility.yul\":412:414   */\n  0x1f\n    /* \"#utility.yul\":498:511   */\n  dup4\n  add\n  not(0x1f)\n    /* \"#utility.yul\":494:516   */\n  swap1\n  dup2\n  and\n    /* \"#utility.yul\":518:520   */\n  0x3f\n    /* \"#utility.yul\":490:521   */\n  add\n    /* \"#utility.yul\":486:526   */\n  and\n    /* \"#utility.yul\":474:527   */\n  dup2\n  add\n  swap1\n    /* \"#utility.yul\":542:560   */\n  dup3\n  dup3\n  gt\n    /* \"#utility.yul\":562:584   */\n  dup2\n  dup4\n  lt\n    /* \"#utility.yul\":539:585   */\n  or\n    /* \"#utility.yul\":536:608   */\n  iszero\n  tag_23\n  jumpi\n    /* \"#utility.yul\":588:606   */\n  tag_23\n  tag_10\n  jump\t// in\ntag_23:\n    /* \"#utility.yul\":628:638   */\n  dup2\n    /* \"#utility.yul\":624:626   */\n  0x40\n    /* \"#utility.yul\":617:639   */\n  mstore\n    /* \"#utility.yul\":663:665   */\n  dup4\n    /* \"#utility.yul\":655:661   */\n  dup2\n    /* \"#utility.yul\":648:666   */\n  mstore\n    /* \"#utility.yul\":685:689   */\n  0x20\n    /* \"#utility.yul\":675:689   */\n  swap3\n  pop\n    /* \"#utility.yul\":730:733   */\n  dup7\n    /* \"#utility.yul\":725:727   */\n  dup4\n    /* \"#utility.yul\":720:722   */\n  dup6\n    /* \"#utility.yul\":712:718   */\n  dup9\n    /* \"#utility.yul\":708:723   */\n  add\n    /* \"#utility.yul\":704:728   */\n  add\n    /* \"#utility.yul\":701:734   */\n  gt\n    /* \"#utility.yul\":698:751   */\n  iszero\n  tag_24\n  jumpi\n    /* \"#utility.yul\":747:748   */\n  0x00\n    /* \"#utility.yul\":744:745   */\n  dup1\n    /* \"#utility.yul\":737:749   */\n  revert\n    /* \"#utility.yul\":698:751   */\ntag_24:\n    /* \"#utility.yul\":769:770   */\n  0x00\n    /* \"#utility.yul\":760:770   */\n  swap2\n  pop\n    /* \"#utility.yul\":779:912   */\ntag_25:\n    /* \"#utility.yul\":793:795   */\n  dup4\n    /* \"#utility.yul\":790:791   */\n  dup3\n    /* \"#utility.yul\":787:796   */\n  lt\n    /* \"#utility.yul\":779:912   */\n  iszero\n  tag_27\n  jumpi\n    /* \"#utility.yul\":881:895   */\n  dup6\n  dup3\n  add\n    /* \"#utility.yul\":877:900   */\n  dup4\n  add\n    /* \"#utility.yul\":871:901   */\n  mload\n    /* \"#utility.yul\":850:864   */\n  dup2\n  dup4\n  add\n    /* \"#utility.yul\":846:869   */\n  dup5\n  add\n    /* \"#utility.yul\":839:902   */\n  mstore\n    /* \"#utility.yul\":804:814   */\n  swap1\n  dup3\n  add\n  swap1\n    /* \"#utility.yul\":779:912   */\n  jump(tag_25)\ntag_27:\n    /* \"#utility.yul\":954:955   */\n  0x00\n    /* \"#utility.yul\":932:947   */\n  swap4\n  dup2\n  add\n    /* \"#utility.yul\":928:952   */\n  swap1\n  swap3\n  add\n    /* \"#utility.yul\":921:956   */\n  swap3\n  swap1\n  swap3\n  mstore\n    /* \"#utility.yul\":936:942   */\n  swap5\n    /* \"#utility.yul\":146:986   */\n  swap4\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":991:1553   */\ntag_3:\n    /* \"#utility.yul\":1090:1096   */\n  0x00\n    /* \"#utility.yul\":1098:1104   */\n  dup1\n    /* \"#utility.yul\":1151:1153   */\n  0x40\n    /* \"#utility.yul\":1139:1148   */\n  dup4\n    /* \"#utility.yul\":1130:1137   */\n  dup6\n    /* \"#utility.yul\":1126:1149   */\n  sub\n    /* \"#utility.yul\":1122:1154   */\n  slt\n    /* \"#utility.yul\":1119:1171   */\n  iszero\n  tag_29\n  jumpi\n    /* \"#utility.yul\":1167:1168   */\n  0x00\n    /* \"#utility.yul\":1164:1165   */\n  dup1\n    /* \"#utility.yul\":1157:1169   */\n  revert\n    /* \"#utility.yul\":1119:1171   */\ntag_29:\n    /* \"#utility.yul\":1194:1210   */\n  dup3\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":1259:1273   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":1256:1290   */\n  iszero\n  tag_30\n  jumpi\n    /* \"#utility.yul\":1286:1287   */\n  0x00\n    /* \"#utility.yul\":1283:1284   */\n  dup1\n    /* \"#utility.yul\":1276:1288   */\n  revert\n    /* \"#utility.yul\":1256:1290   */\ntag_30:\n    /* \"#utility.yul\":1309:1370   */\n  tag_31\n    /* \"#utility.yul\":1362:1369   */\n  dup7\n    /* \"#utility.yul\":1353:1359   */\n  dup4\n    /* \"#utility.yul\":1342:1351   */\n  dup8\n    /* \"#utility.yul\":1338:1360   */\n  add\n    /* \"#utility.yul\":1309:1370   */\n  tag_11\n  jump\t// in\ntag_31:\n    /* \"#utility.yul\":1299:1370   */\n  swap4\n  pop\n    /* \"#utility.yul\":1416:1418   */\n  0x20\n    /* \"#utility.yul\":1405:1414   */\n  dup6\n    /* \"#utility.yul\":1401:1419   */\n  add\n    /* \"#utility.yul\":1395:1420   */\n  mload\n    /* \"#utility.yul\":1379:1420   */\n  swap2\n  pop\n    /* \"#utility.yul\":1445:1447   */\n  dup1\n    /* \"#utility.yul\":1435:1443   */\n  dup3\n    /* \"#utility.yul\":1432:1448   */\n  gt\n    /* \"#utility.yul\":1429:1465   */\n  iszero\n  tag_32\n  jumpi\n    /* \"#utility.yul\":1461:1462   */\n  0x00\n    /* \"#utility.yul\":1458:1459   */\n  dup1\n    /* \"#utility.yul\":1451:1463   */\n  revert\n    /* \"#utility.yul\":1429:1465   */\ntag_32:\n  pop\n    /* \"#utility.yul\":1484:1547   */\n  tag_33\n    /* \"#utility.yul\":1539:1546   */\n  dup6\n    /* \"#utility.yul\":1528:1536   */\n  dup3\n    /* \"#utility.yul\":1517:1526   */\n  dup7\n    /* \"#utility.yul\":1513:1537   */\n  add\n    /* \"#utility.yul\":1484:1547   */\n  tag_11\n  jump\t// in\ntag_33:\n    /* \"#utility.yul\":1474:1547   */\n  swap2\n  pop\n  pop\n    /* \"#utility.yul\":991:1553   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1558:1938   */\ntag_12:\n    /* \"#utility.yul\":1637:1638   */\n  0x01\n    /* \"#utility.yul\":1633:1645   */\n  dup2\n  dup2\n  shr\n  swap1\n    /* \"#utility.yul\":1680:1692   */\n  dup3\n  and\n  dup1\n    /* \"#utility.yul\":1701:1762   */\n  tag_35\n  jumpi\n    /* \"#utility.yul\":1755:1759   */\n  0x7f\n    /* \"#utility.yul\":1747:1753   */\n  dup3\n    /* \"#utility.yul\":1743:1760   */\n  and\n    /* \"#utility.yul\":1733:1760   */\n  swap2\n  pop\n    /* \"#utility.yul\":1701:1762   */\ntag_35:\n    /* \"#utility.yul\":1808:1810   */\n  0x20\n    /* \"#utility.yul\":1800:1806   */\n  dup3\n    /* \"#utility.yul\":1797:1811   */\n  lt\n    /* \"#utility.yul\":1777:1795   */\n  dup2\n    /* \"#utility.yul\":1774:1812   */\n  sub\n    /* \"#utility.yul\":1771:1932   */\n  tag_36\n  jumpi\n    /* \"#utility.yul\":1854:1864   */\n  0x4e487b71\n    /* \"#utility.yul\":1849:1852   */\n  0xe0\n    /* \"#utility.yul\":1845:1865   */\n  shl\n    /* \"#utility.yul\":1842:1843   */\n  0x00\n    /* \"#utility.yul\":1835:1866   */\n  mstore\n    /* \"#utility.yul\":1889:1893   */\n  0x22\n    /* \"#utility.yul\":1886:1887   */\n  0x04\n    /* \"#utility.yul\":1879:1894   */\n  mstore\n    /* \"#utility.yul\":1917:1921   */\n  0x24\n    /* \"#utility.yul\":1914:1915   */\n  0x00\n    /* \"#utility.yul\":1907:1922   */\n  revert\n    /* \"#utility.yul\":1771:1932   */\ntag_36:\n  pop\n    /* \"#utility.yul\":1558:1938   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2069:2614   */\ntag_14:\n    /* \"#utility.yul\":2171:2173   */\n  0x1f\n    /* \"#utility.yul\":2166:2169   */\n  dup3\n    /* \"#utility.yul\":2163:2174   */\n  gt\n    /* \"#utility.yul\":2160:2608   */\n  iszero\n  tag_39\n  jumpi\n    /* \"#utility.yul\":2207:2208   */\n  0x00\n    /* \"#utility.yul\":2232:2237   */\n  dup2\n    /* \"#utility.yul\":2228:2230   */\n  dup2\n    /* \"#utility.yul\":2221:2238   */\n  mstore\n    /* \"#utility.yul\":2277:2281   */\n  0x20\n    /* \"#utility.yul\":2273:2275   */\n  dup2\n    /* \"#utility.yul\":2263:2282   */\n  keccak256\n    /* \"#utility.yul\":2347:2349   */\n  0x1f\n    /* \"#utility.yul\":2335:2345   */\n  dup6\n    /* \"#utility.yul\":2331:2350   */\n  add\n    /* \"#utility.yul\":2328:2329   */\n  0x05\n    /* \"#utility.yul\":2324:2351   */\n  shr\n    /* \"#utility.yul\":2318:2322   */\n  dup2\n    /* \"#utility.yul\":2314:2352   */\n  add\n    /* \"#utility.yul\":2383:2387   */\n  0x20\n    /* \"#utility.yul\":2371:2381   */\n  dup7\n    /* \"#utility.yul\":2368:2388   */\n  lt\n    /* \"#utility.yul\":2365:2412   */\n  iszero\n  tag_40\n  jumpi\n  pop\n    /* \"#utility.yul\":2406:2410   */\n  dup1\n    /* \"#utility.yul\":2365:2412   */\ntag_40:\n    /* \"#utility.yul\":2461:2463   */\n  0x1f\n    /* \"#utility.yul\":2456:2459   */\n  dup6\n    /* \"#utility.yul\":2452:2464   */\n  add\n    /* \"#utility.yul\":2449:2450   */\n  0x05\n    /* \"#utility.yul\":2445:2465   */\n  shr\n    /* \"#utility.yul\":2439:2443   */\n  dup3\n    /* \"#utility.yul\":2435:2466   */\n  add\n    /* \"#utility.yul\":2425:2466   */\n  swap2\n  pop\n    /* \"#utility.yul\":2516:2598   */\ntag_41:\n    /* \"#utility.yul\":2534:2536   */\n  dup2\n    /* \"#utility.yul\":2527:2532   */\n  dup2\n    /* \"#utility.yul\":2524:2537   */\n  lt\n    /* \"#utility.yul\":2516:2598   */\n  iszero\n  tag_43\n  jumpi\n    /* \"#utility.yul\":2579:2596   */\n  dup3\n  dup2\n  sstore\n    /* \"#utility.yul\":2560:2561   */\n  0x01\n    /* \"#utility.yul\":2549:2562   */\n  add\n    /* \"#utility.yul\":2516:2598   */\n  jump(tag_41)\ntag_43:\n    /* \"#utility.yul\":2520:2523   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":2160:2608   */\ntag_39:\n    /* \"#utility.yul\":2069:2614   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2790:4142   */\ntag_7:\n    /* \"#utility.yul\":2910:2920   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":2932:2962   */\n  dup2\n  gt\n    /* \"#utility.yul\":2929:2985   */\n  iszero\n  tag_47\n  jumpi\n    /* \"#utility.yul\":2965:2983   */\n  tag_47\n  tag_10\n  jump\t// in\ntag_47:\n    /* \"#utility.yul\":2994:3091   */\n  tag_48\n    /* \"#utility.yul\":3084:3090   */\n  dup2\n    /* \"#utility.yul\":3044:3082   */\n  tag_49\n    /* \"#utility.yul\":3076:3080   */\n  dup5\n    /* \"#utility.yul\":3070:3081   */\n  sload\n    /* \"#utility.yul\":3044:3082   */\n  tag_12\n  jump\t// in\ntag_49:\n    /* \"#utility.yul\":3038:3042   */\n  dup5\n    /* \"#utility.yul\":2994:3091   */\n  tag_14\n  jump\t// in\ntag_48:\n    /* \"#utility.yul\":3146:3150   */\n  0x20\n  dup1\n    /* \"#utility.yul\":3210:3212   */\n  0x1f\n    /* \"#utility.yul\":3199:3213   */\n  dup4\n  gt\n    /* \"#utility.yul\":3227:3228   */\n  0x01\n    /* \"#utility.yul\":3222:3885   */\n  dup2\n  eq\n  tag_51\n  jumpi\n    /* \"#utility.yul\":3929:3930   */\n  0x00\n    /* \"#utility.yul\":3946:3952   */\n  dup5\n    /* \"#utility.yul\":3943:4032   */\n  iszero\n  tag_52\n  jumpi\n  pop\n    /* \"#utility.yul\":3998:4017   */\n  dup6\n  dup4\n  add\n    /* \"#utility.yul\":3992:4018   */\n  mload\n    /* \"#utility.yul\":3943:4032   */\ntag_52:\n  not(0x00)\n    /* \"#utility.yul\":2747:2748   */\n  0x03\n    /* \"#utility.yul\":2743:2754   */\n  dup7\n  swap1\n  shl\n    /* \"#utility.yul\":2739:2763   */\n  shr\n    /* \"#utility.yul\":2735:2764   */\n  not\n    /* \"#utility.yul\":2725:2765   */\n  and\n    /* \"#utility.yul\":2771:2772   */\n  0x01\n    /* \"#utility.yul\":2767:2778   */\n  dup6\n  swap1\n  shl\n    /* \"#utility.yul\":2722:2779   */\n  or\n    /* \"#utility.yul\":4045:4126   */\n  dup6\n  sstore\n    /* \"#utility.yul\":3192:4136   */\n  jump(tag_43)\n    /* \"#utility.yul\":3222:3885   */\ntag_51:\n    /* \"#utility.yul\":2016:2017   */\n  0x00\n    /* \"#utility.yul\":2009:2023   */\n  dup6\n  dup2\n  mstore\n    /* \"#utility.yul\":2053:2057   */\n  0x20\n    /* \"#utility.yul\":2040:2058   */\n  dup2\n  keccak256\n  not(0x1f)\n    /* \"#utility.yul\":3258:3278   */\n  dup7\n  and\n  swap2\n    /* \"#utility.yul\":3376:3612   */\ntag_55:\n    /* \"#utility.yul\":3390:3397   */\n  dup3\n    /* \"#utility.yul\":3387:3388   */\n  dup2\n    /* \"#utility.yul\":3384:3398   */\n  lt\n    /* \"#utility.yul\":3376:3612   */\n  iszero\n  tag_57\n  jumpi\n    /* \"#utility.yul\":3479:3498   */\n  dup9\n  dup7\n  add\n    /* \"#utility.yul\":3473:3499   */\n  mload\n    /* \"#utility.yul\":3458:3500   */\n  dup3\n  sstore\n    /* \"#utility.yul\":3571:3598   */\n  swap5\n  dup5\n  add\n  swap5\n    /* \"#utility.yul\":3539:3540   */\n  0x01\n    /* \"#utility.yul\":3527:3541   */\n  swap1\n  swap2\n  add\n  swap1\n    /* \"#utility.yul\":3406:3425   */\n  dup5\n  add\n    /* \"#utility.yul\":3376:3612   */\n  jump(tag_55)\ntag_57:\n    /* \"#utility.yul\":3380:3383   */\n  pop\n    /* \"#utility.yul\":3640:3646   */\n  dup6\n    /* \"#utility.yul\":3631:3638   */\n  dup3\n    /* \"#utility.yul\":3628:3647   */\n  lt\n    /* \"#utility.yul\":3625:3826   */\n  iszero\n  tag_58\n  jumpi\n    /* \"#utility.yul\":3701:3720   */\n  dup8\n  dup6\n  add\n    /* \"#utility.yul\":3695:3721   */\n  mload\n  not(0x00)\n    /* \"#utility.yul\":3784:3785   */\n  0x03\n    /* \"#utility.yul\":3780:3794   */\n  dup9\n  swap1\n  shl\n    /* \"#utility.yul\":3796:3799   */\n  0xf8\n    /* \"#utility.yul\":3776:3800   */\n  and\n    /* \"#utility.yul\":3772:3809   */\n  shr\n    /* \"#utility.yul\":3768:3810   */\n  not\n    /* \"#utility.yul\":3753:3811   */\n  and\n    /* \"#utility.yul\":3738:3812   */\n  dup2\n  sstore\n    /* \"#utility.yul\":3625:3826   */\ntag_58:\n  pop\n  pop\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":3872:3873   */\n  0x01\n    /* \"#utility.yul\":3856:3870   */\n  swap1\n  dup2\n  shl\n    /* \"#utility.yul\":3852:3874   */\n  add\n    /* \"#utility.yul\":3839:3875   */\n  swap1\n  sstore\n  pop\n    /* \"#utility.yul\":2790:4142   */\n  jump\t// out\ntag_16:\n    /* \"contracts/tokenplay.sol\":5913:17225  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/tokenplay.sol\":5913:17225  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x39509351\n      gt\n      tag_14\n      jumpi\n      dup1\n      0x39509351\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xa457c2d7\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_13\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_14:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/tokenplay.sol\":6539:6637  function name() public view virtual override returns (string memory) {... */\n    tag_3:\n      tag_15\n      tag_16\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      tag_17\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_17:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/tokenplay.sol\":8825:9022  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_4:\n      tag_19\n      tag_20\n      calldatasize\n      0x04\n      tag_21\n      jump\t// in\n    tag_20:\n      tag_22\n      jump\t// in\n    tag_19:\n      mload(0x40)\n        /* \"#utility.yul\":1169:1183   */\n      swap1\n      iszero\n        /* \"#utility.yul\":1162:1184   */\n      iszero\n        /* \"#utility.yul\":1144:1185   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1132:1134   */\n      0x20\n        /* \"#utility.yul\":1117:1135   */\n      add\n        /* \"contracts/tokenplay.sol\":8825:9022  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n      tag_17\n        /* \"#utility.yul\":1004:1191   */\n      jump\n        /* \"contracts/tokenplay.sol\":7636:7742  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_5:\n        /* \"contracts/tokenplay.sol\":7723:7735  _totalSupply */\n      sload(0x02)\n        /* \"contracts/tokenplay.sol\":7636:7742  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_25:\n      mload(0x40)\n        /* \"#utility.yul\":1342:1367   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":1330:1332   */\n      0x20\n        /* \"#utility.yul\":1315:1333   */\n      add\n        /* \"contracts/tokenplay.sol\":7636:7742  function totalSupply() public view virtual override returns (uint256) {... */\n      tag_17\n        /* \"#utility.yul\":1196:1373   */\n      jump\n        /* \"contracts/tokenplay.sol\":9584:9840  function transferFrom(address from, address to, uint256 amount) public virtual override returns (bool) {... */\n    tag_6:\n      tag_19\n      tag_30\n      calldatasize\n      0x04\n      tag_31\n      jump\t// in\n    tag_30:\n      tag_32\n      jump\t// in\n        /* \"contracts/tokenplay.sol\":7485:7576  function decimals() public view virtual override returns (uint8) {... */\n    tag_7:\n      mload(0x40)\n        /* \"contracts/tokenplay.sol\":7567:7569  18 */\n      0x12\n        /* \"#utility.yul\":1853:1889   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1841:1843   */\n      0x20\n        /* \"#utility.yul\":1826:1844   */\n      add\n        /* \"contracts/tokenplay.sol\":7485:7576  function decimals() public view virtual override returns (uint8) {... */\n      tag_17\n        /* \"#utility.yul\":1711:1895   */\n      jump\n        /* \"contracts/tokenplay.sol\":10235:10469  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_8:\n      tag_19\n      tag_39\n      calldatasize\n      0x04\n      tag_21\n      jump\t// in\n    tag_39:\n      tag_40\n      jump\t// in\n        /* \"contracts/tokenplay.sol\":7800:7925  function balanceOf(address account) public view virtual override returns (uint256) {... */\n    tag_9:\n      tag_25\n      tag_43\n      calldatasize\n      0x04\n      tag_44\n      jump\t// in\n    tag_43:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/tokenplay.sol\":7900:7918  _balances[account] */\n      and\n        /* \"contracts/tokenplay.sol\":7874:7881  uint256 */\n      0x00\n        /* \"contracts/tokenplay.sol\":7900:7918  _balances[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"contracts/tokenplay.sol\":7800:7925  function balanceOf(address account) public view virtual override returns (uint256) {... */\n      jump\n        /* \"contracts/tokenplay.sol\":6750:6852  function symbol() public view virtual override returns (string memory) {... */\n    tag_10:\n      tag_15\n      tag_48\n      jump\t// in\n        /* \"contracts/tokenplay.sol\":10956:11383  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_11:\n      tag_19\n      tag_51\n      calldatasize\n      0x04\n      tag_21\n      jump\t// in\n    tag_51:\n      tag_52\n      jump\t// in\n        /* \"contracts/tokenplay.sol\":8121:8310  function transfer(address to, uint256 amount) public virtual override returns (bool) {... */\n    tag_12:\n      tag_19\n      tag_55\n      calldatasize\n      0x04\n      tag_21\n      jump\t// in\n    tag_55:\n      tag_56\n      jump\t// in\n        /* \"contracts/tokenplay.sol\":8368:8517  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_13:\n      tag_25\n      tag_59\n      calldatasize\n      0x04\n      tag_60\n      jump\t// in\n    tag_59:\n      tag_61\n      jump\t// in\n        /* \"contracts/tokenplay.sol\":6539:6637  function name() public view virtual override returns (string memory) {... */\n    tag_16:\n        /* \"contracts/tokenplay.sol\":6593:6606  string memory */\n      0x60\n        /* \"contracts/tokenplay.sol\":6625:6630  _name */\n      0x03\n        /* \"contracts/tokenplay.sol\":6618:6630  return _name */\n      dup1\n      sload\n      tag_64\n      swap1\n      tag_65\n      jump\t// in\n    tag_64:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_66\n      swap1\n      tag_65\n      jump\t// in\n    tag_66:\n      dup1\n      iszero\n      tag_67\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_68\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_67)\n    tag_68:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_69:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_69\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_67:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/tokenplay.sol\":6539:6637  function name() public view virtual override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/tokenplay.sol\":8825:9022  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_22:\n        /* \"contracts/tokenplay.sol\":8908:8912  bool */\n      0x00\n        /* \"contracts/tokenplay.sol\":4322:4332  msg.sender */\n      caller\n        /* \"contracts/tokenplay.sol\":8962:8994  _approve(owner, spender, amount) */\n      tag_73\n        /* \"contracts/tokenplay.sol\":4322:4332  msg.sender */\n      dup2\n        /* \"contracts/tokenplay.sol\":8978:8985  spender */\n      dup6\n        /* \"contracts/tokenplay.sol\":8987:8993  amount */\n      dup6\n        /* \"contracts/tokenplay.sol\":8962:8970  _approve */\n      tag_74\n        /* \"contracts/tokenplay.sol\":8962:8994  _approve(owner, spender, amount) */\n      jump\t// in\n    tag_73:\n        /* \"contracts/tokenplay.sol\":9011:9015  true */\n      0x01\n        /* \"contracts/tokenplay.sol\":9004:9015  return true */\n      swap2\n      pop\n      pop\n        /* \"contracts/tokenplay.sol\":8825:9022  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_70:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/tokenplay.sol\":9584:9840  function transferFrom(address from, address to, uint256 amount) public virtual override returns (bool) {... */\n    tag_32:\n        /* \"contracts/tokenplay.sol\":9681:9685  bool */\n      0x00\n        /* \"contracts/tokenplay.sol\":4322:4332  msg.sender */\n      caller\n        /* \"contracts/tokenplay.sol\":9737:9775  _spendAllowance(from, spender, amount) */\n      tag_78\n        /* \"contracts/tokenplay.sol\":9753:9757  from */\n      dup6\n        /* \"contracts/tokenplay.sol\":4322:4332  msg.sender */\n      dup3\n        /* \"contracts/tokenplay.sol\":9768:9774  amount */\n      dup6\n        /* \"contracts/tokenplay.sol\":9737:9752  _spendAllowance */\n      tag_79\n        /* \"contracts/tokenplay.sol\":9737:9775  _spendAllowance(from, spender, amount) */\n      jump\t// in\n    tag_78:\n        /* \"contracts/tokenplay.sol\":9785:9812  _transfer(from, to, amount) */\n      tag_80\n        /* \"contracts/tokenplay.sol\":9795:9799  from */\n      dup6\n        /* \"contracts/tokenplay.sol\":9801:9803  to */\n      dup6\n        /* \"contracts/tokenplay.sol\":9805:9811  amount */\n      dup6\n        /* \"contracts/tokenplay.sol\":9785:9794  _transfer */\n      tag_81\n        /* \"contracts/tokenplay.sol\":9785:9812  _transfer(from, to, amount) */\n      jump\t// in\n    tag_80:\n      pop\n        /* \"contracts/tokenplay.sol\":9829:9833  true */\n      0x01\n      swap5\n        /* \"contracts/tokenplay.sol\":9584:9840  function transferFrom(address from, address to, uint256 amount) public virtual override returns (bool) {... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/tokenplay.sol\":10235:10469  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_40:\n        /* \"contracts/tokenplay.sol\":10323:10327  bool */\n      0x00\n        /* \"contracts/tokenplay.sol\":4322:4332  msg.sender */\n      caller\n        /* \"contracts/tokenplay.sol\":10377:10441  _approve(owner, spender, allowance(owner, spender) + addedValue) */\n      tag_73\n        /* \"contracts/tokenplay.sol\":4322:4332  msg.sender */\n      dup2\n        /* \"contracts/tokenplay.sol\":10393:10400  spender */\n      dup6\n        /* \"contracts/tokenplay.sol\":10430:10440  addedValue */\n      dup6\n        /* \"contracts/tokenplay.sol\":10402:10427  allowance(owner, spender) */\n      tag_86\n        /* \"contracts/tokenplay.sol\":4322:4332  msg.sender */\n      dup4\n        /* \"contracts/tokenplay.sol\":10393:10400  spender */\n      dup4\n        /* \"contracts/tokenplay.sol\":10402:10411  allowance */\n      tag_61\n        /* \"contracts/tokenplay.sol\":10402:10427  allowance(owner, spender) */\n      jump\t// in\n    tag_86:\n        /* \"contracts/tokenplay.sol\":10402:10440  allowance(owner, spender) + addedValue */\n      tag_87\n      swap2\n      swap1\n      tag_88\n      jump\t// in\n    tag_87:\n        /* \"contracts/tokenplay.sol\":10377:10385  _approve */\n      tag_74\n        /* \"contracts/tokenplay.sol\":10377:10441  _approve(owner, spender, allowance(owner, spender) + addedValue) */\n      jump\t// in\n        /* \"contracts/tokenplay.sol\":6750:6852  function symbol() public view virtual override returns (string memory) {... */\n    tag_48:\n        /* \"contracts/tokenplay.sol\":6806:6819  string memory */\n      0x60\n        /* \"contracts/tokenplay.sol\":6838:6845  _symbol */\n      0x04\n        /* \"contracts/tokenplay.sol\":6831:6845  return _symbol */\n      dup1\n      sload\n      tag_64\n      swap1\n      tag_65\n      jump\t// in\n        /* \"contracts/tokenplay.sol\":10956:11383  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_52:\n        /* \"contracts/tokenplay.sol\":11049:11053  bool */\n      0x00\n        /* \"contracts/tokenplay.sol\":4322:4332  msg.sender */\n      caller\n        /* \"contracts/tokenplay.sol\":11049:11053  bool */\n      dup2\n        /* \"contracts/tokenplay.sol\":11130:11155  allowance(owner, spender) */\n      tag_98\n        /* \"contracts/tokenplay.sol\":4322:4332  msg.sender */\n      dup3\n        /* \"contracts/tokenplay.sol\":11147:11154  spender */\n      dup7\n        /* \"contracts/tokenplay.sol\":11130:11139  allowance */\n      tag_61\n        /* \"contracts/tokenplay.sol\":11130:11155  allowance(owner, spender) */\n      jump\t// in\n    tag_98:\n        /* \"contracts/tokenplay.sol\":11103:11155  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"contracts/tokenplay.sol\":11193:11208  subtractedValue */\n      dup4\n        /* \"contracts/tokenplay.sol\":11173:11189  currentAllowance */\n      dup2\n        /* \"contracts/tokenplay.sol\":11173:11208  currentAllowance >= subtractedValue */\n      lt\n      iszero\n        /* \"contracts/tokenplay.sol\":11165:11250  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n      tag_99\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3170:3172   */\n      0x20\n        /* \"contracts/tokenplay.sol\":11165:11250  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3152:3173   */\n      mstore\n        /* \"#utility.yul\":3209:3211   */\n      0x25\n        /* \"#utility.yul\":3189:3207   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3182:3212   */\n      mstore\n        /* \"#utility.yul\":3248:3282   */\n      0x45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77\n        /* \"#utility.yul\":3228:3246   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3221:3283   */\n      mstore\n      shl(0xd8, 0x207a65726f)\n        /* \"#utility.yul\":3299:3317   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":3292:3327   */\n      mstore\n        /* \"#utility.yul\":3344:3363   */\n      0x84\n      add\n        /* \"contracts/tokenplay.sol\":11165:11250  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n    tag_100:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_99:\n        /* \"contracts/tokenplay.sol\":11284:11344  _approve(owner, spender, currentAllowance - subtractedValue) */\n      tag_80\n        /* \"contracts/tokenplay.sol\":11293:11298  owner */\n      dup3\n        /* \"contracts/tokenplay.sol\":11300:11307  spender */\n      dup7\n        /* \"contracts/tokenplay.sol\":11328:11343  subtractedValue */\n      dup7\n        /* \"contracts/tokenplay.sol\":11309:11325  currentAllowance */\n      dup5\n        /* \"contracts/tokenplay.sol\":11309:11343  currentAllowance - subtractedValue */\n      sub\n        /* \"contracts/tokenplay.sol\":11284:11292  _approve */\n      tag_74\n        /* \"contracts/tokenplay.sol\":11284:11344  _approve(owner, spender, currentAllowance - subtractedValue) */\n      jump\t// in\n        /* \"contracts/tokenplay.sol\":8121:8310  function transfer(address to, uint256 amount) public virtual override returns (bool) {... */\n    tag_56:\n        /* \"contracts/tokenplay.sol\":8200:8204  bool */\n      0x00\n        /* \"contracts/tokenplay.sol\":4322:4332  msg.sender */\n      caller\n        /* \"contracts/tokenplay.sol\":8254:8282  _transfer(owner, to, amount) */\n      tag_73\n        /* \"contracts/tokenplay.sol\":4322:4332  msg.sender */\n      dup2\n        /* \"contracts/tokenplay.sol\":8271:8273  to */\n      dup6\n        /* \"contracts/tokenplay.sol\":8275:8281  amount */\n      dup6\n        /* \"contracts/tokenplay.sol\":8254:8263  _transfer */\n      tag_81\n        /* \"contracts/tokenplay.sol\":8254:8282  _transfer(owner, to, amount) */\n      jump\t// in\n        /* \"contracts/tokenplay.sol\":8368:8517  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_61:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/tokenplay.sol\":8483:8501  _allowances[owner] */\n      swap2\n      dup3\n      and\n        /* \"contracts/tokenplay.sol\":8457:8464  uint256 */\n      0x00\n        /* \"contracts/tokenplay.sol\":8483:8501  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/tokenplay.sol\":8483:8494  _allowances */\n      0x01\n        /* \"contracts/tokenplay.sol\":8483:8501  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/tokenplay.sol\":8483:8510  _allowances[owner][spender] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      swap1\n        /* \"contracts/tokenplay.sol\":8368:8517  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n      jump\t// out\n        /* \"contracts/tokenplay.sol\":14838:15178  function _approve(address owner, address spender, uint256 amount) internal virtual {... */\n    tag_74:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/tokenplay.sol\":14939:14958  owner != address(0) */\n      dup4\n      and\n        /* \"contracts/tokenplay.sol\":14931:14999  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_109\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3576:3578   */\n      0x20\n        /* \"contracts/tokenplay.sol\":14931:14999  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3558:3579   */\n      mstore\n        /* \"#utility.yul\":3615:3617   */\n      0x24\n        /* \"#utility.yul\":3595:3613   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":3588:3618   */\n      mstore\n        /* \"#utility.yul\":3654:3688   */\n      0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464\n        /* \"#utility.yul\":3634:3652   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3627:3689   */\n      mstore\n      shl(0xe0, 0x72657373)\n        /* \"#utility.yul\":3705:3723   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":3698:3732   */\n      mstore\n        /* \"#utility.yul\":3749:3768   */\n      0x84\n      add\n        /* \"contracts/tokenplay.sol\":14931:14999  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_100\n        /* \"#utility.yul\":3374:3774   */\n      jump\n        /* \"contracts/tokenplay.sol\":14931:14999  require(owner != address(0), \"ERC20: approve from the zero address\") */\n    tag_109:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/tokenplay.sol\":15017:15038  spender != address(0) */\n      dup3\n      and\n        /* \"contracts/tokenplay.sol\":15009:15077  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_112\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3981:3983   */\n      0x20\n        /* \"contracts/tokenplay.sol\":15009:15077  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3963:3984   */\n      mstore\n        /* \"#utility.yul\":4020:4022   */\n      0x22\n        /* \"#utility.yul\":4000:4018   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3993:4023   */\n      mstore\n        /* \"#utility.yul\":4059:4093   */\n      0x45524332303a20617070726f766520746f20746865207a65726f206164647265\n        /* \"#utility.yul\":4039:4057   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4032:4094   */\n      mstore\n      shl(0xf0, 0x7373)\n        /* \"#utility.yul\":4110:4128   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":4103:4135   */\n      mstore\n        /* \"#utility.yul\":4152:4171   */\n      0x84\n      add\n        /* \"contracts/tokenplay.sol\":15009:15077  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_100\n        /* \"#utility.yul\":3779:4177   */\n      jump\n        /* \"contracts/tokenplay.sol\":15009:15077  require(spender != address(0), \"ERC20: approve to the zero address\") */\n    tag_112:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/tokenplay.sol\":15088:15106  _allowances[owner] */\n      dup4\n      dup2\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"contracts/tokenplay.sol\":15088:15099  _allowances */\n      0x01\n        /* \"contracts/tokenplay.sol\":15088:15106  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/tokenplay.sol\":15088:15115  _allowances[owner][spender] */\n      swap5\n      dup8\n      and\n      dup1\n      dup5\n      mstore\n      swap5\n      dup3\n      mstore\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"contracts/tokenplay.sol\":15088:15124  _allowances[owner][spender] = amount */\n      dup6\n      swap1\n      sstore\n        /* \"contracts/tokenplay.sol\":15139:15171  Approval(owner, spender, amount) */\n      swap1\n      mload\n        /* \"#utility.yul\":1342:1367   */\n      dup5\n      dup2\n      mstore\n        /* \"contracts/tokenplay.sol\":15139:15171  Approval(owner, spender, amount) */\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      swap2\n        /* \"#utility.yul\":1315:1333   */\n      add\n        /* \"contracts/tokenplay.sol\":15139:15171  Approval(owner, spender, amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/tokenplay.sol\":14838:15178  function _approve(address owner, address spender, uint256 amount) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/tokenplay.sol\":15459:15870  function _spendAllowance(address owner, address spender, uint256 amount) internal virtual {... */\n    tag_79:\n        /* \"contracts/tokenplay.sol\":15559:15583  uint256 currentAllowance */\n      0x00\n        /* \"contracts/tokenplay.sol\":15586:15611  allowance(owner, spender) */\n      tag_117\n        /* \"contracts/tokenplay.sol\":15596:15601  owner */\n      dup5\n        /* \"contracts/tokenplay.sol\":15603:15610  spender */\n      dup5\n        /* \"contracts/tokenplay.sol\":15586:15595  allowance */\n      tag_61\n        /* \"contracts/tokenplay.sol\":15586:15611  allowance(owner, spender) */\n      jump\t// in\n    tag_117:\n        /* \"contracts/tokenplay.sol\":15559:15611  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n      not(0x00)\n        /* \"contracts/tokenplay.sol\":15625:15641  currentAllowance */\n      dup2\n        /* \"contracts/tokenplay.sol\":15625:15662  currentAllowance != type(uint256).max */\n      eq\n        /* \"contracts/tokenplay.sol\":15621:15864  if (currentAllowance != type(uint256).max) {... */\n      tag_122\n      jumpi\n        /* \"contracts/tokenplay.sol\":15706:15712  amount */\n      dup2\n        /* \"contracts/tokenplay.sol\":15686:15702  currentAllowance */\n      dup2\n        /* \"contracts/tokenplay.sol\":15686:15712  currentAllowance >= amount */\n      lt\n      iszero\n        /* \"contracts/tokenplay.sol\":15678:15746  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n      tag_119\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4384:4386   */\n      0x20\n        /* \"contracts/tokenplay.sol\":15678:15746  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4366:4387   */\n      mstore\n        /* \"#utility.yul\":4423:4425   */\n      0x1d\n        /* \"#utility.yul\":4403:4421   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4396:4426   */\n      mstore\n        /* \"#utility.yul\":4462:4493   */\n      0x45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000\n        /* \"#utility.yul\":4442:4460   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4435:4494   */\n      mstore\n        /* \"#utility.yul\":4511:4529   */\n      0x64\n      add\n        /* \"contracts/tokenplay.sol\":15678:15746  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n      tag_100\n        /* \"#utility.yul\":4182:4535   */\n      jump\n        /* \"contracts/tokenplay.sol\":15678:15746  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n    tag_119:\n        /* \"contracts/tokenplay.sol\":15788:15839  _approve(owner, spender, currentAllowance - amount) */\n      tag_122\n        /* \"contracts/tokenplay.sol\":15797:15802  owner */\n      dup5\n        /* \"contracts/tokenplay.sol\":15804:15811  spender */\n      dup5\n        /* \"contracts/tokenplay.sol\":15832:15838  amount */\n      dup5\n        /* \"contracts/tokenplay.sol\":15813:15829  currentAllowance */\n      dup5\n        /* \"contracts/tokenplay.sol\":15813:15838  currentAllowance - amount */\n      sub\n        /* \"contracts/tokenplay.sol\":15788:15796  _approve */\n      tag_74\n        /* \"contracts/tokenplay.sol\":15788:15839  _approve(owner, spender, currentAllowance - amount) */\n      jump\t// in\n    tag_122:\n        /* \"contracts/tokenplay.sol\":15549:15870  {... */\n      pop\n        /* \"contracts/tokenplay.sol\":15459:15870  function _spendAllowance(address owner, address spender, uint256 amount) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/tokenplay.sol\":11837:12625  function _transfer(address from, address to, uint256 amount) internal virtual {... */\n    tag_81:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/tokenplay.sol\":11933:11951  from != address(0) */\n      dup4\n      and\n        /* \"contracts/tokenplay.sol\":11925:11993  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      tag_124\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4742:4744   */\n      0x20\n        /* \"contracts/tokenplay.sol\":11925:11993  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4724:4745   */\n      mstore\n        /* \"#utility.yul\":4781:4783   */\n      0x25\n        /* \"#utility.yul\":4761:4779   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4754:4784   */\n      mstore\n        /* \"#utility.yul\":4820:4854   */\n      0x45524332303a207472616e736665722066726f6d20746865207a65726f206164\n        /* \"#utility.yul\":4800:4818   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4793:4855   */\n      mstore\n      shl(0xd8, 0x6472657373)\n        /* \"#utility.yul\":4871:4889   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":4864:4899   */\n      mstore\n        /* \"#utility.yul\":4916:4935   */\n      0x84\n      add\n        /* \"contracts/tokenplay.sol\":11925:11993  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      tag_100\n        /* \"#utility.yul\":4540:4941   */\n      jump\n        /* \"contracts/tokenplay.sol\":11925:11993  require(from != address(0), \"ERC20: transfer from the zero address\") */\n    tag_124:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/tokenplay.sol\":12011:12027  to != address(0) */\n      dup3\n      and\n        /* \"contracts/tokenplay.sol\":12003:12067  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      tag_127\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5148:5150   */\n      0x20\n        /* \"contracts/tokenplay.sol\":12003:12067  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5130:5151   */\n      mstore\n        /* \"#utility.yul\":5187:5189   */\n      0x23\n        /* \"#utility.yul\":5167:5185   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5160:5190   */\n      mstore\n        /* \"#utility.yul\":5226:5260   */\n      0x45524332303a207472616e7366657220746f20746865207a65726f2061646472\n        /* \"#utility.yul\":5206:5224   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5199:5261   */\n      mstore\n      shl(0xe8, 0x657373)\n        /* \"#utility.yul\":5277:5295   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":5270:5303   */\n      mstore\n        /* \"#utility.yul\":5320:5339   */\n      0x84\n      add\n        /* \"contracts/tokenplay.sol\":12003:12067  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      tag_100\n        /* \"#utility.yul\":4946:5345   */\n      jump\n        /* \"contracts/tokenplay.sol\":12003:12067  require(to != address(0), \"ERC20: transfer to the zero address\") */\n    tag_127:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/tokenplay.sol\":12149:12164  _balances[from] */\n      dup4\n      and\n        /* \"contracts/tokenplay.sol\":12127:12146  uint256 fromBalance */\n      0x00\n        /* \"contracts/tokenplay.sol\":12149:12164  _balances[from] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"contracts/tokenplay.sol\":12182:12203  fromBalance >= amount */\n      dup2\n      dup2\n      lt\n      iszero\n        /* \"contracts/tokenplay.sol\":12174:12246  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      tag_132\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5552:5554   */\n      0x20\n        /* \"contracts/tokenplay.sol\":12174:12246  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5534:5555   */\n      mstore\n        /* \"#utility.yul\":5591:5593   */\n      0x26\n        /* \"#utility.yul\":5571:5589   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5564:5594   */\n      mstore\n        /* \"#utility.yul\":5630:5664   */\n      0x45524332303a207472616e7366657220616d6f756e7420657863656564732062\n        /* \"#utility.yul\":5610:5628   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5603:5665   */\n      mstore\n      shl(0xd0, 0x616c616e6365)\n        /* \"#utility.yul\":5681:5699   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":5674:5710   */\n      mstore\n        /* \"#utility.yul\":5727:5746   */\n      0x84\n      add\n        /* \"contracts/tokenplay.sol\":12174:12246  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      tag_100\n        /* \"#utility.yul\":5350:5752   */\n      jump\n        /* \"contracts/tokenplay.sol\":12174:12246  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n    tag_132:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/tokenplay.sol\":12280:12295  _balances[from] */\n      dup5\n      dup2\n      and\n        /* \"contracts/tokenplay.sol\":12280:12289  _balances */\n      0x00\n        /* \"contracts/tokenplay.sol\":12280:12295  _balances[from] */\n      dup2\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/tokenplay.sol\":12298:12318  fromBalance - amount */\n      dup8\n      dup8\n      sub\n        /* \"contracts/tokenplay.sol\":12280:12318  _balances[from] = fromBalance - amount */\n      swap1\n      sstore\n        /* \"contracts/tokenplay.sol\":12495:12508  _balances[to] */\n      swap4\n      dup8\n      and\n      dup1\n      dup4\n      mstore\n      swap2\n      dup5\n      swap1\n      keccak256\n        /* \"contracts/tokenplay.sol\":12495:12518  _balances[to] += amount */\n      dup1\n      sload\n      dup8\n      add\n      swap1\n      sstore\n        /* \"contracts/tokenplay.sol\":12544:12570  Transfer(from, to, amount) */\n      swap3\n      mload\n        /* \"#utility.yul\":1342:1367   */\n      dup6\n      dup2\n      mstore\n        /* \"contracts/tokenplay.sol\":12495:12508  _balances[to] */\n      swap1\n      swap3\n        /* \"contracts/tokenplay.sol\":12544:12570  Transfer(from, to, amount) */\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap2\n        /* \"#utility.yul\":1315:1333   */\n      add\n        /* \"contracts/tokenplay.sol\":12544:12570  Transfer(from, to, amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/tokenplay.sol\":12581:12618  _afterTokenTransfer(from, to, amount) */\n      tag_122\n        /* \"contracts/tokenplay.sol\":16454:16545  function _beforeTokenTransfer(address from, address to, uint256 amount) internal virtual {} */\n      jump\n        /* \"#utility.yul\":14:562   */\n    tag_18:\n        /* \"#utility.yul\":126:130   */\n      0x00\n        /* \"#utility.yul\":155:157   */\n      0x20\n        /* \"#utility.yul\":184:186   */\n      dup1\n        /* \"#utility.yul\":173:182   */\n      dup4\n        /* \"#utility.yul\":166:187   */\n      mstore\n        /* \"#utility.yul\":216:222   */\n      dup4\n        /* \"#utility.yul\":210:223   */\n      mload\n        /* \"#utility.yul\":259:265   */\n      dup1\n        /* \"#utility.yul\":254:256   */\n      dup3\n        /* \"#utility.yul\":243:252   */\n      dup6\n        /* \"#utility.yul\":239:257   */\n      add\n        /* \"#utility.yul\":232:266   */\n      mstore\n        /* \"#utility.yul\":284:285   */\n      0x00\n        /* \"#utility.yul\":294:434   */\n    tag_143:\n        /* \"#utility.yul\":308:314   */\n      dup2\n        /* \"#utility.yul\":305:306   */\n      dup2\n        /* \"#utility.yul\":302:315   */\n      lt\n        /* \"#utility.yul\":294:434   */\n      iszero\n      tag_145\n      jumpi\n        /* \"#utility.yul\":403:417   */\n      dup6\n      dup2\n      add\n        /* \"#utility.yul\":399:422   */\n      dup4\n      add\n        /* \"#utility.yul\":393:423   */\n      mload\n        /* \"#utility.yul\":369:386   */\n      dup6\n      dup3\n      add\n        /* \"#utility.yul\":388:390   */\n      0x40\n        /* \"#utility.yul\":365:391   */\n      add\n        /* \"#utility.yul\":358:424   */\n      mstore\n        /* \"#utility.yul\":323:333   */\n      dup3\n      add\n        /* \"#utility.yul\":294:434   */\n      jump(tag_143)\n    tag_145:\n        /* \"#utility.yul\":298:301   */\n      pop\n        /* \"#utility.yul\":483:484   */\n      0x00\n        /* \"#utility.yul\":478:480   */\n      0x40\n        /* \"#utility.yul\":469:475   */\n      dup3\n        /* \"#utility.yul\":458:467   */\n      dup7\n        /* \"#utility.yul\":454:476   */\n      add\n        /* \"#utility.yul\":450:481   */\n      add\n        /* \"#utility.yul\":443:485   */\n      mstore\n        /* \"#utility.yul\":553:555   */\n      0x40\n        /* \"#utility.yul\":546:548   */\n      0x1f\n        /* \"#utility.yul\":542:549   */\n      not\n        /* \"#utility.yul\":537:539   */\n      0x1f\n        /* \"#utility.yul\":529:535   */\n      dup4\n        /* \"#utility.yul\":525:540   */\n      add\n        /* \"#utility.yul\":521:550   */\n      and\n        /* \"#utility.yul\":510:519   */\n      dup6\n        /* \"#utility.yul\":506:551   */\n      add\n        /* \"#utility.yul\":502:556   */\n      add\n        /* \"#utility.yul\":494:556   */\n      swap3\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":14:562   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":567:740   */\n    tag_140:\n        /* \"#utility.yul\":635:655   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":684:715   */\n      dup2\n      and\n        /* \"#utility.yul\":674:716   */\n      dup2\n      eq\n        /* \"#utility.yul\":664:734   */\n      tag_147\n      jumpi\n        /* \"#utility.yul\":730:731   */\n      0x00\n        /* \"#utility.yul\":727:728   */\n      dup1\n        /* \"#utility.yul\":720:732   */\n      revert\n        /* \"#utility.yul\":664:734   */\n    tag_147:\n        /* \"#utility.yul\":567:740   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":745:999   */\n    tag_21:\n        /* \"#utility.yul\":813:819   */\n      0x00\n        /* \"#utility.yul\":821:827   */\n      dup1\n        /* \"#utility.yul\":874:876   */\n      0x40\n        /* \"#utility.yul\":862:871   */\n      dup4\n        /* \"#utility.yul\":853:860   */\n      dup6\n        /* \"#utility.yul\":849:872   */\n      sub\n        /* \"#utility.yul\":845:877   */\n      slt\n        /* \"#utility.yul\":842:894   */\n      iszero\n      tag_149\n      jumpi\n        /* \"#utility.yul\":890:891   */\n      0x00\n        /* \"#utility.yul\":887:888   */\n      dup1\n        /* \"#utility.yul\":880:892   */\n      revert\n        /* \"#utility.yul\":842:894   */\n    tag_149:\n        /* \"#utility.yul\":913:942   */\n      tag_150\n        /* \"#utility.yul\":932:941   */\n      dup4\n        /* \"#utility.yul\":913:942   */\n      tag_140\n      jump\t// in\n    tag_150:\n        /* \"#utility.yul\":903:942   */\n      swap5\n        /* \"#utility.yul\":989:991   */\n      0x20\n        /* \"#utility.yul\":974:992   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":961:993   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":745:999   */\n      jump\t// out\n        /* \"#utility.yul\":1378:1706   */\n    tag_31:\n        /* \"#utility.yul\":1455:1461   */\n      0x00\n        /* \"#utility.yul\":1463:1469   */\n      dup1\n        /* \"#utility.yul\":1471:1477   */\n      0x00\n        /* \"#utility.yul\":1524:1526   */\n      0x60\n        /* \"#utility.yul\":1512:1521   */\n      dup5\n        /* \"#utility.yul\":1503:1510   */\n      dup7\n        /* \"#utility.yul\":1499:1522   */\n      sub\n        /* \"#utility.yul\":1495:1527   */\n      slt\n        /* \"#utility.yul\":1492:1544   */\n      iszero\n      tag_154\n      jumpi\n        /* \"#utility.yul\":1540:1541   */\n      0x00\n        /* \"#utility.yul\":1537:1538   */\n      dup1\n        /* \"#utility.yul\":1530:1542   */\n      revert\n        /* \"#utility.yul\":1492:1544   */\n    tag_154:\n        /* \"#utility.yul\":1563:1592   */\n      tag_155\n        /* \"#utility.yul\":1582:1591   */\n      dup5\n        /* \"#utility.yul\":1563:1592   */\n      tag_140\n      jump\t// in\n    tag_155:\n        /* \"#utility.yul\":1553:1592   */\n      swap3\n      pop\n        /* \"#utility.yul\":1611:1649   */\n      tag_156\n        /* \"#utility.yul\":1645:1647   */\n      0x20\n        /* \"#utility.yul\":1634:1643   */\n      dup6\n        /* \"#utility.yul\":1630:1648   */\n      add\n        /* \"#utility.yul\":1611:1649   */\n      tag_140\n      jump\t// in\n    tag_156:\n        /* \"#utility.yul\":1601:1649   */\n      swap2\n      pop\n        /* \"#utility.yul\":1696:1698   */\n      0x40\n        /* \"#utility.yul\":1685:1694   */\n      dup5\n        /* \"#utility.yul\":1681:1699   */\n      add\n        /* \"#utility.yul\":1668:1700   */\n      calldataload\n        /* \"#utility.yul\":1658:1700   */\n      swap1\n      pop\n        /* \"#utility.yul\":1378:1706   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":1900:2086   */\n    tag_44:\n        /* \"#utility.yul\":1959:1965   */\n      0x00\n        /* \"#utility.yul\":2012:2014   */\n      0x20\n        /* \"#utility.yul\":2000:2009   */\n      dup3\n        /* \"#utility.yul\":1991:1998   */\n      dup5\n        /* \"#utility.yul\":1987:2010   */\n      sub\n        /* \"#utility.yul\":1983:2015   */\n      slt\n        /* \"#utility.yul\":1980:2032   */\n      iszero\n      tag_159\n      jumpi\n        /* \"#utility.yul\":2028:2029   */\n      0x00\n        /* \"#utility.yul\":2025:2026   */\n      dup1\n        /* \"#utility.yul\":2018:2030   */\n      revert\n        /* \"#utility.yul\":1980:2032   */\n    tag_159:\n        /* \"#utility.yul\":2051:2080   */\n      tag_160\n        /* \"#utility.yul\":2070:2079   */\n      dup3\n        /* \"#utility.yul\":2051:2080   */\n      tag_140\n      jump\t// in\n    tag_160:\n        /* \"#utility.yul\":2041:2080   */\n      swap4\n        /* \"#utility.yul\":1900:2086   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2091:2351   */\n    tag_60:\n        /* \"#utility.yul\":2159:2165   */\n      0x00\n        /* \"#utility.yul\":2167:2173   */\n      dup1\n        /* \"#utility.yul\":2220:2222   */\n      0x40\n        /* \"#utility.yul\":2208:2217   */\n      dup4\n        /* \"#utility.yul\":2199:2206   */\n      dup6\n        /* \"#utility.yul\":2195:2218   */\n      sub\n        /* \"#utility.yul\":2191:2223   */\n      slt\n        /* \"#utility.yul\":2188:2240   */\n      iszero\n      tag_162\n      jumpi\n        /* \"#utility.yul\":2236:2237   */\n      0x00\n        /* \"#utility.yul\":2233:2234   */\n      dup1\n        /* \"#utility.yul\":2226:2238   */\n      revert\n        /* \"#utility.yul\":2188:2240   */\n    tag_162:\n        /* \"#utility.yul\":2259:2288   */\n      tag_163\n        /* \"#utility.yul\":2278:2287   */\n      dup4\n        /* \"#utility.yul\":2259:2288   */\n      tag_140\n      jump\t// in\n    tag_163:\n        /* \"#utility.yul\":2249:2288   */\n      swap2\n      pop\n        /* \"#utility.yul\":2307:2345   */\n      tag_164\n        /* \"#utility.yul\":2341:2343   */\n      0x20\n        /* \"#utility.yul\":2330:2339   */\n      dup5\n        /* \"#utility.yul\":2326:2344   */\n      add\n        /* \"#utility.yul\":2307:2345   */\n      tag_140\n      jump\t// in\n    tag_164:\n        /* \"#utility.yul\":2297:2345   */\n      swap1\n      pop\n        /* \"#utility.yul\":2091:2351   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2356:2736   */\n    tag_65:\n        /* \"#utility.yul\":2435:2436   */\n      0x01\n        /* \"#utility.yul\":2431:2443   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":2478:2490   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":2499:2560   */\n      tag_166\n      jumpi\n        /* \"#utility.yul\":2553:2557   */\n      0x7f\n        /* \"#utility.yul\":2545:2551   */\n      dup3\n        /* \"#utility.yul\":2541:2558   */\n      and\n        /* \"#utility.yul\":2531:2558   */\n      swap2\n      pop\n        /* \"#utility.yul\":2499:2560   */\n    tag_166:\n        /* \"#utility.yul\":2606:2608   */\n      0x20\n        /* \"#utility.yul\":2598:2604   */\n      dup3\n        /* \"#utility.yul\":2595:2609   */\n      lt\n        /* \"#utility.yul\":2575:2593   */\n      dup2\n        /* \"#utility.yul\":2572:2610   */\n      sub\n        /* \"#utility.yul\":2569:2730   */\n      tag_167\n      jumpi\n        /* \"#utility.yul\":2652:2662   */\n      0x4e487b71\n        /* \"#utility.yul\":2647:2650   */\n      0xe0\n        /* \"#utility.yul\":2643:2663   */\n      shl\n        /* \"#utility.yul\":2640:2641   */\n      0x00\n        /* \"#utility.yul\":2633:2664   */\n      mstore\n        /* \"#utility.yul\":2687:2691   */\n      0x22\n        /* \"#utility.yul\":2684:2685   */\n      0x04\n        /* \"#utility.yul\":2677:2692   */\n      mstore\n        /* \"#utility.yul\":2715:2719   */\n      0x24\n        /* \"#utility.yul\":2712:2713   */\n      0x00\n        /* \"#utility.yul\":2705:2720   */\n      revert\n        /* \"#utility.yul\":2569:2730   */\n    tag_167:\n      pop\n        /* \"#utility.yul\":2356:2736   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2741:2963   */\n    tag_88:\n        /* \"#utility.yul\":2806:2815   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":2827:2837   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":2824:2957   */\n      iszero\n      tag_70\n      jumpi\n        /* \"#utility.yul\":2879:2889   */\n      0x4e487b71\n        /* \"#utility.yul\":2874:2877   */\n      0xe0\n        /* \"#utility.yul\":2870:2890   */\n      shl\n        /* \"#utility.yul\":2867:2868   */\n      0x00\n        /* \"#utility.yul\":2860:2891   */\n      mstore\n        /* \"#utility.yul\":2914:2918   */\n      0x11\n        /* \"#utility.yul\":2911:2912   */\n      0x04\n        /* \"#utility.yul\":2904:2919   */\n      mstore\n        /* \"#utility.yul\":2942:2946   */\n      0x24\n        /* \"#utility.yul\":2939:2940   */\n      0x00\n        /* \"#utility.yul\":2932:2947   */\n      revert\n\n    auxdata: 0xa26469706673582212205b32cccc6cef10cdd9524f6f09a5380e681c8b939428a4d4ae4d7de348be571464736f6c63430008140033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_162": {
									"entryPoint": null,
									"id": 162,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_string_fromMemory": {
									"entryPoint": 109,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory": {
									"entryPoint": 279,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"array_dataslot_string_storage": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_string_storage": {
									"entryPoint": 439,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 521,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 381,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x41": {
									"entryPoint": 89,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:4144:1",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "46:95:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "63:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "70:3:1",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "75:10:1",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "66:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "66:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "56:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "56:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "56:31:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "103:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "106:4:1",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "96:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "96:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "96:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "127:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "130:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "120:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "120:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "120:15:1"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "14:127:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "210:776:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "259:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "268:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "271:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "261:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "261:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "261:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "238:6:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "246:4:1",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "234:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "234:17:1"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "253:3:1"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "230:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "230:27:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "223:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "223:35:1"
															},
															"nodeType": "YulIf",
															"src": "220:55:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "284:23:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "300:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "294:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "294:13:1"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "288:2:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "316:28:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "334:2:1",
																				"type": "",
																				"value": "64"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "338:1:1",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "330:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "330:10:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "342:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "326:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "326:18:1"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "320:2:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "367:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "369:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "369:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "369:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "359:2:1"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "363:2:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "356:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "356:10:1"
															},
															"nodeType": "YulIf",
															"src": "353:36:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "398:17:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "412:2:1",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "408:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "408:7:1"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "402:2:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "424:23:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "444:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "438:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "438:9:1"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "428:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "456:71:1",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "478:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "_1",
																										"nodeType": "YulIdentifier",
																										"src": "502:2:1"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "506:4:1",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "498:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "498:13:1"
																							},
																							{
																								"name": "_3",
																								"nodeType": "YulIdentifier",
																								"src": "513:2:1"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nodeType": "YulIdentifier",
																							"src": "494:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "494:22:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "518:2:1",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "490:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "490:31:1"
																			},
																			{
																				"name": "_3",
																				"nodeType": "YulIdentifier",
																				"src": "523:2:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "486:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "486:40:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "474:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "474:53:1"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "460:10:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "586:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "588:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "588:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "588:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "545:10:1"
																			},
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "557:2:1"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "542:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "542:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "565:10:1"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "577:6:1"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "562:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "562:22:1"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "539:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "539:46:1"
															},
															"nodeType": "YulIf",
															"src": "536:72:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "624:2:1",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "628:10:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "617:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "617:22:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "617:22:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "655:6:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "663:2:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "648:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "648:18:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "648:18:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "675:14:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "685:4:1",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "_4",
																	"nodeType": "YulTypedName",
																	"src": "679:2:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "735:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "744:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "747:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "737:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "737:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "737:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "712:6:1"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "720:2:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "708:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "708:15:1"
																			},
																			{
																				"name": "_4",
																				"nodeType": "YulIdentifier",
																				"src": "725:2:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "704:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "704:24:1"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "730:3:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "701:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "701:33:1"
															},
															"nodeType": "YulIf",
															"src": "698:53:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "760:10:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "769:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "764:1:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "825:87:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "memPtr",
																									"nodeType": "YulIdentifier",
																									"src": "854:6:1"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "862:1:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "850:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "850:14:1"
																						},
																						{
																							"name": "_4",
																							"nodeType": "YulIdentifier",
																							"src": "866:2:1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "846:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "846:23:1"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "offset",
																											"nodeType": "YulIdentifier",
																											"src": "885:6:1"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "893:1:1"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "881:3:1"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "881:14:1"
																								},
																								{
																									"name": "_4",
																									"nodeType": "YulIdentifier",
																									"src": "897:2:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "877:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "877:23:1"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "871:5:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "871:30:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "839:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "839:63:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "839:63:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "790:1:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "793:2:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "787:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "787:9:1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "797:19:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "799:15:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "808:1:1"
																				},
																				{
																					"name": "_4",
																					"nodeType": "YulIdentifier",
																					"src": "811:2:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "804:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "804:10:1"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "799:1:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "783:3:1",
																"statements": []
															},
															"src": "779:133:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "memPtr",
																						"nodeType": "YulIdentifier",
																						"src": "936:6:1"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "944:2:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "932:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "932:15:1"
																			},
																			{
																				"name": "_4",
																				"nodeType": "YulIdentifier",
																				"src": "949:2:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "928:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "928:24:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "954:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "921:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "921:35:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "921:35:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "965:15:1",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "974:6:1"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "965:5:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_string_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "184:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "192:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "200:5:1",
														"type": ""
													}
												],
												"src": "146:840:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1109:444:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1155:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1164:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1167:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1157:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1157:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1157:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1130:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1139:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1126:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1126:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1151:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1122:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1122:32:1"
															},
															"nodeType": "YulIf",
															"src": "1119:52:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1180:30:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1200:9:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1194:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1194:16:1"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "1184:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1219:28:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1237:2:1",
																				"type": "",
																				"value": "64"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1241:1:1",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "1233:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1233:10:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1245:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "1229:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1229:18:1"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "1223:2:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1274:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1283:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1286:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1276:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1276:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1276:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1262:6:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1270:2:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1259:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1259:14:1"
															},
															"nodeType": "YulIf",
															"src": "1256:34:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1299:71:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1342:9:1"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "1353:6:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1338:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1338:22:1"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "1362:7:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "1309:28:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1309:61:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1299:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1379:41:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1405:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1416:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1401:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1401:18:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1395:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1395:25:1"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nodeType": "YulTypedName",
																	"src": "1383:8:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1449:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1458:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1461:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1451:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1451:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1451:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nodeType": "YulIdentifier",
																		"src": "1435:8:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1445:2:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1432:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1432:16:1"
															},
															"nodeType": "YulIf",
															"src": "1429:36:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1474:73:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1517:9:1"
																			},
																			{
																				"name": "offset_1",
																				"nodeType": "YulIdentifier",
																				"src": "1528:8:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1513:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1513:24:1"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "1539:7:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "1484:28:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1484:63:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1474:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1067:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1078:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1090:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1098:6:1",
														"type": ""
													}
												],
												"src": "991:562:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1613:325:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1623:22:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1637:1:1",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "1640:4:1"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "1633:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1633:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "1623:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1654:38:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "1684:4:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1690:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1680:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1680:12:1"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "1658:18:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1731:31:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1733:27:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "1747:6:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1755:4:1",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "1743:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1743:17:1"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1733:6:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "1711:18:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1704:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1704:26:1"
															},
															"nodeType": "YulIf",
															"src": "1701:61:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1821:111:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1842:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1849:3:1",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1854:10:1",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "1845:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1845:20:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1835:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1835:31:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1835:31:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1886:1:1",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1889:4:1",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1879:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1879:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1879:15:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1914:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1917:4:1",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1907:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1907:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1907:15:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "1777:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1800:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1808:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "1797:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1797:14:1"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "1774:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1774:38:1"
															},
															"nodeType": "YulIf",
															"src": "1771:161:1"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "1593:4:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1602:6:1",
														"type": ""
													}
												],
												"src": "1558:380:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1999:65:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2016:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "2019:3:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2009:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2009:14:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2009:14:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2032:26:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2050:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2053:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nodeType": "YulIdentifier",
																	"src": "2040:9:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2040:18:1"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "2032:4:1"
																}
															]
														}
													]
												},
												"name": "array_dataslot_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "1982:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "1990:4:1",
														"type": ""
													}
												],
												"src": "1943:121:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2150:464:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2183:425:1",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "2197:11:1",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "2207:1:1",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "_1",
																				"nodeType": "YulTypedName",
																				"src": "2201:2:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "2228:2:1"
																				},
																				{
																					"name": "array",
																					"nodeType": "YulIdentifier",
																					"src": "2232:5:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2221:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2221:17:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2221:17:1"
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "2251:31:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "2273:2:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2277:4:1",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "keccak256",
																				"nodeType": "YulIdentifier",
																				"src": "2263:9:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2263:19:1"
																		},
																		"variables": [
																			{
																				"name": "data",
																				"nodeType": "YulTypedName",
																				"src": "2255:4:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "2295:57:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nodeType": "YulIdentifier",
																					"src": "2318:4:1"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2328:1:1",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "startIndex",
																									"nodeType": "YulIdentifier",
																									"src": "2335:10:1"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "2347:2:1",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "2331:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "2331:19:1"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nodeType": "YulIdentifier",
																						"src": "2324:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2324:27:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "2314:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2314:38:1"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nodeType": "YulTypedName",
																				"src": "2299:11:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "2389:23:1",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "2391:19:1",
																					"value": {
																						"name": "data",
																						"nodeType": "YulIdentifier",
																						"src": "2406:4:1"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nodeType": "YulIdentifier",
																							"src": "2391:11:1"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nodeType": "YulIdentifier",
																					"src": "2371:10:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2383:4:1",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nodeType": "YulIdentifier",
																				"src": "2368:2:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2368:20:1"
																		},
																		"nodeType": "YulIf",
																		"src": "2365:47:1"
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "2425:41:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nodeType": "YulIdentifier",
																					"src": "2439:4:1"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2449:1:1",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nodeType": "YulIdentifier",
																									"src": "2456:3:1"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "2461:2:1",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "2452:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "2452:12:1"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nodeType": "YulIdentifier",
																						"src": "2445:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2445:20:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "2435:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2435:31:1"
																		},
																		"variables": [
																			{
																				"name": "_2",
																				"nodeType": "YulTypedName",
																				"src": "2429:2:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "2479:24:1",
																		"value": {
																			"name": "deleteStart",
																			"nodeType": "YulIdentifier",
																			"src": "2492:11:1"
																		},
																		"variables": [
																			{
																				"name": "start",
																				"nodeType": "YulTypedName",
																				"src": "2483:5:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "2577:21:1",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"name": "start",
																								"nodeType": "YulIdentifier",
																								"src": "2586:5:1"
																							},
																							{
																								"name": "_1",
																								"nodeType": "YulIdentifier",
																								"src": "2593:2:1"
																							}
																						],
																						"functionName": {
																							"name": "sstore",
																							"nodeType": "YulIdentifier",
																							"src": "2579:6:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2579:17:1"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "2579:17:1"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "start",
																					"nodeType": "YulIdentifier",
																					"src": "2527:5:1"
																				},
																				{
																					"name": "_2",
																					"nodeType": "YulIdentifier",
																					"src": "2534:2:1"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nodeType": "YulIdentifier",
																				"src": "2524:2:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2524:13:1"
																		},
																		"nodeType": "YulForLoop",
																		"post": {
																			"nodeType": "YulBlock",
																			"src": "2538:26:1",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "2540:22:1",
																					"value": {
																						"arguments": [
																							{
																								"name": "start",
																								"nodeType": "YulIdentifier",
																								"src": "2553:5:1"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2560:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "2549:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2549:13:1"
																					},
																					"variableNames": [
																						{
																							"name": "start",
																							"nodeType": "YulIdentifier",
																							"src": "2540:5:1"
																						}
																					]
																				}
																			]
																		},
																		"pre": {
																			"nodeType": "YulBlock",
																			"src": "2520:3:1",
																			"statements": []
																		},
																		"src": "2516:82:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nodeType": "YulIdentifier",
																		"src": "2166:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2171:2:1",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2163:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2163:11:1"
															},
															"nodeType": "YulIf",
															"src": "2160:448:1"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "2122:5:1",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "2129:3:1",
														"type": ""
													},
													{
														"name": "startIndex",
														"nodeType": "YulTypedName",
														"src": "2134:10:1",
														"type": ""
													}
												],
												"src": "2069:545:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2704:81:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2714:65:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nodeType": "YulIdentifier",
																				"src": "2729:4:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "2747:1:1",
																										"type": "",
																										"value": "3"
																									},
																									{
																										"name": "len",
																										"nodeType": "YulIdentifier",
																										"src": "2750:3:1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "2743:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2743:11:1"
																							},
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "2760:1:1",
																										"type": "",
																										"value": "0"
																									}
																								],
																								"functionName": {
																									"name": "not",
																									"nodeType": "YulIdentifier",
																									"src": "2756:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2756:6:1"
																							}
																						],
																						"functionName": {
																							"name": "shr",
																							"nodeType": "YulIdentifier",
																							"src": "2739:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2739:24:1"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "2735:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2735:29:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2725:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2725:40:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2771:1:1",
																				"type": "",
																				"value": "1"
																			},
																			{
																				"name": "len",
																				"nodeType": "YulIdentifier",
																				"src": "2774:3:1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "2767:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2767:11:1"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "2722:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2722:57:1"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nodeType": "YulIdentifier",
																	"src": "2714:4:1"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "2681:4:1",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "2687:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nodeType": "YulTypedName",
														"src": "2695:4:1",
														"type": ""
													}
												],
												"src": "2619:166:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2886:1256:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2896:24:1",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "2916:3:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2910:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2910:10:1"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nodeType": "YulTypedName",
																	"src": "2900:6:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2963:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "2965:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2965:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2965:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "2935:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2951:2:1",
																						"type": "",
																						"value": "64"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2955:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "2947:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2947:10:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2959:1:1",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2943:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2943:18:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2932:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2932:30:1"
															},
															"nodeType": "YulIf",
															"src": "2929:56:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "3038:4:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nodeType": "YulIdentifier",
																						"src": "3076:4:1"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nodeType": "YulIdentifier",
																					"src": "3070:5:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3070:11:1"
																			}
																		],
																		"functionName": {
																			"name": "extract_byte_array_length",
																			"nodeType": "YulIdentifier",
																			"src": "3044:25:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3044:38:1"
																	},
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "3084:6:1"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_string_storage",
																	"nodeType": "YulIdentifier",
																	"src": "2994:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2994:97:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2994:97:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3100:18:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "3117:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulTypedName",
																	"src": "3104:9:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3127:23:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "3146:4:1",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "srcOffset_1",
																	"nodeType": "YulTypedName",
																	"src": "3131:11:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3159:24:1",
															"value": {
																"name": "srcOffset_1",
																"nodeType": "YulIdentifier",
																"src": "3172:11:1"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulIdentifier",
																	"src": "3159:9:1"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "3229:656:1",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "3243:35:1",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "3262:6:1"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "3274:2:1",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nodeType": "YulIdentifier",
																								"src": "3270:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "3270:7:1"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nodeType": "YulIdentifier",
																						"src": "3258:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3258:20:1"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nodeType": "YulTypedName",
																						"src": "3247:7:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "3291:49:1",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "3335:4:1"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_string_storage",
																						"nodeType": "YulIdentifier",
																						"src": "3305:29:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3305:35:1"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nodeType": "YulTypedName",
																						"src": "3295:6:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "3353:10:1",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3362:1:1",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nodeType": "YulTypedName",
																						"src": "3357:1:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "3440:172:1",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "3465:6:1"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nodeType": "YulIdentifier",
																														"src": "3483:3:1"
																													},
																													{
																														"name": "srcOffset",
																														"nodeType": "YulIdentifier",
																														"src": "3488:9:1"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nodeType": "YulIdentifier",
																													"src": "3479:3:1"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "3479:19:1"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nodeType": "YulIdentifier",
																											"src": "3473:5:1"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "3473:26:1"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "3458:6:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3458:42:1"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "3458:42:1"
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "3517:24:1",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "3531:6:1"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "3539:1:1",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "3527:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3527:14:1"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nodeType": "YulIdentifier",
																									"src": "3517:6:1"
																								}
																							]
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "3558:40:1",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nodeType": "YulIdentifier",
																										"src": "3575:9:1"
																									},
																									{
																										"name": "srcOffset_1",
																										"nodeType": "YulIdentifier",
																										"src": "3586:11:1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "3571:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3571:27:1"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nodeType": "YulIdentifier",
																									"src": "3558:9:1"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "3387:1:1"
																						},
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "3390:7:1"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "3384:2:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3384:14:1"
																				},
																				"nodeType": "YulForLoop",
																				"post": {
																					"nodeType": "YulBlock",
																					"src": "3399:28:1",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "3401:24:1",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nodeType": "YulIdentifier",
																										"src": "3410:1:1"
																									},
																									{
																										"name": "srcOffset_1",
																										"nodeType": "YulIdentifier",
																										"src": "3413:11:1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "3406:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3406:19:1"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "3401:1:1"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nodeType": "YulBlock",
																					"src": "3380:3:1",
																					"statements": []
																				},
																				"src": "3376:236:1"
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "3660:166:1",
																					"statements": [
																						{
																							"nodeType": "YulVariableDeclaration",
																							"src": "3678:43:1",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "3705:3:1"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "3710:9:1"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "3701:3:1"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "3701:19:1"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "3695:5:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3695:26:1"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nodeType": "YulTypedName",
																									"src": "3682:9:1",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "3745:6:1"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nodeType": "YulIdentifier",
																												"src": "3757:9:1"
																											},
																											{
																												"arguments": [
																													{
																														"arguments": [
																															{
																																"arguments": [
																																	{
																																		"arguments": [
																																			{
																																				"kind": "number",
																																				"nodeType": "YulLiteral",
																																				"src": "3784:1:1",
																																				"type": "",
																																				"value": "3"
																																			},
																																			{
																																				"name": "newLen",
																																				"nodeType": "YulIdentifier",
																																				"src": "3787:6:1"
																																			}
																																		],
																																		"functionName": {
																																			"name": "shl",
																																			"nodeType": "YulIdentifier",
																																			"src": "3780:3:1"
																																		},
																																		"nodeType": "YulFunctionCall",
																																		"src": "3780:14:1"
																																	},
																																	{
																																		"kind": "number",
																																		"nodeType": "YulLiteral",
																																		"src": "3796:3:1",
																																		"type": "",
																																		"value": "248"
																																	}
																																],
																																"functionName": {
																																	"name": "and",
																																	"nodeType": "YulIdentifier",
																																	"src": "3776:3:1"
																																},
																																"nodeType": "YulFunctionCall",
																																"src": "3776:24:1"
																															},
																															{
																																"arguments": [
																																	{
																																		"kind": "number",
																																		"nodeType": "YulLiteral",
																																		"src": "3806:1:1",
																																		"type": "",
																																		"value": "0"
																																	}
																																],
																																"functionName": {
																																	"name": "not",
																																	"nodeType": "YulIdentifier",
																																	"src": "3802:3:1"
																																},
																																"nodeType": "YulFunctionCall",
																																"src": "3802:6:1"
																															}
																														],
																														"functionName": {
																															"name": "shr",
																															"nodeType": "YulIdentifier",
																															"src": "3772:3:1"
																														},
																														"nodeType": "YulFunctionCall",
																														"src": "3772:37:1"
																													}
																												],
																												"functionName": {
																													"name": "not",
																													"nodeType": "YulIdentifier",
																													"src": "3768:3:1"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "3768:42:1"
																											}
																										],
																										"functionName": {
																											"name": "and",
																											"nodeType": "YulIdentifier",
																											"src": "3753:3:1"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "3753:58:1"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "3738:6:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3738:74:1"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "3738:74:1"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "3631:7:1"
																						},
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "3640:6:1"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "3628:2:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3628:19:1"
																				},
																				"nodeType": "YulIf",
																				"src": "3625:201:1"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "3846:4:1"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "3860:1:1",
																											"type": "",
																											"value": "1"
																										},
																										{
																											"name": "newLen",
																											"nodeType": "YulIdentifier",
																											"src": "3863:6:1"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nodeType": "YulIdentifier",
																										"src": "3856:3:1"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "3856:14:1"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "3872:1:1",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "3852:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "3852:22:1"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "3839:6:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3839:36:1"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "3839:36:1"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "3222:663:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3227:1:1",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "3902:234:1",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "3916:14:1",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3929:1:1",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nodeType": "YulTypedName",
																						"src": "3920:5:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "3965:67:1",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "3983:35:1",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "4002:3:1"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "4007:9:1"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "3998:3:1"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "3998:19:1"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "3992:5:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3992:26:1"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "3983:5:1"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nodeType": "YulIdentifier",
																					"src": "3946:6:1"
																				},
																				"nodeType": "YulIf",
																				"src": "3943:89:1"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "4052:4:1"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "4111:5:1"
																								},
																								{
																									"name": "newLen",
																									"nodeType": "YulIdentifier",
																									"src": "4118:6:1"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nodeType": "YulIdentifier",
																								"src": "4058:52:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "4058:67:1"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "4045:6:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4045:81:1"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "4045:81:1"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "3894:242:1",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "3202:6:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3210:2:1",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3199:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3199:14:1"
															},
															"nodeType": "YulSwitch",
															"src": "3192:944:1"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "2871:4:1",
														"type": ""
													},
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "2877:3:1",
														"type": ""
													}
												],
												"src": "2790:1352:1"
											}
										]
									},
									"contents": "{\n    { }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_string_fromMemory(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := mload(offset)\n        let _2 := sub(shl(64, 1), 1)\n        if gt(_1, _2) { panic_error_0x41() }\n        let _3 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_1, 0x1f), _3), 63), _3))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _1)\n        let _4 := 0x20\n        if gt(add(add(offset, _1), _4), end) { revert(0, 0) }\n        let i := 0\n        for { } lt(i, _1) { i := add(i, _4) }\n        {\n            mstore(add(add(memPtr, i), _4), mload(add(add(offset, i), _4)))\n        }\n        mstore(add(add(memPtr, _1), _4), 0)\n        array := memPtr\n    }\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let offset := mload(headStart)\n        let _1 := sub(shl(64, 1), 1)\n        if gt(offset, _1) { revert(0, 0) }\n        value0 := abi_decode_string_fromMemory(add(headStart, offset), dataEnd)\n        let offset_1 := mload(add(headStart, 32))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value1 := abi_decode_string_fromMemory(add(headStart, offset_1), dataEnd)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            let _1 := 0\n            mstore(_1, array)\n            let data := keccak256(_1, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _2 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _2) { start := add(start, 1) }\n            { sstore(start, _1) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := srcOffset_1\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801562000010575f80fd5b5060405162000b0e38038062000b0e833981016040819052620000339162000117565b600362000041838262000209565b50600462000050828262000209565b505050620002d1565b634e487b7160e01b5f52604160045260245ffd5b5f82601f8301126200007d575f80fd5b81516001600160401b03808211156200009a576200009a62000059565b604051601f8301601f19908116603f01168101908282118183101715620000c557620000c562000059565b81604052838152602092508683858801011115620000e1575f80fd5b5f91505b83821015620001045785820183015181830184015290820190620000e5565b5f93810190920192909252949350505050565b5f806040838503121562000129575f80fd5b82516001600160401b038082111562000140575f80fd5b6200014e868387016200006d565b9350602085015191508082111562000164575f80fd5b5062000173858286016200006d565b9150509250929050565b600181811c908216806200019257607f821691505b602082108103620001b157634e487b7160e01b5f52602260045260245ffd5b50919050565b601f82111562000204575f81815260208120601f850160051c81016020861015620001df5750805b601f850160051c820191505b818110156200020057828155600101620001eb565b5050505b505050565b81516001600160401b0381111562000225576200022562000059565b6200023d816200023684546200017d565b84620001b7565b602080601f83116001811462000273575f84156200025b5750858301515b5f19600386901b1c1916600185901b17855562000200565b5f85815260208120601f198616915b82811015620002a35788860151825594840194600190910190840162000282565b5085821015620002c157878501515f19600388901b60f8161c191681555b5050505050600190811b01905550565b61082f80620002df5f395ff3fe608060405234801561000f575f80fd5b50600436106100a6575f3560e01c8063395093511161006e578063395093511461011f57806370a082311461013257806395d89b411461015a578063a457c2d714610162578063a9059cbb14610175578063dd62ed3e14610188575f80fd5b806306fdde03146100aa578063095ea7b3146100c857806318160ddd146100eb57806323b872dd146100fd578063313ce56714610110575b5f80fd5b6100b261019b565b6040516100bf919061068a565b60405180910390f35b6100db6100d63660046106f0565b61022b565b60405190151581526020016100bf565b6002545b6040519081526020016100bf565b6100db61010b366004610718565b610244565b604051601281526020016100bf565b6100db61012d3660046106f0565b610267565b6100ef610140366004610751565b6001600160a01b03165f9081526020819052604090205490565b6100b2610288565b6100db6101703660046106f0565b610297565b6100db6101833660046106f0565b610316565b6100ef610196366004610771565b610323565b6060600380546101aa906107a2565b80601f01602080910402602001604051908101604052809291908181526020018280546101d6906107a2565b80156102215780601f106101f857610100808354040283529160200191610221565b820191905f5260205f20905b81548152906001019060200180831161020457829003601f168201915b5050505050905090565b5f3361023881858561034d565b60019150505b92915050565b5f33610251858285610470565b61025c8585856104e8565b506001949350505050565b5f336102388185856102798383610323565b61028391906107da565b61034d565b6060600480546101aa906107a2565b5f33816102a48286610323565b9050838110156103095760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b61025c828686840361034d565b5f336102388185856104e8565b6001600160a01b039182165f90815260016020908152604080832093909416825291909152205490565b6001600160a01b0383166103af5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610300565b6001600160a01b0382166104105760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610300565b6001600160a01b038381165f8181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b5f61047b8484610323565b90505f1981146104e257818110156104d55760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610300565b6104e2848484840361034d565b50505050565b6001600160a01b03831661054c5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610300565b6001600160a01b0382166105ae5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610300565b6001600160a01b0383165f90815260208190526040902054818110156106255760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610300565b6001600160a01b038481165f81815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a36104e2565b5f6020808352835180828501525f5b818110156106b557858101830151858201604001528201610699565b505f604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b03811681146106eb575f80fd5b919050565b5f8060408385031215610701575f80fd5b61070a836106d5565b946020939093013593505050565b5f805f6060848603121561072a575f80fd5b610733846106d5565b9250610741602085016106d5565b9150604084013590509250925092565b5f60208284031215610761575f80fd5b61076a826106d5565b9392505050565b5f8060408385031215610782575f80fd5b61078b836106d5565b9150610799602084016106d5565b90509250929050565b600181811c908216806107b657607f821691505b6020821081036107d457634e487b7160e01b5f52602260045260245ffd5b50919050565b8082018082111561023e57634e487b7160e01b5f52601160045260245ffdfea26469706673582212205b32cccc6cef10cdd9524f6f09a5380e681c8b939428a4d4ae4d7de348be571464736f6c63430008140033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x10 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0xB0E CODESIZE SUB DUP1 PUSH3 0xB0E DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x33 SWAP2 PUSH3 0x117 JUMP JUMPDEST PUSH1 0x3 PUSH3 0x41 DUP4 DUP3 PUSH3 0x209 JUMP JUMPDEST POP PUSH1 0x4 PUSH3 0x50 DUP3 DUP3 PUSH3 0x209 JUMP JUMPDEST POP POP POP PUSH3 0x2D1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x7D JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x9A JUMPI PUSH3 0x9A PUSH3 0x59 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH3 0xC5 JUMPI PUSH3 0xC5 PUSH3 0x59 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE PUSH1 0x20 SWAP3 POP DUP7 DUP4 DUP6 DUP9 ADD ADD GT ISZERO PUSH3 0xE1 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 SWAP2 POP JUMPDEST DUP4 DUP3 LT ISZERO PUSH3 0x104 JUMPI DUP6 DUP3 ADD DUP4 ADD MLOAD DUP2 DUP4 ADD DUP5 ADD MSTORE SWAP1 DUP3 ADD SWAP1 PUSH3 0xE5 JUMP JUMPDEST PUSH0 SWAP4 DUP2 ADD SWAP1 SWAP3 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x129 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x140 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH3 0x14E DUP7 DUP4 DUP8 ADD PUSH3 0x6D JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD MLOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH3 0x164 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH3 0x173 DUP6 DUP3 DUP7 ADD PUSH3 0x6D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x192 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x1B1 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x204 JUMPI PUSH0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH3 0x1DF JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x200 JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x1EB JUMP JUMPDEST POP POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH3 0x225 JUMPI PUSH3 0x225 PUSH3 0x59 JUMP JUMPDEST PUSH3 0x23D DUP2 PUSH3 0x236 DUP5 SLOAD PUSH3 0x17D JUMP JUMPDEST DUP5 PUSH3 0x1B7 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x273 JUMPI PUSH0 DUP5 ISZERO PUSH3 0x25B JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH3 0x200 JUMP JUMPDEST PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x2A3 JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH3 0x282 JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH3 0x2C1 JUMPI DUP8 DUP6 ADD MLOAD PUSH0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x82F DUP1 PUSH3 0x2DF PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA6 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x6E JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x11F JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x132 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x15A JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x162 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x175 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x188 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAA JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xC8 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xEB JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0xFD JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x110 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xB2 PUSH2 0x19B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xBF SWAP2 SWAP1 PUSH2 0x68A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDB PUSH2 0xD6 CALLDATASIZE PUSH1 0x4 PUSH2 0x6F0 JUMP JUMPDEST PUSH2 0x22B JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xBF JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xBF JUMP JUMPDEST PUSH2 0xDB PUSH2 0x10B CALLDATASIZE PUSH1 0x4 PUSH2 0x718 JUMP JUMPDEST PUSH2 0x244 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xBF JUMP JUMPDEST PUSH2 0xDB PUSH2 0x12D CALLDATASIZE PUSH1 0x4 PUSH2 0x6F0 JUMP JUMPDEST PUSH2 0x267 JUMP JUMPDEST PUSH2 0xEF PUSH2 0x140 CALLDATASIZE PUSH1 0x4 PUSH2 0x751 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xB2 PUSH2 0x288 JUMP JUMPDEST PUSH2 0xDB PUSH2 0x170 CALLDATASIZE PUSH1 0x4 PUSH2 0x6F0 JUMP JUMPDEST PUSH2 0x297 JUMP JUMPDEST PUSH2 0xDB PUSH2 0x183 CALLDATASIZE PUSH1 0x4 PUSH2 0x6F0 JUMP JUMPDEST PUSH2 0x316 JUMP JUMPDEST PUSH2 0xEF PUSH2 0x196 CALLDATASIZE PUSH1 0x4 PUSH2 0x771 JUMP JUMPDEST PUSH2 0x323 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x1AA SWAP1 PUSH2 0x7A2 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1D6 SWAP1 PUSH2 0x7A2 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x221 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1F8 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x221 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x204 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 CALLER PUSH2 0x238 DUP2 DUP6 DUP6 PUSH2 0x34D JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER PUSH2 0x251 DUP6 DUP3 DUP6 PUSH2 0x470 JUMP JUMPDEST PUSH2 0x25C DUP6 DUP6 DUP6 PUSH2 0x4E8 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 CALLER PUSH2 0x238 DUP2 DUP6 DUP6 PUSH2 0x279 DUP4 DUP4 PUSH2 0x323 JUMP JUMPDEST PUSH2 0x283 SWAP2 SWAP1 PUSH2 0x7DA JUMP JUMPDEST PUSH2 0x34D JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x1AA SWAP1 PUSH2 0x7A2 JUMP JUMPDEST PUSH0 CALLER DUP2 PUSH2 0x2A4 DUP3 DUP7 PUSH2 0x323 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x309 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x25C DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x34D JUMP JUMPDEST PUSH0 CALLER PUSH2 0x238 DUP2 DUP6 DUP6 PUSH2 0x4E8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x3AF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x300 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x410 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x300 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x47B DUP5 DUP5 PUSH2 0x323 JUMP JUMPDEST SWAP1 POP PUSH0 NOT DUP2 EQ PUSH2 0x4E2 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x4D5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x300 JUMP JUMPDEST PUSH2 0x4E2 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x34D JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x54C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x300 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x5AE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x300 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x625 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x300 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP8 DUP8 SUB SWAP1 SSTORE SWAP4 DUP8 AND DUP1 DUP4 MSTORE SWAP2 DUP5 SWAP1 KECCAK256 DUP1 SLOAD DUP8 ADD SWAP1 SSTORE SWAP3 MLOAD DUP6 DUP2 MSTORE SWAP1 SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x4E2 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x6B5 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x699 JUMP JUMPDEST POP PUSH0 PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x6EB JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x701 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x70A DUP4 PUSH2 0x6D5 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x72A JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x733 DUP5 PUSH2 0x6D5 JUMP JUMPDEST SWAP3 POP PUSH2 0x741 PUSH1 0x20 DUP6 ADD PUSH2 0x6D5 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x761 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x76A DUP3 PUSH2 0x6D5 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x782 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x78B DUP4 PUSH2 0x6D5 JUMP JUMPDEST SWAP2 POP PUSH2 0x799 PUSH1 0x20 DUP5 ADD PUSH2 0x6D5 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x7B6 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x7D4 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x23E JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 JUMPDEST ORIGIN 0xCC 0xCC PUSH13 0xEF10CDD9524F6F09A5380E681C DUP12 SWAP4 SWAP5 0x28 LOG4 0xD4 0xAE 0x4D PUSH30 0xE348BE571464736F6C634300081400330000000000000000000000000000 ",
							"sourceMap": "5913:11312:0:-:0;;;6361:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6427:5;:13;6435:5;6427;:13;:::i;:::-;-1:-1:-1;6450:7:0;:17;6460:7;6450;:17;:::i;:::-;;6361:113;;5913:11312;;14:127:1;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:840;200:5;253:3;246:4;238:6;234:17;230:27;220:55;;271:1;268;261:12;220:55;294:13;;-1:-1:-1;;;;;356:10:1;;;353:36;;;369:18;;:::i;:::-;444:2;438:9;412:2;498:13;;-1:-1:-1;;494:22:1;;;518:2;490:31;486:40;474:53;;;542:18;;;562:22;;;539:46;536:72;;;588:18;;:::i;:::-;628:10;624:2;617:22;663:2;655:6;648:18;685:4;675:14;;730:3;725:2;720;712:6;708:15;704:24;701:33;698:53;;;747:1;744;737:12;698:53;769:1;760:10;;779:133;793:2;790:1;787:9;779:133;;;881:14;;;877:23;;871:30;850:14;;;846:23;;839:63;804:10;;;;779:133;;;954:1;932:15;;;928:24;;;921:35;;;;936:6;146:840;-1:-1:-1;;;;146:840:1:o;991:562::-;1090:6;1098;1151:2;1139:9;1130:7;1126:23;1122:32;1119:52;;;1167:1;1164;1157:12;1119:52;1194:16;;-1:-1:-1;;;;;1259:14:1;;;1256:34;;;1286:1;1283;1276:12;1256:34;1309:61;1362:7;1353:6;1342:9;1338:22;1309:61;:::i;:::-;1299:71;;1416:2;1405:9;1401:18;1395:25;1379:41;;1445:2;1435:8;1432:16;1429:36;;;1461:1;1458;1451:12;1429:36;;1484:63;1539:7;1528:8;1517:9;1513:24;1484:63;:::i;:::-;1474:73;;;991:562;;;;;:::o;1558:380::-;1637:1;1633:12;;;;1680;;;1701:61;;1755:4;1747:6;1743:17;1733:27;;1701:61;1808:2;1800:6;1797:14;1777:18;1774:38;1771:161;;1854:10;1849:3;1845:20;1842:1;1835:31;1889:4;1886:1;1879:15;1917:4;1914:1;1907:15;1771:161;;1558:380;;;:::o;2069:545::-;2171:2;2166:3;2163:11;2160:448;;;2207:1;2232:5;2228:2;2221:17;2277:4;2273:2;2263:19;2347:2;2335:10;2331:19;2328:1;2324:27;2318:4;2314:38;2383:4;2371:10;2368:20;2365:47;;;-1:-1:-1;2406:4:1;2365:47;2461:2;2456:3;2452:12;2449:1;2445:20;2439:4;2435:31;2425:41;;2516:82;2534:2;2527:5;2524:13;2516:82;;;2579:17;;;2560:1;2549:13;2516:82;;;2520:3;;;2160:448;2069:545;;;:::o;2790:1352::-;2910:10;;-1:-1:-1;;;;;2932:30:1;;2929:56;;;2965:18;;:::i;:::-;2994:97;3084:6;3044:38;3076:4;3070:11;3044:38;:::i;:::-;3038:4;2994:97;:::i;:::-;3146:4;;3210:2;3199:14;;3227:1;3222:663;;;;3929:1;3946:6;3943:89;;;-1:-1:-1;3998:19:1;;;3992:26;3943:89;-1:-1:-1;;2747:1:1;2743:11;;;2739:24;2735:29;2725:40;2771:1;2767:11;;;2722:57;4045:81;;3192:944;;3222:663;2016:1;2009:14;;;2053:4;2040:18;;-1:-1:-1;;3258:20:1;;;3376:236;3390:7;3387:1;3384:14;3376:236;;;3479:19;;;3473:26;3458:42;;3571:27;;;;3539:1;3527:14;;;;3406:19;;3376:236;;;3380:3;3640:6;3631:7;3628:19;3625:201;;;3701:19;;;3695:26;-1:-1:-1;;3784:1:1;3780:14;;;3796:3;3776:24;3772:37;3768:42;3753:58;3738:74;;3625:201;-1:-1:-1;;;;;3872:1:1;3856:14;;;3852:22;3839:36;;-1:-1:-1;2790:1352:1:o;:::-;5913:11312:0;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_afterTokenTransfer_703": {
									"entryPoint": null,
									"id": 703,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_638": {
									"entryPoint": 845,
									"id": 638,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_beforeTokenTransfer_692": {
									"entryPoint": null,
									"id": 692,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_msgSender_111": {
									"entryPoint": null,
									"id": 111,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_spendAllowance_681": {
									"entryPoint": 1136,
									"id": 681,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transfer_464": {
									"entryPoint": 1256,
									"id": 464,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_259": {
									"entryPoint": 803,
									"id": 259,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_284": {
									"entryPoint": 555,
									"id": 284,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_216": {
									"entryPoint": null,
									"id": 216,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@decimals_192": {
									"entryPoint": null,
									"id": 192,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@decreaseAllowance_387": {
									"entryPoint": 663,
									"id": 387,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@increaseAllowance_346": {
									"entryPoint": 615,
									"id": 346,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@name_172": {
									"entryPoint": 411,
									"id": 172,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@symbol_182": {
									"entryPoint": 648,
									"id": 182,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_202": {
									"entryPoint": null,
									"id": 202,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_317": {
									"entryPoint": 580,
									"id": 317,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transfer_241": {
									"entryPoint": 790,
									"id": 241,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_address": {
									"entryPoint": 1749,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 1873,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 1905,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 1816,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 1776,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1674,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 2010,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 1954,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:5754:1",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "135:427:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "145:12:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "155:2:1",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "149:2:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "173:9:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "184:2:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "166:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "166:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "166:21:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "196:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "216:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "210:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "210:13:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "200:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "243:9:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "254:2:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "239:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "239:18:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "259:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "232:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "232:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "232:34:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "275:10:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "284:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "279:1:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "344:90:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "headStart",
																									"nodeType": "YulIdentifier",
																									"src": "373:9:1"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "384:1:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "369:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "369:17:1"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "388:2:1",
																							"type": "",
																							"value": "64"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "365:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "365:26:1"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value0",
																											"nodeType": "YulIdentifier",
																											"src": "407:6:1"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "415:1:1"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "403:3:1"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "403:14:1"
																								},
																								{
																									"name": "_1",
																									"nodeType": "YulIdentifier",
																									"src": "419:2:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "399:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "399:23:1"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "393:5:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "393:30:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "358:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "358:66:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "358:66:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "305:1:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "308:6:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "302:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "302:13:1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "316:19:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "318:15:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "327:1:1"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "330:2:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "323:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "323:10:1"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "318:1:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "298:3:1",
																"statements": []
															},
															"src": "294:140:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "458:9:1"
																					},
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "469:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "454:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "454:22:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "478:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "450:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "450:31:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "483:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "443:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "443:42:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "443:42:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "494:62:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "510:9:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "529:6:1"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "537:2:1",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "525:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "525:15:1"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "546:2:1",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "542:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "542:7:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "521:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "521:29:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "506:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "506:45:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "553:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "502:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "502:54:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "494:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "104:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "115:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "126:4:1",
														"type": ""
													}
												],
												"src": "14:548:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "616:124:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "626:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "648:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "635:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "635:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "626:5:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "718:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "727:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "730:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "720:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "720:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "720:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "677:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "688:5:1"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "703:3:1",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "708:1:1",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "699:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "699:11:1"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "712:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "695:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "695:19:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "684:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "684:31:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "674:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "674:42:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "667:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "667:50:1"
															},
															"nodeType": "YulIf",
															"src": "664:70:1"
														}
													]
												},
												"name": "abi_decode_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "595:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "606:5:1",
														"type": ""
													}
												],
												"src": "567:173:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "832:167:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "878:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "887:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "890:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "880:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "880:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "880:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "853:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "862:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "849:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "849:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "874:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "845:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "845:32:1"
															},
															"nodeType": "YulIf",
															"src": "842:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "903:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "932:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "913:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "913:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "903:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "951:42:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "978:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "989:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "974:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "974:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "961:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "961:32:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "951:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "790:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "801:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "813:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "821:6:1",
														"type": ""
													}
												],
												"src": "745:254:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1099:92:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1109:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1121:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1132:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1117:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1117:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1109:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1151:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "1176:6:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "1169:6:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1169:14:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1162:6:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1162:22:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1144:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1144:41:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1144:41:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1068:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1079:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1090:4:1",
														"type": ""
													}
												],
												"src": "1004:187:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1297:76:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1307:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1319:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1330:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1315:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1315:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1307:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1349:9:1"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1360:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1342:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1342:25:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1342:25:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1266:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1277:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1288:4:1",
														"type": ""
													}
												],
												"src": "1196:177:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1482:224:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1528:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1537:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1540:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1530:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1530:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1530:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1503:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1512:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1499:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1499:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1524:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1495:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1495:32:1"
															},
															"nodeType": "YulIf",
															"src": "1492:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1553:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1582:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1563:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1563:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1553:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1601:48:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1634:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1645:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1630:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1630:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1611:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1611:38:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1601:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1658:42:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1685:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1696:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1681:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1681:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1668:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1668:32:1"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "1658:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1432:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1443:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1455:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1463:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "1471:6:1",
														"type": ""
													}
												],
												"src": "1378:328:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1808:87:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1818:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1830:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1841:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1826:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1826:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1818:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1860:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "1875:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1883:4:1",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1871:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1871:17:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1853:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1853:36:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1853:36:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1777:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1788:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1799:4:1",
														"type": ""
													}
												],
												"src": "1711:184:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1970:116:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2016:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2025:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2028:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2018:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2018:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2018:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1991:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2000:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1987:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1987:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2012:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1983:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1983:32:1"
															},
															"nodeType": "YulIf",
															"src": "1980:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2041:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2070:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2051:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2051:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2041:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1936:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1947:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1959:6:1",
														"type": ""
													}
												],
												"src": "1900:186:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2178:173:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2224:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2233:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2236:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2226:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2226:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2226:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2199:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2208:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2195:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2195:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2220:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2191:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2191:32:1"
															},
															"nodeType": "YulIf",
															"src": "2188:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2249:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2278:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2259:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2259:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2249:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2297:48:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2330:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2341:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2326:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2326:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2307:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2307:38:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "2297:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2136:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2147:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2159:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2167:6:1",
														"type": ""
													}
												],
												"src": "2091:260:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2411:325:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2421:22:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2435:1:1",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "2438:4:1"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "2431:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2431:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "2421:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2452:38:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "2482:4:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2488:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "2478:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2478:12:1"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "2456:18:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2529:31:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "2531:27:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "2545:6:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2553:4:1",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "2541:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2541:17:1"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2531:6:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "2509:18:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2502:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2502:26:1"
															},
															"nodeType": "YulIf",
															"src": "2499:61:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2619:111:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2640:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2647:3:1",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2652:10:1",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "2643:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2643:20:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2633:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2633:31:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2633:31:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2684:1:1",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2687:4:1",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2677:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2677:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2677:15:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2712:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2715:4:1",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2705:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2705:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2705:15:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "2575:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2598:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2606:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "2595:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2595:14:1"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "2572:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2572:38:1"
															},
															"nodeType": "YulIf",
															"src": "2569:161:1"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "2391:4:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "2400:6:1",
														"type": ""
													}
												],
												"src": "2356:380:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2789:174:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2799:16:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2810:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "2813:1:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2806:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2806:9:1"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "2799:3:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2846:111:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2867:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2874:3:1",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2879:10:1",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "2870:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2870:20:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2860:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2860:31:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2860:31:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2911:1:1",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2914:4:1",
																					"type": "",
																					"value": "0x11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2904:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2904:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2904:15:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2939:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2942:4:1",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2932:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2932:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2932:15:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2830:1:1"
																	},
																	{
																		"name": "sum",
																		"nodeType": "YulIdentifier",
																		"src": "2833:3:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2827:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2827:10:1"
															},
															"nodeType": "YulIf",
															"src": "2824:133:1"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "2772:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "2775:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "2781:3:1",
														"type": ""
													}
												],
												"src": "2741:222:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3142:227:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3159:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3170:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3152:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3152:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3152:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3193:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3204:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3189:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3189:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3209:2:1",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3182:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3182:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3182:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3232:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3243:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3228:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3228:18:1"
																	},
																	{
																		"hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3248:34:1",
																		"type": "",
																		"value": "ERC20: decreased allowance below"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3221:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3221:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3221:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3303:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3314:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3299:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3299:18:1"
																	},
																	{
																		"hexValue": "207a65726f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3319:7:1",
																		"type": "",
																		"value": " zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3292:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3292:35:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3292:35:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3336:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3348:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3359:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3344:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3344:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3336:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3119:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3133:4:1",
														"type": ""
													}
												],
												"src": "2968:401:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3548:226:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3565:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3576:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3558:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3558:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3558:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3599:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3610:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3595:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3595:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3615:2:1",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3588:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3588:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3588:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3638:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3649:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3634:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3634:18:1"
																	},
																	{
																		"hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f20616464",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3654:34:1",
																		"type": "",
																		"value": "ERC20: approve from the zero add"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3627:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3627:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3627:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3709:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3720:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3705:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3705:18:1"
																	},
																	{
																		"hexValue": "72657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3725:6:1",
																		"type": "",
																		"value": "ress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3698:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3698:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3698:34:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3741:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3753:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3764:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3749:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3749:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3741:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3525:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3539:4:1",
														"type": ""
													}
												],
												"src": "3374:400:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3953:224:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3970:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3981:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3963:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3963:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3963:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4004:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4015:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4000:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4000:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4020:2:1",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3993:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3993:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3993:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4043:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4054:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4039:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4039:18:1"
																	},
																	{
																		"hexValue": "45524332303a20617070726f766520746f20746865207a65726f206164647265",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4059:34:1",
																		"type": "",
																		"value": "ERC20: approve to the zero addre"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4032:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4032:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4032:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4114:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4125:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4110:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4110:18:1"
																	},
																	{
																		"hexValue": "7373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4130:4:1",
																		"type": "",
																		"value": "ss"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4103:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4103:32:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4103:32:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4144:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4156:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4167:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4152:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4152:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4144:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3930:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3944:4:1",
														"type": ""
													}
												],
												"src": "3779:398:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4356:179:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4373:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4384:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4366:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4366:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4366:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4407:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4418:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4403:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4403:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4423:2:1",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4396:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4396:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4396:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4446:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4457:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4442:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4442:18:1"
																	},
																	{
																		"hexValue": "45524332303a20696e73756666696369656e7420616c6c6f77616e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4462:31:1",
																		"type": "",
																		"value": "ERC20: insufficient allowance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4435:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4435:59:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4435:59:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4503:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4515:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4526:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4511:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4511:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4503:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4333:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4347:4:1",
														"type": ""
													}
												],
												"src": "4182:353:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4714:227:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4731:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4742:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4724:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4724:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4724:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4765:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4776:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4761:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4761:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4781:2:1",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4754:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4754:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4754:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4804:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4815:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4800:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4800:18:1"
																	},
																	{
																		"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f206164",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4820:34:1",
																		"type": "",
																		"value": "ERC20: transfer from the zero ad"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4793:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4793:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4793:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4875:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4886:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4871:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4871:18:1"
																	},
																	{
																		"hexValue": "6472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4891:7:1",
																		"type": "",
																		"value": "dress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4864:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4864:35:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4864:35:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4908:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4920:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4931:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4916:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4916:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4908:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4691:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4705:4:1",
														"type": ""
													}
												],
												"src": "4540:401:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5120:225:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5137:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5148:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5130:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5130:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5130:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5171:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5182:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5167:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5167:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5187:2:1",
																		"type": "",
																		"value": "35"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5160:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5160:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5160:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5210:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5221:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5206:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5206:18:1"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5226:34:1",
																		"type": "",
																		"value": "ERC20: transfer to the zero addr"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5199:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5199:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5199:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5281:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5292:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5277:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5277:18:1"
																	},
																	{
																		"hexValue": "657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5297:5:1",
																		"type": "",
																		"value": "ess"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5270:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5270:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5270:33:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5312:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5324:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5335:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5320:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5320:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5312:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5097:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5111:4:1",
														"type": ""
													}
												],
												"src": "4946:399:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5524:228:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5541:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5552:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5534:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5534:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5534:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5575:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5586:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5571:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5571:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5591:2:1",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5564:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5564:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5564:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5614:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5625:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5610:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5610:18:1"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5630:34:1",
																		"type": "",
																		"value": "ERC20: transfer amount exceeds b"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5603:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5603:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5603:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5685:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5696:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5681:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5681:18:1"
																	},
																	{
																		"hexValue": "616c616e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5701:8:1",
																		"type": "",
																		"value": "alance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5674:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5674:36:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5674:36:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5719:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5731:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5742:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5727:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5727:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5719:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5501:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5515:4:1",
														"type": ""
													}
												],
												"src": "5350:402:1"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, _1)\n        let length := mload(value0)\n        mstore(add(headStart, _1), length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n        }\n        mstore(add(add(headStart, length), 64), 0)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: decreased allowance below\")\n        mstore(add(headStart, 96), \" zero\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"ERC20: approve from the zero add\")\n        mstore(add(headStart, 96), \"ress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ERC20: approve to the zero addre\")\n        mstore(add(headStart, 96), \"ss\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"ERC20: insufficient allowance\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: transfer from the zero ad\")\n        mstore(add(headStart, 96), \"dress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"ERC20: transfer to the zero addr\")\n        mstore(add(headStart, 96), \"ess\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"ERC20: transfer amount exceeds b\")\n        mstore(add(headStart, 96), \"alance\")\n        tail := add(headStart, 128)\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b50600436106100a6575f3560e01c8063395093511161006e578063395093511461011f57806370a082311461013257806395d89b411461015a578063a457c2d714610162578063a9059cbb14610175578063dd62ed3e14610188575f80fd5b806306fdde03146100aa578063095ea7b3146100c857806318160ddd146100eb57806323b872dd146100fd578063313ce56714610110575b5f80fd5b6100b261019b565b6040516100bf919061068a565b60405180910390f35b6100db6100d63660046106f0565b61022b565b60405190151581526020016100bf565b6002545b6040519081526020016100bf565b6100db61010b366004610718565b610244565b604051601281526020016100bf565b6100db61012d3660046106f0565b610267565b6100ef610140366004610751565b6001600160a01b03165f9081526020819052604090205490565b6100b2610288565b6100db6101703660046106f0565b610297565b6100db6101833660046106f0565b610316565b6100ef610196366004610771565b610323565b6060600380546101aa906107a2565b80601f01602080910402602001604051908101604052809291908181526020018280546101d6906107a2565b80156102215780601f106101f857610100808354040283529160200191610221565b820191905f5260205f20905b81548152906001019060200180831161020457829003601f168201915b5050505050905090565b5f3361023881858561034d565b60019150505b92915050565b5f33610251858285610470565b61025c8585856104e8565b506001949350505050565b5f336102388185856102798383610323565b61028391906107da565b61034d565b6060600480546101aa906107a2565b5f33816102a48286610323565b9050838110156103095760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b61025c828686840361034d565b5f336102388185856104e8565b6001600160a01b039182165f90815260016020908152604080832093909416825291909152205490565b6001600160a01b0383166103af5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610300565b6001600160a01b0382166104105760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610300565b6001600160a01b038381165f8181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b5f61047b8484610323565b90505f1981146104e257818110156104d55760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610300565b6104e2848484840361034d565b50505050565b6001600160a01b03831661054c5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610300565b6001600160a01b0382166105ae5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610300565b6001600160a01b0383165f90815260208190526040902054818110156106255760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610300565b6001600160a01b038481165f81815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a36104e2565b5f6020808352835180828501525f5b818110156106b557858101830151858201604001528201610699565b505f604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b03811681146106eb575f80fd5b919050565b5f8060408385031215610701575f80fd5b61070a836106d5565b946020939093013593505050565b5f805f6060848603121561072a575f80fd5b610733846106d5565b9250610741602085016106d5565b9150604084013590509250925092565b5f60208284031215610761575f80fd5b61076a826106d5565b9392505050565b5f8060408385031215610782575f80fd5b61078b836106d5565b9150610799602084016106d5565b90509250929050565b600181811c908216806107b657607f821691505b6020821081036107d457634e487b7160e01b5f52602260045260245ffd5b50919050565b8082018082111561023e57634e487b7160e01b5f52601160045260245ffdfea26469706673582212205b32cccc6cef10cdd9524f6f09a5380e681c8b939428a4d4ae4d7de348be571464736f6c63430008140033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA6 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x6E JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x11F JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x132 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x15A JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x162 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x175 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x188 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAA JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xC8 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xEB JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0xFD JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x110 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xB2 PUSH2 0x19B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xBF SWAP2 SWAP1 PUSH2 0x68A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDB PUSH2 0xD6 CALLDATASIZE PUSH1 0x4 PUSH2 0x6F0 JUMP JUMPDEST PUSH2 0x22B JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xBF JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xBF JUMP JUMPDEST PUSH2 0xDB PUSH2 0x10B CALLDATASIZE PUSH1 0x4 PUSH2 0x718 JUMP JUMPDEST PUSH2 0x244 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xBF JUMP JUMPDEST PUSH2 0xDB PUSH2 0x12D CALLDATASIZE PUSH1 0x4 PUSH2 0x6F0 JUMP JUMPDEST PUSH2 0x267 JUMP JUMPDEST PUSH2 0xEF PUSH2 0x140 CALLDATASIZE PUSH1 0x4 PUSH2 0x751 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xB2 PUSH2 0x288 JUMP JUMPDEST PUSH2 0xDB PUSH2 0x170 CALLDATASIZE PUSH1 0x4 PUSH2 0x6F0 JUMP JUMPDEST PUSH2 0x297 JUMP JUMPDEST PUSH2 0xDB PUSH2 0x183 CALLDATASIZE PUSH1 0x4 PUSH2 0x6F0 JUMP JUMPDEST PUSH2 0x316 JUMP JUMPDEST PUSH2 0xEF PUSH2 0x196 CALLDATASIZE PUSH1 0x4 PUSH2 0x771 JUMP JUMPDEST PUSH2 0x323 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x1AA SWAP1 PUSH2 0x7A2 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1D6 SWAP1 PUSH2 0x7A2 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x221 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1F8 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x221 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x204 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 CALLER PUSH2 0x238 DUP2 DUP6 DUP6 PUSH2 0x34D JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER PUSH2 0x251 DUP6 DUP3 DUP6 PUSH2 0x470 JUMP JUMPDEST PUSH2 0x25C DUP6 DUP6 DUP6 PUSH2 0x4E8 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 CALLER PUSH2 0x238 DUP2 DUP6 DUP6 PUSH2 0x279 DUP4 DUP4 PUSH2 0x323 JUMP JUMPDEST PUSH2 0x283 SWAP2 SWAP1 PUSH2 0x7DA JUMP JUMPDEST PUSH2 0x34D JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x1AA SWAP1 PUSH2 0x7A2 JUMP JUMPDEST PUSH0 CALLER DUP2 PUSH2 0x2A4 DUP3 DUP7 PUSH2 0x323 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x309 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x25C DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x34D JUMP JUMPDEST PUSH0 CALLER PUSH2 0x238 DUP2 DUP6 DUP6 PUSH2 0x4E8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x3AF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x300 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x410 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x300 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x47B DUP5 DUP5 PUSH2 0x323 JUMP JUMPDEST SWAP1 POP PUSH0 NOT DUP2 EQ PUSH2 0x4E2 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x4D5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x300 JUMP JUMPDEST PUSH2 0x4E2 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x34D JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x54C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x300 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x5AE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x300 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x625 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x300 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP8 DUP8 SUB SWAP1 SSTORE SWAP4 DUP8 AND DUP1 DUP4 MSTORE SWAP2 DUP5 SWAP1 KECCAK256 DUP1 SLOAD DUP8 ADD SWAP1 SSTORE SWAP3 MLOAD DUP6 DUP2 MSTORE SWAP1 SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x4E2 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x6B5 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x699 JUMP JUMPDEST POP PUSH0 PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x6EB JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x701 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x70A DUP4 PUSH2 0x6D5 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x72A JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x733 DUP5 PUSH2 0x6D5 JUMP JUMPDEST SWAP3 POP PUSH2 0x741 PUSH1 0x20 DUP6 ADD PUSH2 0x6D5 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x761 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x76A DUP3 PUSH2 0x6D5 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x782 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x78B DUP4 PUSH2 0x6D5 JUMP JUMPDEST SWAP2 POP PUSH2 0x799 PUSH1 0x20 DUP5 ADD PUSH2 0x6D5 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x7B6 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x7D4 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x23E JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 JUMPDEST ORIGIN 0xCC 0xCC PUSH13 0xEF10CDD9524F6F09A5380E681C DUP12 SWAP4 SWAP5 0x28 LOG4 0xD4 0xAE 0x4D PUSH30 0xE348BE571464736F6C634300081400330000000000000000000000000000 ",
							"sourceMap": "5913:11312:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6539:98;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;8825:197;;;;;;:::i;:::-;;:::i;:::-;;;1169:14:1;;1162:22;1144:41;;1132:2;1117:18;8825:197:0;1004:187:1;7636:106:0;7723:12;;7636:106;;;1342:25:1;;;1330:2;1315:18;7636:106:0;1196:177:1;9584:256:0;;;;;;:::i;:::-;;:::i;7485:91::-;;;7567:2;1853:36:1;;1841:2;1826:18;7485:91:0;1711:184:1;10235:234:0;;;;;;:::i;:::-;;:::i;7800:125::-;;;;;;:::i;:::-;-1:-1:-1;;;;;7900:18:0;7874:7;7900:18;;;;;;;;;;;;7800:125;6750:102;;;:::i;10956:427::-;;;;;;:::i;:::-;;:::i;8121:189::-;;;;;;:::i;:::-;;:::i;8368:149::-;;;;;;:::i;:::-;;:::i;6539:98::-;6593:13;6625:5;6618:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6539:98;:::o;8825:197::-;8908:4;4322:10;8962:32;4322:10;8978:7;8987:6;8962:8;:32::i;:::-;9011:4;9004:11;;;8825:197;;;;;:::o;9584:256::-;9681:4;4322:10;9737:38;9753:4;4322:10;9768:6;9737:15;:38::i;:::-;9785:27;9795:4;9801:2;9805:6;9785:9;:27::i;:::-;-1:-1:-1;9829:4:0;;9584:256;-1:-1:-1;;;;9584:256:0:o;10235:234::-;10323:4;4322:10;10377:64;4322:10;10393:7;10430:10;10402:25;4322:10;10393:7;10402:9;:25::i;:::-;:38;;;;:::i;:::-;10377:8;:64::i;6750:102::-;6806:13;6838:7;6831:14;;;;;:::i;10956:427::-;11049:4;4322:10;11049:4;11130:25;4322:10;11147:7;11130:9;:25::i;:::-;11103:52;;11193:15;11173:16;:35;;11165:85;;;;-1:-1:-1;;;11165:85:0;;3170:2:1;11165:85:0;;;3152:21:1;3209:2;3189:18;;;3182:30;3248:34;3228:18;;;3221:62;-1:-1:-1;;;3299:18:1;;;3292:35;3344:19;;11165:85:0;;;;;;;;;11284:60;11293:5;11300:7;11328:15;11309:16;:34;11284:8;:60::i;8121:189::-;8200:4;4322:10;8254:28;4322:10;8271:2;8275:6;8254:9;:28::i;8368:149::-;-1:-1:-1;;;;;8483:18:0;;;8457:7;8483:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;8368:149::o;14838:340::-;-1:-1:-1;;;;;14939:19:0;;14931:68;;;;-1:-1:-1;;;14931:68:0;;3576:2:1;14931:68:0;;;3558:21:1;3615:2;3595:18;;;3588:30;3654:34;3634:18;;;3627:62;-1:-1:-1;;;3705:18:1;;;3698:34;3749:19;;14931:68:0;3374:400:1;14931:68:0;-1:-1:-1;;;;;15017:21:0;;15009:68;;;;-1:-1:-1;;;15009:68:0;;3981:2:1;15009:68:0;;;3963:21:1;4020:2;4000:18;;;3993:30;4059:34;4039:18;;;4032:62;-1:-1:-1;;;4110:18:1;;;4103:32;4152:19;;15009:68:0;3779:398:1;15009:68:0;-1:-1:-1;;;;;15088:18:0;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;15139:32;;1342:25:1;;;15139:32:0;;1315:18:1;15139:32:0;;;;;;;14838:340;;;:::o;15459:411::-;15559:24;15586:25;15596:5;15603:7;15586:9;:25::i;:::-;15559:52;;-1:-1:-1;;15625:16:0;:37;15621:243;;15706:6;15686:16;:26;;15678:68;;;;-1:-1:-1;;;15678:68:0;;4384:2:1;15678:68:0;;;4366:21:1;4423:2;4403:18;;;4396:30;4462:31;4442:18;;;4435:59;4511:18;;15678:68:0;4182:353:1;15678:68:0;15788:51;15797:5;15804:7;15832:6;15813:16;:25;15788:8;:51::i;:::-;15549:321;15459:411;;;:::o;11837:788::-;-1:-1:-1;;;;;11933:18:0;;11925:68;;;;-1:-1:-1;;;11925:68:0;;4742:2:1;11925:68:0;;;4724:21:1;4781:2;4761:18;;;4754:30;4820:34;4800:18;;;4793:62;-1:-1:-1;;;4871:18:1;;;4864:35;4916:19;;11925:68:0;4540:401:1;11925:68:0;-1:-1:-1;;;;;12011:16:0;;12003:64;;;;-1:-1:-1;;;12003:64:0;;5148:2:1;12003:64:0;;;5130:21:1;5187:2;5167:18;;;5160:30;5226:34;5206:18;;;5199:62;-1:-1:-1;;;5277:18:1;;;5270:33;5320:19;;12003:64:0;4946:399:1;12003:64:0;-1:-1:-1;;;;;12149:15:0;;12127:19;12149:15;;;;;;;;;;;12182:21;;;;12174:72;;;;-1:-1:-1;;;12174:72:0;;5552:2:1;12174:72:0;;;5534:21:1;5591:2;5571:18;;;5564:30;5630:34;5610:18;;;5603:62;-1:-1:-1;;;5681:18:1;;;5674:36;5727:19;;12174:72:0;5350:402:1;12174:72:0;-1:-1:-1;;;;;12280:15:0;;;:9;:15;;;;;;;;;;;12298:20;;;12280:38;;12495:13;;;;;;;;;;:23;;;;;;12544:26;;1342:25:1;;;12495:13:0;;12544:26;;1315:18:1;12544:26:0;;;;;;;12581:37;16454:91;14:548:1;126:4;155:2;184;173:9;166:21;216:6;210:13;259:6;254:2;243:9;239:18;232:34;284:1;294:140;308:6;305:1;302:13;294:140;;;403:14;;;399:23;;393:30;369:17;;;388:2;365:26;358:66;323:10;;294:140;;;298:3;483:1;478:2;469:6;458:9;454:22;450:31;443:42;553:2;546;542:7;537:2;529:6;525:15;521:29;510:9;506:45;502:54;494:62;;;;14:548;;;;:::o;567:173::-;635:20;;-1:-1:-1;;;;;684:31:1;;674:42;;664:70;;730:1;727;720:12;664:70;567:173;;;:::o;745:254::-;813:6;821;874:2;862:9;853:7;849:23;845:32;842:52;;;890:1;887;880:12;842:52;913:29;932:9;913:29;:::i;:::-;903:39;989:2;974:18;;;;961:32;;-1:-1:-1;;;745:254:1:o;1378:328::-;1455:6;1463;1471;1524:2;1512:9;1503:7;1499:23;1495:32;1492:52;;;1540:1;1537;1530:12;1492:52;1563:29;1582:9;1563:29;:::i;:::-;1553:39;;1611:38;1645:2;1634:9;1630:18;1611:38;:::i;:::-;1601:48;;1696:2;1685:9;1681:18;1668:32;1658:42;;1378:328;;;;;:::o;1900:186::-;1959:6;2012:2;2000:9;1991:7;1987:23;1983:32;1980:52;;;2028:1;2025;2018:12;1980:52;2051:29;2070:9;2051:29;:::i;:::-;2041:39;1900:186;-1:-1:-1;;;1900:186:1:o;2091:260::-;2159:6;2167;2220:2;2208:9;2199:7;2195:23;2191:32;2188:52;;;2236:1;2233;2226:12;2188:52;2259:29;2278:9;2259:29;:::i;:::-;2249:39;;2307:38;2341:2;2330:9;2326:18;2307:38;:::i;:::-;2297:48;;2091:260;;;;;:::o;2356:380::-;2435:1;2431:12;;;;2478;;;2499:61;;2553:4;2545:6;2541:17;2531:27;;2499:61;2606:2;2598:6;2595:14;2575:18;2572:38;2569:161;;2652:10;2647:3;2643:20;2640:1;2633:31;2687:4;2684:1;2677:15;2715:4;2712:1;2705:15;2569:161;;2356:380;;;:::o;2741:222::-;2806:9;;;2827:10;;;2824:133;;;2879:10;2874:3;2870:20;2867:1;2860:31;2914:4;2911:1;2904:15;2942:4;2939:1;2932:15"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "419000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "24624",
								"balanceOf(address)": "2559",
								"decimals()": "265",
								"decreaseAllowance(address,uint256)": "27011",
								"increaseAllowance(address,uint256)": "infinite",
								"name()": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "2325",
								"transfer(address,uint256)": "51133",
								"transferFrom(address,address,uint256)": "infinite"
							},
							"internal": {
								"_afterTokenTransfer(address,address,uint256)": "infinite",
								"_approve(address,address,uint256)": "infinite",
								"_beforeTokenTransfer(address,address,uint256)": "infinite",
								"_burn(address,uint256)": "infinite",
								"_mint(address,uint256)": "infinite",
								"_spendAllowance(address,address,uint256)": "infinite",
								"_transfer(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 5913,
									"end": 17225,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 5913,
									"end": 17225,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 5913,
									"end": 17225,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6361,
									"end": 6474,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 6361,
									"end": 6474,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 6361,
									"end": 6474,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 6361,
									"end": 6474,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 6361,
									"end": 6474,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 6361,
									"end": 6474,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6361,
									"end": 6474,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 6361,
									"end": 6474,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 6361,
									"end": 6474,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 6361,
									"end": 6474,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6361,
									"end": 6474,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6361,
									"end": 6474,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 6361,
									"end": 6474,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 6361,
									"end": 6474,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 6361,
									"end": 6474,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 6361,
									"end": 6474,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 6361,
									"end": 6474,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 6361,
									"end": 6474,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 6361,
									"end": 6474,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 6361,
									"end": 6474,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 6361,
									"end": 6474,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6361,
									"end": 6474,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 6361,
									"end": 6474,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 6361,
									"end": 6474,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6361,
									"end": 6474,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6361,
									"end": 6474,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6361,
									"end": 6474,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 6361,
									"end": 6474,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 6361,
									"end": 6474,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 6361,
									"end": 6474,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 6361,
									"end": 6474,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 6361,
									"end": 6474,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6427,
									"end": 6432,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 6427,
									"end": 6440,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 6435,
									"end": 6440,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 6427,
									"end": 6432,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 6427,
									"end": 6440,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 6427,
									"end": 6440,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 6427,
									"end": 6440,
									"name": "tag",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 6427,
									"end": 6440,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 6450,
									"end": 6457,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 6450,
									"end": 6467,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 6460,
									"end": 6467,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 6450,
									"end": 6457,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 6450,
									"end": 6467,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 6450,
									"end": 6467,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 6450,
									"end": 6467,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 6450,
									"end": 6467,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6450,
									"end": 6467,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6361,
									"end": 6474,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6361,
									"end": 6474,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 5913,
									"end": 17225,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 5913,
									"end": 17225,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 14,
									"end": 141,
									"name": "tag",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 14,
									"end": 141,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 75,
									"end": 85,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B71"
								},
								{
									"begin": 70,
									"end": 73,
									"name": "PUSH",
									"source": 1,
									"value": "E0"
								},
								{
									"begin": 66,
									"end": 86,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 63,
									"end": 64,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 56,
									"end": 87,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 106,
									"end": 110,
									"name": "PUSH",
									"source": 1,
									"value": "41"
								},
								{
									"begin": 103,
									"end": 104,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 96,
									"end": 111,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 130,
									"end": 134,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 127,
									"end": 128,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 120,
									"end": 135,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 146,
									"end": 986,
									"name": "tag",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 146,
									"end": 986,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 200,
									"end": 205,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 253,
									"end": 256,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 246,
									"end": 250,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 238,
									"end": 244,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 234,
									"end": 251,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 230,
									"end": 257,
									"name": "SLT",
									"source": 1
								},
								{
									"begin": 220,
									"end": 275,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "19"
								},
								{
									"begin": 220,
									"end": 275,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 271,
									"end": 272,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 268,
									"end": 269,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 261,
									"end": 273,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 220,
									"end": 275,
									"name": "tag",
									"source": 1,
									"value": "19"
								},
								{
									"begin": 220,
									"end": 275,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 294,
									"end": 307,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 294,
									"end": 307,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 356,
									"end": 366,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 356,
									"end": 366,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 356,
									"end": 366,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 353,
									"end": 389,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 353,
									"end": 389,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "21"
								},
								{
									"begin": 353,
									"end": 389,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 369,
									"end": 387,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "21"
								},
								{
									"begin": 369,
									"end": 387,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 369,
									"end": 387,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 369,
									"end": 387,
									"name": "tag",
									"source": 1,
									"value": "21"
								},
								{
									"begin": 369,
									"end": 387,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 444,
									"end": 446,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 438,
									"end": 447,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 412,
									"end": 414,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 498,
									"end": 511,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 498,
									"end": 511,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 494,
									"end": 516,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 494,
									"end": 516,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 494,
									"end": 516,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 518,
									"end": 520,
									"name": "PUSH",
									"source": 1,
									"value": "3F"
								},
								{
									"begin": 490,
									"end": 521,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 486,
									"end": 526,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 474,
									"end": 527,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 474,
									"end": 527,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 474,
									"end": 527,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 542,
									"end": 560,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 542,
									"end": 560,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 542,
									"end": 560,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 562,
									"end": 584,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 562,
									"end": 584,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 562,
									"end": 584,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 539,
									"end": 585,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 536,
									"end": 608,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 536,
									"end": 608,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "23"
								},
								{
									"begin": 536,
									"end": 608,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 588,
									"end": 606,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "23"
								},
								{
									"begin": 588,
									"end": 606,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 588,
									"end": 606,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 588,
									"end": 606,
									"name": "tag",
									"source": 1,
									"value": "23"
								},
								{
									"begin": 588,
									"end": 606,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 628,
									"end": 638,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 624,
									"end": 626,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 617,
									"end": 639,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 663,
									"end": 665,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 655,
									"end": 661,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 648,
									"end": 666,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 685,
									"end": 689,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 675,
									"end": 689,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 675,
									"end": 689,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 730,
									"end": 733,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 725,
									"end": 727,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 720,
									"end": 722,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 712,
									"end": 718,
									"name": "DUP9",
									"source": 1
								},
								{
									"begin": 708,
									"end": 723,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 704,
									"end": 728,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 701,
									"end": 734,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 698,
									"end": 751,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 698,
									"end": 751,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 698,
									"end": 751,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 747,
									"end": 748,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 744,
									"end": 745,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 737,
									"end": 749,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 698,
									"end": 751,
									"name": "tag",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 698,
									"end": 751,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 769,
									"end": 770,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 760,
									"end": 770,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 760,
									"end": 770,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 779,
									"end": 912,
									"name": "tag",
									"source": 1,
									"value": "25"
								},
								{
									"begin": 779,
									"end": 912,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 793,
									"end": 795,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 790,
									"end": 791,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 787,
									"end": 796,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 779,
									"end": 912,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 779,
									"end": 912,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "27"
								},
								{
									"begin": 779,
									"end": 912,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 881,
									"end": 895,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 881,
									"end": 895,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 881,
									"end": 895,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 877,
									"end": 900,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 877,
									"end": 900,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 871,
									"end": 901,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 850,
									"end": 864,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 850,
									"end": 864,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 850,
									"end": 864,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 846,
									"end": 869,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 846,
									"end": 869,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 839,
									"end": 902,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 804,
									"end": 814,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 804,
									"end": 814,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 804,
									"end": 814,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 804,
									"end": 814,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 779,
									"end": 912,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "25"
								},
								{
									"begin": 779,
									"end": 912,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 779,
									"end": 912,
									"name": "tag",
									"source": 1,
									"value": "27"
								},
								{
									"begin": 779,
									"end": 912,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 954,
									"end": 955,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 932,
									"end": 947,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 932,
									"end": 947,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 932,
									"end": 947,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 928,
									"end": 952,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 928,
									"end": 952,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 928,
									"end": 952,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 921,
									"end": 956,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 921,
									"end": 956,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 921,
									"end": 956,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 921,
									"end": 956,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 936,
									"end": 942,
									"name": "SWAP5",
									"source": 1
								},
								{
									"begin": 146,
									"end": 986,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 146,
									"end": 986,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 991,
									"end": 1553,
									"name": "tag",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 991,
									"end": 1553,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1090,
									"end": 1096,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1098,
									"end": 1104,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1151,
									"end": 1153,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1139,
									"end": 1148,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1130,
									"end": 1137,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 1126,
									"end": 1149,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 1122,
									"end": 1154,
									"name": "SLT",
									"source": 1
								},
								{
									"begin": 1119,
									"end": 1171,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1119,
									"end": 1171,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "29"
								},
								{
									"begin": 1119,
									"end": 1171,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1167,
									"end": 1168,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1164,
									"end": 1165,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1157,
									"end": 1169,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1119,
									"end": 1171,
									"name": "tag",
									"source": 1,
									"value": "29"
								},
								{
									"begin": 1119,
									"end": 1171,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1194,
									"end": 1210,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1194,
									"end": 1210,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1259,
									"end": 1273,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1259,
									"end": 1273,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1259,
									"end": 1273,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 1256,
									"end": 1290,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1256,
									"end": 1290,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "30"
								},
								{
									"begin": 1256,
									"end": 1290,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1286,
									"end": 1287,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1283,
									"end": 1284,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1276,
									"end": 1288,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1256,
									"end": 1290,
									"name": "tag",
									"source": 1,
									"value": "30"
								},
								{
									"begin": 1256,
									"end": 1290,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1309,
									"end": 1370,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "31"
								},
								{
									"begin": 1362,
									"end": 1369,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 1353,
									"end": 1359,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1342,
									"end": 1351,
									"name": "DUP8",
									"source": 1
								},
								{
									"begin": 1338,
									"end": 1360,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1309,
									"end": 1370,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 1309,
									"end": 1370,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1309,
									"end": 1370,
									"name": "tag",
									"source": 1,
									"value": "31"
								},
								{
									"begin": 1309,
									"end": 1370,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1299,
									"end": 1370,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 1299,
									"end": 1370,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1416,
									"end": 1418,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1405,
									"end": 1414,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 1401,
									"end": 1419,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1395,
									"end": 1420,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1379,
									"end": 1420,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1379,
									"end": 1420,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1445,
									"end": 1447,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1435,
									"end": 1443,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1432,
									"end": 1448,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 1429,
									"end": 1465,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1429,
									"end": 1465,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "32"
								},
								{
									"begin": 1429,
									"end": 1465,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1461,
									"end": 1462,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1458,
									"end": 1459,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1451,
									"end": 1463,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1429,
									"end": 1465,
									"name": "tag",
									"source": 1,
									"value": "32"
								},
								{
									"begin": 1429,
									"end": 1465,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1429,
									"end": 1465,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1484,
									"end": 1547,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "33"
								},
								{
									"begin": 1539,
									"end": 1546,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 1528,
									"end": 1536,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1517,
									"end": 1526,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 1513,
									"end": 1537,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1484,
									"end": 1547,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 1484,
									"end": 1547,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1484,
									"end": 1547,
									"name": "tag",
									"source": 1,
									"value": "33"
								},
								{
									"begin": 1484,
									"end": 1547,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1474,
									"end": 1547,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1474,
									"end": 1547,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1474,
									"end": 1547,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 991,
									"end": 1553,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 991,
									"end": 1553,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 991,
									"end": 1553,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 991,
									"end": 1553,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 991,
									"end": 1553,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 991,
									"end": 1553,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1558,
									"end": 1938,
									"name": "tag",
									"source": 1,
									"value": "12"
								},
								{
									"begin": 1558,
									"end": 1938,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1637,
									"end": 1638,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1633,
									"end": 1645,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1633,
									"end": 1645,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1633,
									"end": 1645,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 1633,
									"end": 1645,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1680,
									"end": 1692,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1680,
									"end": 1692,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1680,
									"end": 1692,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1701,
									"end": 1762,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "35"
								},
								{
									"begin": 1701,
									"end": 1762,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1755,
									"end": 1759,
									"name": "PUSH",
									"source": 1,
									"value": "7F"
								},
								{
									"begin": 1747,
									"end": 1753,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1743,
									"end": 1760,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1733,
									"end": 1760,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1733,
									"end": 1760,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1701,
									"end": 1762,
									"name": "tag",
									"source": 1,
									"value": "35"
								},
								{
									"begin": 1701,
									"end": 1762,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1808,
									"end": 1810,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1800,
									"end": 1806,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1797,
									"end": 1811,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 1777,
									"end": 1795,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1774,
									"end": 1812,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 1771,
									"end": 1932,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "36"
								},
								{
									"begin": 1771,
									"end": 1932,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1854,
									"end": 1864,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B71"
								},
								{
									"begin": 1849,
									"end": 1852,
									"name": "PUSH",
									"source": 1,
									"value": "E0"
								},
								{
									"begin": 1845,
									"end": 1865,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 1842,
									"end": 1843,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1835,
									"end": 1866,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1889,
									"end": 1893,
									"name": "PUSH",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 1886,
									"end": 1887,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 1879,
									"end": 1894,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1917,
									"end": 1921,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 1914,
									"end": 1915,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1907,
									"end": 1922,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1771,
									"end": 1932,
									"name": "tag",
									"source": 1,
									"value": "36"
								},
								{
									"begin": 1771,
									"end": 1932,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1771,
									"end": 1932,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1558,
									"end": 1938,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1558,
									"end": 1938,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1558,
									"end": 1938,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1558,
									"end": 1938,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2069,
									"end": 2614,
									"name": "tag",
									"source": 1,
									"value": "14"
								},
								{
									"begin": 2069,
									"end": 2614,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2171,
									"end": 2173,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 2166,
									"end": 2169,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2163,
									"end": 2174,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 2160,
									"end": 2608,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 2160,
									"end": 2608,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "39"
								},
								{
									"begin": 2160,
									"end": 2608,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 2207,
									"end": 2208,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2232,
									"end": 2237,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2228,
									"end": 2230,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2221,
									"end": 2238,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 2277,
									"end": 2281,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 2273,
									"end": 2275,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2263,
									"end": 2282,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": 2347,
									"end": 2349,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 2335,
									"end": 2345,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 2331,
									"end": 2350,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2328,
									"end": 2329,
									"name": "PUSH",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 2324,
									"end": 2351,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 2318,
									"end": 2322,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2314,
									"end": 2352,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2383,
									"end": 2387,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 2371,
									"end": 2381,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 2368,
									"end": 2388,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 2365,
									"end": 2412,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 2365,
									"end": 2412,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 2365,
									"end": 2412,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2406,
									"end": 2410,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2365,
									"end": 2412,
									"name": "tag",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 2365,
									"end": 2412,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2461,
									"end": 2463,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 2456,
									"end": 2459,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 2452,
									"end": 2464,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2449,
									"end": 2450,
									"name": "PUSH",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 2445,
									"end": 2465,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 2439,
									"end": 2443,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2435,
									"end": 2466,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2425,
									"end": 2466,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2425,
									"end": 2466,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2516,
									"end": 2598,
									"name": "tag",
									"source": 1,
									"value": "41"
								},
								{
									"begin": 2516,
									"end": 2598,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2534,
									"end": 2536,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2527,
									"end": 2532,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2524,
									"end": 2537,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 2516,
									"end": 2598,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 2516,
									"end": 2598,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "43"
								},
								{
									"begin": 2516,
									"end": 2598,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 2579,
									"end": 2596,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2579,
									"end": 2596,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2579,
									"end": 2596,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 2560,
									"end": 2561,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 2549,
									"end": 2562,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2516,
									"end": 2598,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "41"
								},
								{
									"begin": 2516,
									"end": 2598,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2516,
									"end": 2598,
									"name": "tag",
									"source": 1,
									"value": "43"
								},
								{
									"begin": 2516,
									"end": 2598,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2520,
									"end": 2523,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2520,
									"end": 2523,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2520,
									"end": 2523,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2160,
									"end": 2608,
									"name": "tag",
									"source": 1,
									"value": "39"
								},
								{
									"begin": 2160,
									"end": 2608,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2069,
									"end": 2614,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2069,
									"end": 2614,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2069,
									"end": 2614,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2069,
									"end": 2614,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2790,
									"end": 4142,
									"name": "tag",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 2790,
									"end": 4142,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2910,
									"end": 2920,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2910,
									"end": 2920,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2932,
									"end": 2962,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2932,
									"end": 2962,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 2929,
									"end": 2985,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 2929,
									"end": 2985,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "47"
								},
								{
									"begin": 2929,
									"end": 2985,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 2965,
									"end": 2983,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "47"
								},
								{
									"begin": 2965,
									"end": 2983,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 2965,
									"end": 2983,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2965,
									"end": 2983,
									"name": "tag",
									"source": 1,
									"value": "47"
								},
								{
									"begin": 2965,
									"end": 2983,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2994,
									"end": 3091,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "48"
								},
								{
									"begin": 3084,
									"end": 3090,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3044,
									"end": 3082,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "49"
								},
								{
									"begin": 3076,
									"end": 3080,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 3070,
									"end": 3081,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 3044,
									"end": 3082,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "12"
								},
								{
									"begin": 3044,
									"end": 3082,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3044,
									"end": 3082,
									"name": "tag",
									"source": 1,
									"value": "49"
								},
								{
									"begin": 3044,
									"end": 3082,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3038,
									"end": 3042,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 2994,
									"end": 3091,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "14"
								},
								{
									"begin": 2994,
									"end": 3091,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2994,
									"end": 3091,
									"name": "tag",
									"source": 1,
									"value": "48"
								},
								{
									"begin": 2994,
									"end": 3091,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3146,
									"end": 3150,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 3146,
									"end": 3150,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 3210,
									"end": 3212,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 3199,
									"end": 3213,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 3199,
									"end": 3213,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 3227,
									"end": 3228,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 3222,
									"end": 3885,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3222,
									"end": 3885,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 3222,
									"end": 3885,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "51"
								},
								{
									"begin": 3222,
									"end": 3885,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 3929,
									"end": 3930,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3946,
									"end": 3952,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 3943,
									"end": 4032,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 3943,
									"end": 4032,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "52"
								},
								{
									"begin": 3943,
									"end": 4032,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3998,
									"end": 4017,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 3998,
									"end": 4017,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 3998,
									"end": 4017,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3992,
									"end": 4018,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 3943,
									"end": 4032,
									"name": "tag",
									"source": 1,
									"value": "52"
								},
								{
									"begin": 3943,
									"end": 4032,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2747,
									"end": 2748,
									"name": "PUSH",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 2743,
									"end": 2754,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 2743,
									"end": 2754,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2743,
									"end": 2754,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 2739,
									"end": 2763,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 2735,
									"end": 2764,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 2725,
									"end": 2765,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2771,
									"end": 2772,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 2767,
									"end": 2778,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 2767,
									"end": 2778,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2767,
									"end": 2778,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 2722,
									"end": 2779,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 4045,
									"end": 4126,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 4045,
									"end": 4126,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 3192,
									"end": 4136,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "43"
								},
								{
									"begin": 3192,
									"end": 4136,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3222,
									"end": 3885,
									"name": "tag",
									"source": 1,
									"value": "51"
								},
								{
									"begin": 3222,
									"end": 3885,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2016,
									"end": 2017,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2009,
									"end": 2023,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 2009,
									"end": 2023,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2009,
									"end": 2023,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 2053,
									"end": 2057,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 2040,
									"end": 2058,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2040,
									"end": 2058,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3258,
									"end": 3278,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 3258,
									"end": 3278,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 3258,
									"end": 3278,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 3376,
									"end": 3612,
									"name": "tag",
									"source": 1,
									"value": "55"
								},
								{
									"begin": 3376,
									"end": 3612,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3390,
									"end": 3397,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3387,
									"end": 3388,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3384,
									"end": 3398,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 3376,
									"end": 3612,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 3376,
									"end": 3612,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "57"
								},
								{
									"begin": 3376,
									"end": 3612,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 3479,
									"end": 3498,
									"name": "DUP9",
									"source": 1
								},
								{
									"begin": 3479,
									"end": 3498,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 3479,
									"end": 3498,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3473,
									"end": 3499,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 3458,
									"end": 3500,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3458,
									"end": 3500,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 3571,
									"end": 3598,
									"name": "SWAP5",
									"source": 1
								},
								{
									"begin": 3571,
									"end": 3598,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 3571,
									"end": 3598,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3571,
									"end": 3598,
									"name": "SWAP5",
									"source": 1
								},
								{
									"begin": 3539,
									"end": 3540,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 3527,
									"end": 3541,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3527,
									"end": 3541,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 3527,
									"end": 3541,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3527,
									"end": 3541,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3406,
									"end": 3425,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 3406,
									"end": 3425,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3376,
									"end": 3612,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "55"
								},
								{
									"begin": 3376,
									"end": 3612,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3376,
									"end": 3612,
									"name": "tag",
									"source": 1,
									"value": "57"
								},
								{
									"begin": 3376,
									"end": 3612,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3380,
									"end": 3383,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3640,
									"end": 3646,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 3631,
									"end": 3638,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3628,
									"end": 3647,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 3625,
									"end": 3826,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 3625,
									"end": 3826,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "58"
								},
								{
									"begin": 3625,
									"end": 3826,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 3701,
									"end": 3720,
									"name": "DUP8",
									"source": 1
								},
								{
									"begin": 3701,
									"end": 3720,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 3701,
									"end": 3720,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3695,
									"end": 3721,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3784,
									"end": 3785,
									"name": "PUSH",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 3780,
									"end": 3794,
									"name": "DUP9",
									"source": 1
								},
								{
									"begin": 3780,
									"end": 3794,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3780,
									"end": 3794,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 3796,
									"end": 3799,
									"name": "PUSH",
									"source": 1,
									"value": "F8"
								},
								{
									"begin": 3776,
									"end": 3800,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 3772,
									"end": 3809,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 3768,
									"end": 3810,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 3753,
									"end": 3811,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 3738,
									"end": 3812,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3738,
									"end": 3812,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 3625,
									"end": 3826,
									"name": "tag",
									"source": 1,
									"value": "58"
								},
								{
									"begin": 3625,
									"end": 3826,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3872,
									"end": 3873,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 3856,
									"end": 3870,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3856,
									"end": 3870,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3856,
									"end": 3870,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 3852,
									"end": 3874,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3839,
									"end": 3875,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3839,
									"end": 3875,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2790,
									"end": 4142,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2790,
									"end": 4142,
									"name": "tag",
									"source": 1,
									"value": "16"
								},
								{
									"begin": 2790,
									"end": 4142,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5913,
									"end": 17225,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 5913,
									"end": 17225,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 5913,
									"end": 17225,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 5913,
									"end": 17225,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 5913,
									"end": 17225,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 5913,
									"end": 17225,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 5913,
									"end": 17225,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212205b32cccc6cef10cdd9524f6f09a5380e681c8b939428a4d4ae4d7de348be571464736f6c63430008140033",
									".code": [
										{
											"begin": 5913,
											"end": 17225,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 5913,
											"end": 17225,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5913,
											"end": 17225,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5913,
											"end": 17225,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 5913,
											"end": 17225,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5913,
											"end": 17225,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5913,
											"end": 17225,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 5913,
											"end": 17225,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5913,
											"end": 17225,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5913,
											"end": 17225,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5913,
											"end": 17225,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5913,
											"end": 17225,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 5913,
											"end": 17225,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5913,
											"end": 17225,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5913,
											"end": 17225,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5913,
											"end": 17225,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 5913,
											"end": 17225,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 5913,
											"end": 17225,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 5913,
											"end": 17225,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5913,
											"end": 17225,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5913,
											"end": 17225,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 5913,
											"end": 17225,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 5913,
											"end": 17225,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 5913,
											"end": 17225,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5913,
											"end": 17225,
											"name": "PUSH",
											"source": 0,
											"value": "39509351"
										},
										{
											"begin": 5913,
											"end": 17225,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 5913,
											"end": 17225,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 5913,
											"end": 17225,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5913,
											"end": 17225,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5913,
											"end": 17225,
											"name": "PUSH",
											"source": 0,
											"value": "39509351"
										},
										{
											"begin": 5913,
											"end": 17225,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 5913,
											"end": 17225,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 5913,
											"end": 17225,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5913,
											"end": 17225,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5913,
											"end": 17225,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 5913,
											"end": 17225,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 5913,
											"end": 17225,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 5913,
											"end": 17225,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5913,
											"end": 17225,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5913,
											"end": 17225,
											"name": "PUSH",
											"source": 0,
											"value": "95D89B41"
										},
										{
											"begin": 5913,
											"end": 17225,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 5913,
											"end": 17225,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 5913,
											"end": 17225,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5913,
											"end": 17225,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5913,
											"end": 17225,
											"name": "PUSH",
											"source": 0,
											"value": "A457C2D7"
										},
										{
											"begin": 5913,
											"end": 17225,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 5913,
											"end": 17225,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 5913,
											"end": 17225,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5913,
											"end": 17225,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5913,
											"end": 17225,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 5913,
											"end": 17225,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 5913,
											"end": 17225,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 5913,
											"end": 17225,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5913,
											"end": 17225,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5913,
											"end": 17225,
											"name": "PUSH",
											"source": 0,
											"value": "DD62ED3E"
										},
										{
											"begin": 5913,
											"end": 17225,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 5913,
											"end": 17225,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 5913,
											"end": 17225,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5913,
											"end": 17225,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5913,
											"end": 17225,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5913,
											"end": 17225,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5913,
											"end": 17225,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 5913,
											"end": 17225,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5913,
											"end": 17225,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5913,
											"end": 17225,
											"name": "PUSH",
											"source": 0,
											"value": "6FDDE03"
										},
										{
											"begin": 5913,
											"end": 17225,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 5913,
											"end": 17225,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 5913,
											"end": 17225,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5913,
											"end": 17225,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5913,
											"end": 17225,
											"name": "PUSH",
											"source": 0,
											"value": "95EA7B3"
										},
										{
											"begin": 5913,
											"end": 17225,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 5913,
											"end": 17225,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5913,
											"end": 17225,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5913,
											"end": 17225,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5913,
											"end": 17225,
											"name": "PUSH",
											"source": 0,
											"value": "18160DDD"
										},
										{
											"begin": 5913,
											"end": 17225,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 5913,
											"end": 17225,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 5913,
											"end": 17225,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5913,
											"end": 17225,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5913,
											"end": 17225,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 5913,
											"end": 17225,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 5913,
											"end": 17225,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 5913,
											"end": 17225,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5913,
											"end": 17225,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5913,
											"end": 17225,
											"name": "PUSH",
											"source": 0,
											"value": "313CE567"
										},
										{
											"begin": 5913,
											"end": 17225,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 5913,
											"end": 17225,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 5913,
											"end": 17225,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5913,
											"end": 17225,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 5913,
											"end": 17225,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5913,
											"end": 17225,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5913,
											"end": 17225,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5913,
											"end": 17225,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 6539,
											"end": 6637,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 6539,
											"end": 6637,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6539,
											"end": 6637,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 6539,
											"end": 6637,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 6539,
											"end": 6637,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6539,
											"end": 6637,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 6539,
											"end": 6637,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6539,
											"end": 6637,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6539,
											"end": 6637,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6539,
											"end": 6637,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 6539,
											"end": 6637,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6539,
											"end": 6637,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6539,
											"end": 6637,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 6539,
											"end": 6637,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6539,
											"end": 6637,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 6539,
											"end": 6637,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6539,
											"end": 6637,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6539,
											"end": 6637,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6539,
											"end": 6637,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6539,
											"end": 6637,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6539,
											"end": 6637,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6539,
											"end": 6637,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6539,
											"end": 6637,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 8825,
											"end": 9022,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8825,
											"end": 9022,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8825,
											"end": 9022,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 8825,
											"end": 9022,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8825,
											"end": 9022,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 8825,
											"end": 9022,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8825,
											"end": 9022,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 8825,
											"end": 9022,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8825,
											"end": 9022,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8825,
											"end": 9022,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8825,
											"end": 9022,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 8825,
											"end": 9022,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8825,
											"end": 9022,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 8825,
											"end": 9022,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8825,
											"end": 9022,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8825,
											"end": 9022,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1169,
											"end": 1183,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1169,
											"end": 1183,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1162,
											"end": 1184,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1144,
											"end": 1185,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1144,
											"end": 1185,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1132,
											"end": 1134,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1117,
											"end": 1135,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8825,
											"end": 9022,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 1004,
											"end": 1191,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7636,
											"end": 7742,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 7636,
											"end": 7742,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7723,
											"end": 7735,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 7723,
											"end": 7735,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7636,
											"end": 7742,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 7636,
											"end": 7742,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7636,
											"end": 7742,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7636,
											"end": 7742,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1330,
											"end": 1332,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1315,
											"end": 1333,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7636,
											"end": 7742,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 1196,
											"end": 1373,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9584,
											"end": 9840,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 9584,
											"end": 9840,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9584,
											"end": 9840,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 9584,
											"end": 9840,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 9584,
											"end": 9840,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 9584,
											"end": 9840,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9584,
											"end": 9840,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 9584,
											"end": 9840,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9584,
											"end": 9840,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 9584,
											"end": 9840,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9584,
											"end": 9840,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 9584,
											"end": 9840,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7485,
											"end": 7576,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 7485,
											"end": 7576,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7485,
											"end": 7576,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7485,
											"end": 7576,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7567,
											"end": 7569,
											"name": "PUSH",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 1853,
											"end": 1889,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1853,
											"end": 1889,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1841,
											"end": 1843,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1826,
											"end": 1844,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7485,
											"end": 7576,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 1711,
											"end": 1895,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10235,
											"end": 10469,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 10235,
											"end": 10469,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10235,
											"end": 10469,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 10235,
											"end": 10469,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 10235,
											"end": 10469,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 10235,
											"end": 10469,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 10235,
											"end": 10469,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 10235,
											"end": 10469,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10235,
											"end": 10469,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 10235,
											"end": 10469,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10235,
											"end": 10469,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10235,
											"end": 10469,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7800,
											"end": 7925,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 7800,
											"end": 7925,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7800,
											"end": 7925,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 7800,
											"end": 7925,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 7800,
											"end": 7925,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 7800,
											"end": 7925,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7800,
											"end": 7925,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 7800,
											"end": 7925,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7800,
											"end": 7925,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 7800,
											"end": 7925,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7900,
											"end": 7918,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7874,
											"end": 7881,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7900,
											"end": 7918,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7900,
											"end": 7918,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7900,
											"end": 7918,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7900,
											"end": 7918,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7900,
											"end": 7918,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7900,
											"end": 7918,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7900,
											"end": 7918,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7900,
											"end": 7918,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7900,
											"end": 7918,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7900,
											"end": 7918,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 7900,
											"end": 7918,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7900,
											"end": 7918,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7800,
											"end": 7925,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6750,
											"end": 6852,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 6750,
											"end": 6852,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6750,
											"end": 6852,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 6750,
											"end": 6852,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 6750,
											"end": 6852,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10956,
											"end": 11383,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 10956,
											"end": 11383,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10956,
											"end": 11383,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 10956,
											"end": 11383,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 10956,
											"end": 11383,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 10956,
											"end": 11383,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 10956,
											"end": 11383,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 10956,
											"end": 11383,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10956,
											"end": 11383,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 10956,
											"end": 11383,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10956,
											"end": 11383,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 10956,
											"end": 11383,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8121,
											"end": 8310,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 8121,
											"end": 8310,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8121,
											"end": 8310,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 8121,
											"end": 8310,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 8121,
											"end": 8310,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 8121,
											"end": 8310,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8121,
											"end": 8310,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 8121,
											"end": 8310,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8121,
											"end": 8310,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 8121,
											"end": 8310,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8121,
											"end": 8310,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 8121,
											"end": 8310,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8368,
											"end": 8517,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 8368,
											"end": 8517,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8368,
											"end": 8517,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 8368,
											"end": 8517,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 8368,
											"end": 8517,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 8368,
											"end": 8517,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8368,
											"end": 8517,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 8368,
											"end": 8517,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8368,
											"end": 8517,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 8368,
											"end": 8517,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8368,
											"end": 8517,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 8368,
											"end": 8517,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6539,
											"end": 6637,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 6539,
											"end": 6637,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6593,
											"end": 6606,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 6625,
											"end": 6630,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 6618,
											"end": 6630,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6618,
											"end": 6630,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6618,
											"end": 6630,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 6618,
											"end": 6630,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6618,
											"end": 6630,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 6618,
											"end": 6630,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6618,
											"end": 6630,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 6618,
											"end": 6630,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6618,
											"end": 6630,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6618,
											"end": 6630,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 6618,
											"end": 6630,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6618,
											"end": 6630,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6618,
											"end": 6630,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6618,
											"end": 6630,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6618,
											"end": 6630,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 6618,
											"end": 6630,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 6618,
											"end": 6630,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6618,
											"end": 6630,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6618,
											"end": 6630,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6618,
											"end": 6630,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6618,
											"end": 6630,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6618,
											"end": 6630,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6618,
											"end": 6630,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6618,
											"end": 6630,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6618,
											"end": 6630,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6618,
											"end": 6630,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6618,
											"end": 6630,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 6618,
											"end": 6630,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6618,
											"end": 6630,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6618,
											"end": 6630,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6618,
											"end": 6630,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6618,
											"end": 6630,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6618,
											"end": 6630,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6618,
											"end": 6630,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6618,
											"end": 6630,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6618,
											"end": 6630,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6618,
											"end": 6630,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6618,
											"end": 6630,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 6618,
											"end": 6630,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6618,
											"end": 6630,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 6618,
											"end": 6630,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6618,
											"end": 6630,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 6618,
											"end": 6630,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6618,
											"end": 6630,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6618,
											"end": 6630,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6618,
											"end": 6630,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 6618,
											"end": 6630,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6618,
											"end": 6630,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6618,
											"end": 6630,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 6618,
											"end": 6630,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 6618,
											"end": 6630,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 6618,
											"end": 6630,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6618,
											"end": 6630,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 6618,
											"end": 6630,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6618,
											"end": 6630,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6618,
											"end": 6630,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6618,
											"end": 6630,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 6618,
											"end": 6630,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 6618,
											"end": 6630,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6618,
											"end": 6630,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6618,
											"end": 6630,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6618,
											"end": 6630,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6618,
											"end": 6630,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6618,
											"end": 6630,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6618,
											"end": 6630,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 6618,
											"end": 6630,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6618,
											"end": 6630,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 6618,
											"end": 6630,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6618,
											"end": 6630,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6618,
											"end": 6630,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6618,
											"end": 6630,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6618,
											"end": 6630,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6618,
											"end": 6630,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6618,
											"end": 6630,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6618,
											"end": 6630,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6618,
											"end": 6630,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6618,
											"end": 6630,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6618,
											"end": 6630,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6618,
											"end": 6630,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 6618,
											"end": 6630,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6618,
											"end": 6630,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6618,
											"end": 6630,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6618,
											"end": 6630,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6618,
											"end": 6630,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6618,
											"end": 6630,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6618,
											"end": 6630,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6618,
											"end": 6630,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6618,
											"end": 6630,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6618,
											"end": 6630,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6618,
											"end": 6630,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6618,
											"end": 6630,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6618,
											"end": 6630,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6618,
											"end": 6630,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 6618,
											"end": 6630,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 6618,
											"end": 6630,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6618,
											"end": 6630,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6618,
											"end": 6630,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6618,
											"end": 6630,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6618,
											"end": 6630,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 6618,
											"end": 6630,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6618,
											"end": 6630,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6618,
											"end": 6630,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6618,
											"end": 6630,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6618,
											"end": 6630,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 6618,
											"end": 6630,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6618,
											"end": 6630,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6618,
											"end": 6630,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6618,
											"end": 6630,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6618,
											"end": 6630,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6618,
											"end": 6630,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6618,
											"end": 6630,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6618,
											"end": 6630,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6539,
											"end": 6637,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6539,
											"end": 6637,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8825,
											"end": 9022,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 8825,
											"end": 9022,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8908,
											"end": 8912,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4322,
											"end": 4332,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 8962,
											"end": 8994,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 4322,
											"end": 4332,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8978,
											"end": 8985,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 8987,
											"end": 8993,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 8962,
											"end": 8970,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 8962,
											"end": 8994,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8962,
											"end": 8994,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 8962,
											"end": 8994,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9011,
											"end": 9015,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 9004,
											"end": 9015,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9004,
											"end": 9015,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9004,
											"end": 9015,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8825,
											"end": 9022,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 8825,
											"end": 9022,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8825,
											"end": 9022,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 8825,
											"end": 9022,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8825,
											"end": 9022,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8825,
											"end": 9022,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8825,
											"end": 9022,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9584,
											"end": 9840,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 9584,
											"end": 9840,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9681,
											"end": 9685,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4322,
											"end": 4332,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 9737,
											"end": 9775,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 9753,
											"end": 9757,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 4322,
											"end": 4332,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9768,
											"end": 9774,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 9737,
											"end": 9752,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 9737,
											"end": 9775,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9737,
											"end": 9775,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 9737,
											"end": 9775,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9785,
											"end": 9812,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 9795,
											"end": 9799,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 9801,
											"end": 9803,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 9805,
											"end": 9811,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 9785,
											"end": 9794,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 9785,
											"end": 9812,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9785,
											"end": 9812,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 9785,
											"end": 9812,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9829,
											"end": 9833,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 9829,
											"end": 9833,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 9584,
											"end": 9840,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9584,
											"end": 9840,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10235,
											"end": 10469,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10235,
											"end": 10469,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10323,
											"end": 10327,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4322,
											"end": 4332,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 10377,
											"end": 10441,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 4322,
											"end": 4332,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10393,
											"end": 10400,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 10430,
											"end": 10440,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 10402,
											"end": 10427,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 4322,
											"end": 4332,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10393,
											"end": 10400,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10402,
											"end": 10411,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 10402,
											"end": 10427,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10402,
											"end": 10427,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 10402,
											"end": 10427,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10402,
											"end": 10440,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 10402,
											"end": 10440,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10402,
											"end": 10440,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10402,
											"end": 10440,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 10402,
											"end": 10440,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10402,
											"end": 10440,
											"name": "tag",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 10402,
											"end": 10440,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10377,
											"end": 10385,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 10377,
											"end": 10441,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6750,
											"end": 6852,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 6750,
											"end": 6852,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6806,
											"end": 6819,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 6838,
											"end": 6845,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6831,
											"end": 6845,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6831,
											"end": 6845,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6831,
											"end": 6845,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 6831,
											"end": 6845,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6831,
											"end": 6845,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 6831,
											"end": 6845,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10956,
											"end": 11383,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 10956,
											"end": 11383,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11049,
											"end": 11053,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4322,
											"end": 4332,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 11049,
											"end": 11053,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11130,
											"end": 11155,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 4322,
											"end": 4332,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11147,
											"end": 11154,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 11130,
											"end": 11139,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 11130,
											"end": 11155,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11130,
											"end": 11155,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 11130,
											"end": 11155,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11103,
											"end": 11155,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11103,
											"end": 11155,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11193,
											"end": 11208,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 11173,
											"end": 11189,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11173,
											"end": 11208,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 11173,
											"end": 11208,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 11165,
											"end": 11250,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 11165,
											"end": 11250,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11165,
											"end": 11250,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11165,
											"end": 11250,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11165,
											"end": 11250,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11165,
											"end": 11250,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3170,
											"end": 3172,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11165,
											"end": 11250,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 11165,
											"end": 11250,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11165,
											"end": 11250,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3152,
											"end": 3173,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3209,
											"end": 3211,
											"name": "PUSH",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 3189,
											"end": 3207,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 3189,
											"end": 3207,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3189,
											"end": 3207,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3182,
											"end": 3212,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3248,
											"end": 3282,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77"
										},
										{
											"begin": 3228,
											"end": 3246,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 3228,
											"end": 3246,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3228,
											"end": 3246,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3221,
											"end": 3283,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "207A65726F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3299,
											"end": 3317,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 3299,
											"end": 3317,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3317,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3292,
											"end": 3327,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3344,
											"end": 3363,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 3344,
											"end": 3363,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11165,
											"end": 11250,
											"name": "tag",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 11165,
											"end": 11250,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11165,
											"end": 11250,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11165,
											"end": 11250,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 11165,
											"end": 11250,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11165,
											"end": 11250,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11165,
											"end": 11250,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 11165,
											"end": 11250,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11165,
											"end": 11250,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 11165,
											"end": 11250,
											"name": "tag",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 11165,
											"end": 11250,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11284,
											"end": 11344,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 11293,
											"end": 11298,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11300,
											"end": 11307,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 11328,
											"end": 11343,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 11309,
											"end": 11325,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 11309,
											"end": 11343,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 11284,
											"end": 11292,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 11284,
											"end": 11344,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8121,
											"end": 8310,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 8121,
											"end": 8310,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8200,
											"end": 8204,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4322,
											"end": 4332,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 8254,
											"end": 8282,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 4322,
											"end": 4332,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8271,
											"end": 8273,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 8275,
											"end": 8281,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 8254,
											"end": 8263,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 8254,
											"end": 8282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8368,
											"end": 8517,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 8368,
											"end": 8517,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8483,
											"end": 8501,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8483,
											"end": 8501,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8483,
											"end": 8501,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8457,
											"end": 8464,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8483,
											"end": 8501,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8483,
											"end": 8501,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8483,
											"end": 8501,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8483,
											"end": 8494,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 8483,
											"end": 8501,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8483,
											"end": 8501,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8483,
											"end": 8501,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8483,
											"end": 8501,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8483,
											"end": 8501,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8483,
											"end": 8501,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8483,
											"end": 8501,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8483,
											"end": 8501,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 8483,
											"end": 8510,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 8483,
											"end": 8510,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8483,
											"end": 8510,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 8483,
											"end": 8510,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8483,
											"end": 8510,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8483,
											"end": 8510,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8483,
											"end": 8510,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8483,
											"end": 8510,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8483,
											"end": 8510,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8483,
											"end": 8510,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8483,
											"end": 8510,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 8483,
											"end": 8510,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8483,
											"end": 8510,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8368,
											"end": 8517,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14838,
											"end": 15178,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 14838,
											"end": 15178,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14939,
											"end": 14958,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14939,
											"end": 14958,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14931,
											"end": 14999,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 14931,
											"end": 14999,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14931,
											"end": 14999,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14931,
											"end": 14999,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14931,
											"end": 14999,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14931,
											"end": 14999,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3576,
											"end": 3578,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 14931,
											"end": 14999,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 14931,
											"end": 14999,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14931,
											"end": 14999,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3558,
											"end": 3579,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3615,
											"end": 3617,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 3595,
											"end": 3613,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3595,
											"end": 3613,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3595,
											"end": 3613,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3588,
											"end": 3618,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3654,
											"end": 3688,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A20617070726F76652066726F6D20746865207A65726F20616464"
										},
										{
											"begin": 3634,
											"end": 3652,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 3634,
											"end": 3652,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3634,
											"end": 3652,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3627,
											"end": 3689,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "72657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3705,
											"end": 3723,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 3705,
											"end": 3723,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3705,
											"end": 3723,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3698,
											"end": 3732,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3749,
											"end": 3768,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 3749,
											"end": 3768,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14931,
											"end": 14999,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3374,
											"end": 3774,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14931,
											"end": 14999,
											"name": "tag",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 14931,
											"end": 14999,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15017,
											"end": 15038,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15017,
											"end": 15038,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15009,
											"end": 15077,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 15009,
											"end": 15077,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15009,
											"end": 15077,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15009,
											"end": 15077,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 15009,
											"end": 15077,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15009,
											"end": 15077,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3981,
											"end": 3983,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 15009,
											"end": 15077,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 15009,
											"end": 15077,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15009,
											"end": 15077,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3963,
											"end": 3984,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4020,
											"end": 4022,
											"name": "PUSH",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 4000,
											"end": 4018,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 4000,
											"end": 4018,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4000,
											"end": 4018,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3993,
											"end": 4023,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4059,
											"end": 4093,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A20617070726F766520746F20746865207A65726F206164647265"
										},
										{
											"begin": 4039,
											"end": 4057,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 4039,
											"end": 4057,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4039,
											"end": 4057,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4032,
											"end": 4094,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4110,
											"end": 4128,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 4110,
											"end": 4128,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4110,
											"end": 4128,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4103,
											"end": 4135,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4152,
											"end": 4171,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 4152,
											"end": 4171,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15009,
											"end": 15077,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3779,
											"end": 4177,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15009,
											"end": 15077,
											"name": "tag",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 15009,
											"end": 15077,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15088,
											"end": 15106,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 15088,
											"end": 15106,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15088,
											"end": 15106,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15088,
											"end": 15106,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15088,
											"end": 15106,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15088,
											"end": 15106,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15088,
											"end": 15106,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15088,
											"end": 15099,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 15088,
											"end": 15106,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 15088,
											"end": 15106,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15088,
											"end": 15106,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15088,
											"end": 15106,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15088,
											"end": 15106,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15088,
											"end": 15106,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15088,
											"end": 15106,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 15088,
											"end": 15106,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 15088,
											"end": 15115,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 15088,
											"end": 15115,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 15088,
											"end": 15115,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15088,
											"end": 15115,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15088,
											"end": 15115,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 15088,
											"end": 15115,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15088,
											"end": 15115,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 15088,
											"end": 15115,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15088,
											"end": 15115,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15088,
											"end": 15115,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15088,
											"end": 15115,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15088,
											"end": 15115,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15088,
											"end": 15115,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 15088,
											"end": 15124,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 15088,
											"end": 15124,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15088,
											"end": 15124,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 15139,
											"end": 15171,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15139,
											"end": 15171,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15139,
											"end": 15171,
											"name": "PUSH",
											"source": 0,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 15139,
											"end": 15171,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1315,
											"end": 1333,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15139,
											"end": 15171,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15139,
											"end": 15171,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 15139,
											"end": 15171,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15139,
											"end": 15171,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15139,
											"end": 15171,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 15139,
											"end": 15171,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15139,
											"end": 15171,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 14838,
											"end": 15178,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14838,
											"end": 15178,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14838,
											"end": 15178,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14838,
											"end": 15178,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15459,
											"end": 15870,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 15459,
											"end": 15870,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15559,
											"end": 15583,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15586,
											"end": 15611,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 15596,
											"end": 15601,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 15603,
											"end": 15610,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 15586,
											"end": 15595,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 15586,
											"end": 15611,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15586,
											"end": 15611,
											"name": "tag",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 15586,
											"end": 15611,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15559,
											"end": 15611,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15559,
											"end": 15611,
											"name": "POP",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 15625,
											"end": 15641,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15625,
											"end": 15662,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 15621,
											"end": 15864,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 15621,
											"end": 15864,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15706,
											"end": 15712,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15686,
											"end": 15702,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15686,
											"end": 15712,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 15686,
											"end": 15712,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 15678,
											"end": 15746,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 15678,
											"end": 15746,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15678,
											"end": 15746,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15678,
											"end": 15746,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 15678,
											"end": 15746,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15678,
											"end": 15746,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4384,
											"end": 4386,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 15678,
											"end": 15746,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 15678,
											"end": 15746,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15678,
											"end": 15746,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4366,
											"end": 4387,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4423,
											"end": 4425,
											"name": "PUSH",
											"source": 1,
											"value": "1D"
										},
										{
											"begin": 4403,
											"end": 4421,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 4403,
											"end": 4421,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4403,
											"end": 4421,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4396,
											"end": 4426,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4462,
											"end": 4493,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000"
										},
										{
											"begin": 4442,
											"end": 4460,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 4442,
											"end": 4460,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4442,
											"end": 4460,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4435,
											"end": 4494,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4511,
											"end": 4529,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 4511,
											"end": 4529,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15678,
											"end": 15746,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 4182,
											"end": 4535,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15678,
											"end": 15746,
											"name": "tag",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 15678,
											"end": 15746,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15788,
											"end": 15839,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 15797,
											"end": 15802,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 15804,
											"end": 15811,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 15832,
											"end": 15838,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 15813,
											"end": 15829,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 15813,
											"end": 15838,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 15788,
											"end": 15796,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 15788,
											"end": 15839,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15788,
											"end": 15839,
											"name": "tag",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 15788,
											"end": 15839,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15549,
											"end": 15870,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15459,
											"end": 15870,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15459,
											"end": 15870,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15459,
											"end": 15870,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15459,
											"end": 15870,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11837,
											"end": 12625,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 11837,
											"end": 12625,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11933,
											"end": 11951,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 11933,
											"end": 11951,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11925,
											"end": 11993,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 11925,
											"end": 11993,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11925,
											"end": 11993,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11925,
											"end": 11993,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11925,
											"end": 11993,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11925,
											"end": 11993,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4742,
											"end": 4744,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11925,
											"end": 11993,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 11925,
											"end": 11993,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11925,
											"end": 11993,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4724,
											"end": 4745,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4781,
											"end": 4783,
											"name": "PUSH",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 4761,
											"end": 4779,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 4761,
											"end": 4779,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4761,
											"end": 4779,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4754,
											"end": 4784,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4820,
											"end": 4854,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A207472616E736665722066726F6D20746865207A65726F206164"
										},
										{
											"begin": 4800,
											"end": 4818,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 4800,
											"end": 4818,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4800,
											"end": 4818,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4793,
											"end": 4855,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4871,
											"end": 4889,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 4871,
											"end": 4889,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4871,
											"end": 4889,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4864,
											"end": 4899,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4916,
											"end": 4935,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 4916,
											"end": 4935,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11925,
											"end": 11993,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 4540,
											"end": 4941,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11925,
											"end": 11993,
											"name": "tag",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 11925,
											"end": 11993,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12011,
											"end": 12027,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12011,
											"end": 12027,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12003,
											"end": 12067,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 12003,
											"end": 12067,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12003,
											"end": 12067,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12003,
											"end": 12067,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12003,
											"end": 12067,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12003,
											"end": 12067,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5148,
											"end": 5150,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 12003,
											"end": 12067,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 12003,
											"end": 12067,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12003,
											"end": 12067,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5130,
											"end": 5151,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5187,
											"end": 5189,
											"name": "PUSH",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 5167,
											"end": 5185,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 5167,
											"end": 5185,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5167,
											"end": 5185,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5160,
											"end": 5190,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5226,
											"end": 5260,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A207472616E7366657220746F20746865207A65726F2061646472"
										},
										{
											"begin": 5206,
											"end": 5224,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 5206,
											"end": 5224,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5206,
											"end": 5224,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5199,
											"end": 5261,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5277,
											"end": 5295,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 5277,
											"end": 5295,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5277,
											"end": 5295,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5270,
											"end": 5303,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5320,
											"end": 5339,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 5320,
											"end": 5339,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12003,
											"end": 12067,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 4946,
											"end": 5345,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12003,
											"end": 12067,
											"name": "tag",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 12003,
											"end": 12067,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12149,
											"end": 12164,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12149,
											"end": 12164,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12127,
											"end": 12146,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12149,
											"end": 12164,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12149,
											"end": 12164,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12149,
											"end": 12164,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12149,
											"end": 12164,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12149,
											"end": 12164,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12149,
											"end": 12164,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12149,
											"end": 12164,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12149,
											"end": 12164,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12149,
											"end": 12164,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12149,
											"end": 12164,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 12149,
											"end": 12164,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12182,
											"end": 12203,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12182,
											"end": 12203,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12182,
											"end": 12203,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 12182,
											"end": 12203,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 12174,
											"end": 12246,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 12174,
											"end": 12246,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12174,
											"end": 12246,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12174,
											"end": 12246,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12174,
											"end": 12246,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12174,
											"end": 12246,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5552,
											"end": 5554,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 12174,
											"end": 12246,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 12174,
											"end": 12246,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12174,
											"end": 12246,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5534,
											"end": 5555,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5591,
											"end": 5593,
											"name": "PUSH",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 5571,
											"end": 5589,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 5571,
											"end": 5589,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5571,
											"end": 5589,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5564,
											"end": 5594,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5630,
											"end": 5664,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A207472616E7366657220616D6F756E7420657863656564732062"
										},
										{
											"begin": 5610,
											"end": 5628,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 5610,
											"end": 5628,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5610,
											"end": 5628,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5603,
											"end": 5665,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "616C616E6365"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5681,
											"end": 5699,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 5681,
											"end": 5699,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5681,
											"end": 5699,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5674,
											"end": 5710,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5727,
											"end": 5746,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 5727,
											"end": 5746,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12174,
											"end": 12246,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 5350,
											"end": 5752,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12174,
											"end": 12246,
											"name": "tag",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 12174,
											"end": 12246,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12280,
											"end": 12295,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 12280,
											"end": 12295,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12280,
											"end": 12295,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12280,
											"end": 12289,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12280,
											"end": 12295,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12280,
											"end": 12295,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12280,
											"end": 12295,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12280,
											"end": 12295,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12280,
											"end": 12295,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12280,
											"end": 12295,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12280,
											"end": 12295,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12280,
											"end": 12295,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12280,
											"end": 12295,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12280,
											"end": 12295,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12280,
											"end": 12295,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 12298,
											"end": 12318,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 12298,
											"end": 12318,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 12298,
											"end": 12318,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 12280,
											"end": 12318,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12280,
											"end": 12318,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 12495,
											"end": 12508,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 12495,
											"end": 12508,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 12495,
											"end": 12508,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12495,
											"end": 12508,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12495,
											"end": 12508,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12495,
											"end": 12508,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12495,
											"end": 12508,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12495,
											"end": 12508,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 12495,
											"end": 12508,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12495,
											"end": 12508,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 12495,
											"end": 12518,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12495,
											"end": 12518,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12495,
											"end": 12518,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 12495,
											"end": 12518,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12495,
											"end": 12518,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12495,
											"end": 12518,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 12544,
											"end": 12570,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 12544,
											"end": 12570,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12495,
											"end": 12508,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12495,
											"end": 12508,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 12544,
											"end": 12570,
											"name": "PUSH",
											"source": 0,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 12544,
											"end": 12570,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1315,
											"end": 1333,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12544,
											"end": 12570,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12544,
											"end": 12570,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12544,
											"end": 12570,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12544,
											"end": 12570,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12544,
											"end": 12570,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 12544,
											"end": 12570,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12544,
											"end": 12570,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 12581,
											"end": 12618,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 16454,
											"end": 16545,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14,
											"end": 562,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 14,
											"end": 562,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 126,
											"end": 130,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 155,
											"end": 157,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 184,
											"end": 186,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 173,
											"end": 182,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 166,
											"end": 187,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 216,
											"end": 222,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 210,
											"end": 223,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 259,
											"end": 265,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 254,
											"end": 256,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 243,
											"end": 252,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 239,
											"end": 257,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 232,
											"end": 266,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 284,
											"end": 285,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "tag",
											"source": 1,
											"value": "143"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 308,
											"end": 314,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 305,
											"end": 306,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 302,
											"end": 315,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 294,
											"end": 434,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 294,
											"end": 434,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "145"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 403,
											"end": 417,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 403,
											"end": 417,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 403,
											"end": 417,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 399,
											"end": 422,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 399,
											"end": 422,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 393,
											"end": 423,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 369,
											"end": 386,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 369,
											"end": 386,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 369,
											"end": 386,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 388,
											"end": 390,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 365,
											"end": 391,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 358,
											"end": 424,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 323,
											"end": 333,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 323,
											"end": 333,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 294,
											"end": 434,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "143"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 294,
											"end": 434,
											"name": "tag",
											"source": 1,
											"value": "145"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 298,
											"end": 301,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 483,
											"end": 484,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 478,
											"end": 480,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 469,
											"end": 475,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 458,
											"end": 467,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 454,
											"end": 476,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 450,
											"end": 481,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 443,
											"end": 485,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 553,
											"end": 555,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 546,
											"end": 548,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 542,
											"end": 549,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 537,
											"end": 539,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 529,
											"end": 535,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 525,
											"end": 540,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 521,
											"end": 550,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 510,
											"end": 519,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 506,
											"end": 551,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 502,
											"end": 556,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 494,
											"end": 556,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 494,
											"end": 556,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 494,
											"end": 556,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 494,
											"end": 556,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14,
											"end": 562,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 14,
											"end": 562,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 14,
											"end": 562,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14,
											"end": 562,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14,
											"end": 562,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 567,
											"end": 740,
											"name": "tag",
											"source": 1,
											"value": "140"
										},
										{
											"begin": 567,
											"end": 740,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 635,
											"end": 655,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 635,
											"end": 655,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 684,
											"end": 715,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 684,
											"end": 715,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 674,
											"end": 716,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 674,
											"end": 716,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 664,
											"end": 734,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "147"
										},
										{
											"begin": 664,
											"end": 734,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 730,
											"end": 731,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 727,
											"end": 728,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 720,
											"end": 732,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 664,
											"end": 734,
											"name": "tag",
											"source": 1,
											"value": "147"
										},
										{
											"begin": 664,
											"end": 734,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 567,
											"end": 740,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 567,
											"end": 740,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 567,
											"end": 740,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 567,
											"end": 740,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 745,
											"end": 999,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 745,
											"end": 999,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 813,
											"end": 819,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 821,
											"end": 827,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 874,
											"end": 876,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 862,
											"end": 871,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 853,
											"end": 860,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 849,
											"end": 872,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 845,
											"end": 877,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 842,
											"end": 894,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 842,
											"end": 894,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "149"
										},
										{
											"begin": 842,
											"end": 894,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 890,
											"end": 891,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 887,
											"end": 888,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 880,
											"end": 892,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 842,
											"end": 894,
											"name": "tag",
											"source": 1,
											"value": "149"
										},
										{
											"begin": 842,
											"end": 894,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 913,
											"end": 942,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "150"
										},
										{
											"begin": 932,
											"end": 941,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 913,
											"end": 942,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "140"
										},
										{
											"begin": 913,
											"end": 942,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 913,
											"end": 942,
											"name": "tag",
											"source": 1,
											"value": "150"
										},
										{
											"begin": 913,
											"end": 942,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 903,
											"end": 942,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 989,
											"end": 991,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 974,
											"end": 992,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 974,
											"end": 992,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 974,
											"end": 992,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 974,
											"end": 992,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 961,
											"end": 993,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 961,
											"end": 993,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 745,
											"end": 999,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1455,
											"end": 1461,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1463,
											"end": 1469,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1471,
											"end": 1477,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1524,
											"end": 1526,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 1512,
											"end": 1521,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1503,
											"end": 1510,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 1499,
											"end": 1522,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1495,
											"end": 1527,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 1492,
											"end": 1544,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1492,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "154"
										},
										{
											"begin": 1492,
											"end": 1544,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1540,
											"end": 1541,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1537,
											"end": 1538,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1530,
											"end": 1542,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1492,
											"end": 1544,
											"name": "tag",
											"source": 1,
											"value": "154"
										},
										{
											"begin": 1492,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1563,
											"end": 1592,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "155"
										},
										{
											"begin": 1582,
											"end": 1591,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1563,
											"end": 1592,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "140"
										},
										{
											"begin": 1563,
											"end": 1592,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1563,
											"end": 1592,
											"name": "tag",
											"source": 1,
											"value": "155"
										},
										{
											"begin": 1563,
											"end": 1592,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1553,
											"end": 1592,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1553,
											"end": 1592,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1611,
											"end": 1649,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "156"
										},
										{
											"begin": 1645,
											"end": 1647,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1634,
											"end": 1643,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1630,
											"end": 1648,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1611,
											"end": 1649,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "140"
										},
										{
											"begin": 1611,
											"end": 1649,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1611,
											"end": 1649,
											"name": "tag",
											"source": 1,
											"value": "156"
										},
										{
											"begin": 1611,
											"end": 1649,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1601,
											"end": 1649,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1601,
											"end": 1649,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1696,
											"end": 1698,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1685,
											"end": 1694,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1681,
											"end": 1699,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1668,
											"end": 1700,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1658,
											"end": 1700,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1658,
											"end": 1700,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1378,
											"end": 1706,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1900,
											"end": 2086,
											"name": "tag",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 1900,
											"end": 2086,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1959,
											"end": 1965,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2012,
											"end": 2014,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2000,
											"end": 2009,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1991,
											"end": 1998,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1987,
											"end": 2010,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1983,
											"end": 2015,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 1980,
											"end": 2032,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1980,
											"end": 2032,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "159"
										},
										{
											"begin": 1980,
											"end": 2032,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2028,
											"end": 2029,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2025,
											"end": 2026,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2018,
											"end": 2030,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1980,
											"end": 2032,
											"name": "tag",
											"source": 1,
											"value": "159"
										},
										{
											"begin": 1980,
											"end": 2032,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2051,
											"end": 2080,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "160"
										},
										{
											"begin": 2070,
											"end": 2079,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2051,
											"end": 2080,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "140"
										},
										{
											"begin": 2051,
											"end": 2080,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2051,
											"end": 2080,
											"name": "tag",
											"source": 1,
											"value": "160"
										},
										{
											"begin": 2051,
											"end": 2080,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2041,
											"end": 2080,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 1900,
											"end": 2086,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1900,
											"end": 2086,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2351,
											"name": "tag",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2091,
											"end": 2351,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2159,
											"end": 2165,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2167,
											"end": 2173,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2222,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2208,
											"end": 2217,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2199,
											"end": 2206,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2195,
											"end": 2218,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2191,
											"end": 2223,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 2188,
											"end": 2240,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2188,
											"end": 2240,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "162"
										},
										{
											"begin": 2188,
											"end": 2240,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2236,
											"end": 2237,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2233,
											"end": 2234,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2226,
											"end": 2238,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2188,
											"end": 2240,
											"name": "tag",
											"source": 1,
											"value": "162"
										},
										{
											"begin": 2188,
											"end": 2240,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2259,
											"end": 2288,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "163"
										},
										{
											"begin": 2278,
											"end": 2287,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2259,
											"end": 2288,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "140"
										},
										{
											"begin": 2259,
											"end": 2288,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2259,
											"end": 2288,
											"name": "tag",
											"source": 1,
											"value": "163"
										},
										{
											"begin": 2259,
											"end": 2288,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2249,
											"end": 2288,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2249,
											"end": 2288,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2307,
											"end": 2345,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "164"
										},
										{
											"begin": 2341,
											"end": 2343,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2330,
											"end": 2339,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2326,
											"end": 2344,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2307,
											"end": 2345,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "140"
										},
										{
											"begin": 2307,
											"end": 2345,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2307,
											"end": 2345,
											"name": "tag",
											"source": 1,
											"value": "164"
										},
										{
											"begin": 2307,
											"end": 2345,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2297,
											"end": 2345,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2297,
											"end": 2345,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2351,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2351,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2351,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2351,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2351,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2351,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2356,
											"end": 2736,
											"name": "tag",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 2356,
											"end": 2736,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2436,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2431,
											"end": 2443,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2431,
											"end": 2443,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2431,
											"end": 2443,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 2431,
											"end": 2443,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2478,
											"end": 2490,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2478,
											"end": 2490,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2478,
											"end": 2490,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2499,
											"end": 2560,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "166"
										},
										{
											"begin": 2499,
											"end": 2560,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2553,
											"end": 2557,
											"name": "PUSH",
											"source": 1,
											"value": "7F"
										},
										{
											"begin": 2545,
											"end": 2551,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2531,
											"end": 2558,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2531,
											"end": 2558,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2499,
											"end": 2560,
											"name": "tag",
											"source": 1,
											"value": "166"
										},
										{
											"begin": 2499,
											"end": 2560,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2606,
											"end": 2608,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2598,
											"end": 2604,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2595,
											"end": 2609,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2575,
											"end": 2593,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2572,
											"end": 2610,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2569,
											"end": 2730,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "167"
										},
										{
											"begin": 2569,
											"end": 2730,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2652,
											"end": 2662,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 2647,
											"end": 2650,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 2643,
											"end": 2663,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 2640,
											"end": 2641,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2633,
											"end": 2664,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2687,
											"end": 2691,
											"name": "PUSH",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 2684,
											"end": 2685,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2677,
											"end": 2692,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2715,
											"end": 2719,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2712,
											"end": 2713,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2705,
											"end": 2720,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2569,
											"end": 2730,
											"name": "tag",
											"source": 1,
											"value": "167"
										},
										{
											"begin": 2569,
											"end": 2730,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2569,
											"end": 2730,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2356,
											"end": 2736,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2356,
											"end": 2736,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2356,
											"end": 2736,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2356,
											"end": 2736,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2741,
											"end": 2963,
											"name": "tag",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 2741,
											"end": 2963,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2806,
											"end": 2815,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2806,
											"end": 2815,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2806,
											"end": 2815,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2827,
											"end": 2837,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2827,
											"end": 2837,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2827,
											"end": 2837,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2824,
											"end": 2957,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2824,
											"end": 2957,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 2824,
											"end": 2957,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2879,
											"end": 2889,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 2874,
											"end": 2877,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 2870,
											"end": 2890,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 2867,
											"end": 2868,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2860,
											"end": 2891,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2914,
											"end": 2918,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 2911,
											"end": 2912,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2904,
											"end": 2919,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2942,
											"end": 2946,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2939,
											"end": 2940,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2932,
											"end": 2947,
											"name": "REVERT",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"contracts/tokenplay.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"increaseAllowance(address,uint256)": "39509351",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/tokenplay.sol\":\"ERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/tokenplay.sol\":{\"keccak256\":\"0xc51203f5a3b51abfdd040e607acf94e478345f1b943b8a21e8633c7956581e73\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://aa1bc6a0aac2c45edfd942dfd39bffba36f9ee6e3522c65c1755891267926394\",\"dweb:/ipfs/QmeJh4iBomTSqbRnFRfim6cQexjAHk57rwmDpTf5L2PawM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 133,
								"contract": "contracts/tokenplay.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 139,
								"contract": "contracts/tokenplay.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 141,
								"contract": "contracts/tokenplay.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 143,
								"contract": "contracts/tokenplay.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 145,
								"contract": "contracts/tokenplay.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/tokenplay.sol\":\"IERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/tokenplay.sol\":{\"keccak256\":\"0xc51203f5a3b51abfdd040e607acf94e478345f1b943b8a21e8633c7956581e73\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://aa1bc6a0aac2c45edfd942dfd39bffba36f9ee6e3522c65c1755891267926394\",\"dweb:/ipfs/QmeJh4iBomTSqbRnFRfim6cQexjAHk57rwmDpTf5L2PawM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/tokenplay.sol\":\"IERC20Metadata\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/tokenplay.sol\":{\"keccak256\":\"0xc51203f5a3b51abfdd040e607acf94e478345f1b943b8a21e8633c7956581e73\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://aa1bc6a0aac2c45edfd942dfd39bffba36f9ee6e3522c65c1755891267926394\",\"dweb:/ipfs/QmeJh4iBomTSqbRnFRfim6cQexjAHk57rwmDpTf5L2PawM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"InterfaceERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenUser",
									"type": "address"
								}
							],
							"name": "findBalance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "mint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "referrer",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokens",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"findBalance(address)": "cfba4fe0",
							"mint(address)": "6a627842",
							"transfer(address,address,uint256)": "beabacc8"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenUser\",\"type\":\"address\"}],\"name\":\"findBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"referrer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/tokenplay.sol\":\"InterfaceERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/tokenplay.sol\":{\"keccak256\":\"0xc51203f5a3b51abfdd040e607acf94e478345f1b943b8a21e8633c7956581e73\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://aa1bc6a0aac2c45edfd942dfd39bffba36f9ee6e3522c65c1755891267926394\",\"dweb:/ipfs/QmeJh4iBomTSqbRnFRfim6cQexjAHk57rwmDpTf5L2PawM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Tokenplay": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_ERC20address",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "admins",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getparent",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "inter",
							"outputs": [
								{
									"internalType": "contract InterfaceERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "join",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "parent",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "random",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "staker",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "tokenid",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "referrer",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "setreferrer",
									"type": "bool"
								},
								{
									"internalType": "bool",
									"name": "activeUser",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "tokenId",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/tokenplay.sol\":18147:20803  contract Tokenplay {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/tokenplay.sol\":18212:18213  0 */\n  0x00\n    /* \"contracts/tokenplay.sol\":18199:18213  uint count = 0 */\n  0x01\n  sstore\n    /* \"contracts/tokenplay.sol\":18499:18780  constructor(address _ERC20address) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/tokenplay.sol\":18585:18590  inter */\n  0x04\n    /* \"contracts/tokenplay.sol\":18585:18622  inter = InterfaceERC20(_ERC20address) */\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n  dup4\n  dup2\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  swap3\n  dup4\n  and\n  or\n  dup4\n  sstore\n  0x00\n    /* \"contracts/tokenplay.sol\":18632:18651  admins = msg.sender */\n  dup1\n  sload\n  swap1\n  swap3\n  and\n    /* \"contracts/tokenplay.sol\":18641:18651  msg.sender */\n  caller\n    /* \"contracts/tokenplay.sol\":18632:18651  admins = msg.sender */\n  swap1\n  dup2\n  or\n  dup4\n  sstore\n    /* \"contracts/tokenplay.sol\":18661:18679  staker[msg.sender] */\n  dup1\n  dup4\n  mstore\n    /* \"contracts/tokenplay.sol\":18661:18667  staker */\n  0x05\n    /* \"contracts/tokenplay.sol\":18661:18679  staker[msg.sender] */\n  0x20\n  mstore\n  0x40\n  dup1\n  dup5\n  keccak256\n  0x01\n    /* \"contracts/tokenplay.sol\":18661:18690  staker[msg.sender].activeUser */\n  swap1\n  dup2\n  add\n    /* \"contracts/tokenplay.sol\":18661:18697  staker[msg.sender].activeUser = true */\n  dup1\n  sload\n  not(shl(0xa8, 0xff))\n  and\n  shl(0xa8, 0x01)\n  or\n  swap1\n  sstore\n    /* \"contracts/tokenplay.sol\":18707:18713  parent */\n  0x02\n    /* \"contracts/tokenplay.sol\":18707:18726  parent = msg.sender */\n  dup1\n  sload\n    /* \"contracts/tokenplay.sol\":18585:18622  inter = InterfaceERC20(_ERC20address) */\n  0x0100\n    /* \"contracts/tokenplay.sol\":18707:18726  parent = msg.sender */\n  swap1\n  swap5\n  mul\n  not(sub(shl(0xa8, 0x01), 0x0100))\n  swap1\n  swap5\n  and\n  swap4\n  swap1\n  swap4\n  or\n  swap1\n  swap3\n  sstore\n    /* \"contracts/tokenplay.sol\":18736:18745  count = 1 */\n  swap1\n  dup1\n  sstore\n    /* \"contracts/tokenplay.sol\":18755:18760  inter */\n  dup4\n  sload\n    /* \"contracts/tokenplay.sol\":18766:18772  admins */\n  swap3\n  sload\n    /* \"contracts/tokenplay.sol\":18755:18773  inter.mint(admins) */\n  swap1\n  mload\n  shl(0xe1, 0x35313c21)\n  dup2\n  mstore\n    /* \"contracts/tokenplay.sol\":18766:18772  admins */\n  swap1\n  dup3\n  and\n    /* \"contracts/tokenplay.sol\":18755:18773  inter.mint(admins) */\n  swap4\n  dup2\n  add\n    /* \"#utility.yul\":455:506   */\n  swap4\n  swap1\n  swap4\n  mstore\n    /* \"contracts/tokenplay.sol\":18755:18760  inter */\n  and\n  swap1\n    /* \"contracts/tokenplay.sol\":18755:18765  inter.mint */\n  0x6a627842\n  swap1\n    /* \"#utility.yul\":428:446   */\n  0x24\n  add\n    /* \"contracts/tokenplay.sol\":18755:18773  inter.mint(admins) */\n  0x00\n  mload(0x40)\n  dup1\n  dup4\n  sub\n  dup2\n  0x00\n  dup8\n  dup1\n  extcodesize\n  iszero\n  dup1\n  iszero\n  tag_8\n  jumpi\n  0x00\n  dup1\n  revert\ntag_8:\n  pop\n  gas\n  call\n  iszero\n  dup1\n  iszero\n  tag_10\n  jumpi\n  returndatasize\n  0x00\n  dup1\n  returndatacopy\n  revert(0x00, returndatasize)\ntag_10:\n  pop\n  pop\n  pop\n  pop\n    /* \"contracts/tokenplay.sol\":18499:18780  constructor(address _ERC20address) {... */\n  pop\n    /* \"contracts/tokenplay.sol\":18147:20803  contract Tokenplay {... */\n  jump(tag_12)\n    /* \"#utility.yul\":14:304   */\ntag_3:\n    /* \"#utility.yul\":84:90   */\n  0x00\n    /* \"#utility.yul\":137:139   */\n  0x20\n    /* \"#utility.yul\":125:134   */\n  dup3\n    /* \"#utility.yul\":116:123   */\n  dup5\n    /* \"#utility.yul\":112:135   */\n  sub\n    /* \"#utility.yul\":108:140   */\n  slt\n    /* \"#utility.yul\":105:157   */\n  iszero\n  tag_14\n  jumpi\n    /* \"#utility.yul\":153:154   */\n  0x00\n    /* \"#utility.yul\":150:151   */\n  dup1\n    /* \"#utility.yul\":143:155   */\n  revert\n    /* \"#utility.yul\":105:157   */\ntag_14:\n    /* \"#utility.yul\":179:195   */\n  dup2\n  mload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":224:255   */\n  dup2\n  and\n    /* \"#utility.yul\":214:256   */\n  dup2\n  eq\n    /* \"#utility.yul\":204:274   */\n  tag_15\n  jumpi\n    /* \"#utility.yul\":270:271   */\n  0x00\n    /* \"#utility.yul\":267:268   */\n  dup1\n    /* \"#utility.yul\":260:272   */\n  revert\n    /* \"#utility.yul\":204:274   */\ntag_15:\n    /* \"#utility.yul\":293:298   */\n  swap4\n    /* \"#utility.yul\":14:304   */\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":309:512   */\ntag_12:\n    /* \"contracts/tokenplay.sol\":18147:20803  contract Tokenplay {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/tokenplay.sol\":18147:20803  contract Tokenplay {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x82e4eda4\n      gt\n      tag_11\n      jumpi\n      dup1\n      0x82e4eda4\n      eq\n      tag_7\n      jumpi\n      dup1\n      0xa5de3619\n      eq\n      tag_8\n      jumpi\n      dup1\n      0xb688a363\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xf13ad725\n      eq\n      tag_10\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_11:\n      dup1\n      0x17d70f7c\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x255d45d8\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x5ec01e4d\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x60f96a8f\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/tokenplay.sol\":19159:19419  function tokenId() public {... */\n    tag_3:\n      tag_12\n      tag_13\n      jump\t// in\n    tag_12:\n      stop\n        /* \"contracts/tokenplay.sol\":20553:20666  function getparent() public view activeUser returns (address) {... */\n    tag_4:\n      tag_14\n      tag_15\n      jump\t// in\n    tag_14:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":178:210   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":160:211   */\n      dup2\n      mstore\n        /* \"#utility.yul\":148:150   */\n      0x20\n        /* \"#utility.yul\":133:151   */\n      add\n        /* \"contracts/tokenplay.sol\":20553:20666  function getparent() public view activeUser returns (address) {... */\n    tag_16:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/tokenplay.sol\":18269:18287  uint public random */\n    tag_5:\n      tag_18\n      sload(0x03)\n      dup2\n      jump\n    tag_18:\n      mload(0x40)\n        /* \"#utility.yul\":368:393   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":356:358   */\n      0x20\n        /* \"#utility.yul\":341:359   */\n      add\n        /* \"contracts/tokenplay.sol\":18269:18287  uint public random */\n      tag_16\n        /* \"#utility.yul\":222:399   */\n      jump\n        /* \"contracts/tokenplay.sol\":18242:18263  address public parent */\n    tag_6:\n      sload(0x02)\n      tag_14\n      swap1\n      0x0100\n      swap1\n      div\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"contracts/tokenplay.sol\":18327:18367  mapping(address => Staker) public staker */\n    tag_7:\n      tag_25\n      tag_26\n      calldatasize\n      0x04\n      tag_27\n      jump\t// in\n    tag_26:\n      mstore(0x20, 0x05)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      dup1\n      sload\n      0x01\n      swap1\n      swap2\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      dup2\n      and\n      swap1\n      0xff\n      shl(0xa0, 0x01)\n      dup3\n      div\n      dup2\n      and\n      swap2\n      shl(0xa8, 0x01)\n      swap1\n      div\n      and\n      dup5\n      jump\n    tag_25:\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":914:939   */\n      swap5\n      dup6\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":975:1007   */\n      swap1\n      swap4\n      and\n        /* \"#utility.yul\":970:972   */\n      0x20\n        /* \"#utility.yul\":955:973   */\n      dup6\n      add\n        /* \"#utility.yul\":948:1008   */\n      mstore\n        /* \"#utility.yul\":1051:1065   */\n      swap1\n      iszero\n        /* \"#utility.yul\":1044:1066   */\n      iszero\n        /* \"#utility.yul\":1024:1042   */\n      swap2\n      dup4\n      add\n        /* \"#utility.yul\":1017:1067   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":1110:1124   */\n      iszero\n        /* \"#utility.yul\":1103:1125   */\n      iszero\n        /* \"#utility.yul\":1098:1100   */\n      0x60\n        /* \"#utility.yul\":1083:1101   */\n      dup3\n      add\n        /* \"#utility.yul\":1076:1126   */\n      mstore\n        /* \"#utility.yul\":901:904   */\n      0x80\n        /* \"#utility.yul\":886:905   */\n      add\n        /* \"contracts/tokenplay.sol\":18327:18367  mapping(address => Staker) public staker */\n      tag_16\n        /* \"#utility.yul\":695:1132   */\n      jump\n        /* \"contracts/tokenplay.sol\":18172:18193  address public admins */\n    tag_8:\n      sload(0x00)\n      tag_14\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"contracts/tokenplay.sol\":19459:20046  function join() public {... */\n    tag_9:\n      tag_12\n      tag_35\n      jump\t// in\n        /* \"contracts/tokenplay.sol\":18293:18320  InterfaceERC20 public inter */\n    tag_10:\n      sload(0x04)\n      tag_14\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"contracts/tokenplay.sol\":19159:19419  function tokenId() public {... */\n    tag_13:\n        /* \"contracts/tokenplay.sol\":19211:19221  msg.sender */\n      caller\n        /* \"contracts/tokenplay.sol\":19204:19222  staker[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/tokenplay.sol\":19204:19210  staker */\n      0x05\n        /* \"contracts/tokenplay.sol\":19204:19222  staker[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/tokenplay.sol\":19204:19233  staker[msg.sender].activeUser */\n      0x01\n      add\n      sload\n      shl(0xa8, 0x01)\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/tokenplay.sol\":19203:19233  !staker[msg.sender].activeUser */\n      iszero\n        /* \"contracts/tokenplay.sol\":19195:19256  require(!staker[msg.sender].activeUser, \"user already exist\") */\n      tag_41\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":1569:1571   */\n      0x20\n        /* \"contracts/tokenplay.sol\":19195:19256  require(!staker[msg.sender].activeUser, \"user already exist\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1551:1572   */\n      mstore\n        /* \"#utility.yul\":1608:1610   */\n      0x12\n        /* \"#utility.yul\":1588:1606   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":1581:1611   */\n      mstore\n      shl(0x72, 0x1d5cd95c88185b1c9958591e48195e1a5cdd)\n        /* \"#utility.yul\":1627:1645   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":1620:1668   */\n      mstore\n        /* \"#utility.yul\":1685:1703   */\n      0x64\n      add\n        /* \"contracts/tokenplay.sol\":19195:19256  require(!staker[msg.sender].activeUser, \"user already exist\") */\n    tag_42:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_41:\n        /* \"contracts/tokenplay.sol\":19349:19355  random */\n      sload(0x03)\n        /* \"contracts/tokenplay.sol\":19303:19356  abi.encodePacked(msg.sender, block.timestamp, random) */\n      mload(0x40)\n      not(0xffffffffffffffffffffffff)\n        /* \"contracts/tokenplay.sol\":19320:19330  msg.sender */\n      caller\n        /* \"#utility.yul\":1919:1921   */\n      0x60\n        /* \"#utility.yul\":1915:1930   */\n      shl\n        /* \"#utility.yul\":1911:1964   */\n      and\n        /* \"contracts/tokenplay.sol\":19303:19356  abi.encodePacked(msg.sender, block.timestamp, random) */\n      0x20\n      dup3\n      add\n        /* \"#utility.yul\":1899:1965   */\n      mstore\n        /* \"contracts/tokenplay.sol\":19332:19347  block.timestamp */\n      timestamp\n        /* \"#utility.yul\":1981:1993   */\n      0x34\n      dup3\n      add\n        /* \"#utility.yul\":1974:2002   */\n      mstore\n        /* \"#utility.yul\":2018:2030   */\n      0x54\n      dup2\n      add\n        /* \"#utility.yul\":2011:2039   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":2055:2067   */\n      0x74\n      add\n        /* \"contracts/tokenplay.sol\":19303:19356  abi.encodePacked(msg.sender, block.timestamp, random) */\n      0x40\n      dup1\n      mload\n      not(0x1f)\n      dup2\n      dup5\n      sub\n      add\n      dup2\n      mstore\n      swap2\n      dup2\n      mstore\n        /* \"contracts/tokenplay.sol\":19293:19357  keccak256(abi.encodePacked(msg.sender, block.timestamp, random)) */\n      dup2\n      mload\n        /* \"contracts/tokenplay.sol\":19303:19356  abi.encodePacked(msg.sender, block.timestamp, random) */\n      0x20\n        /* \"contracts/tokenplay.sol\":19293:19357  keccak256(abi.encodePacked(msg.sender, block.timestamp, random)) */\n      swap3\n      dup4\n      add\n      keccak256\n        /* \"contracts/tokenplay.sol\":19266:19272  random */\n      0x03\n        /* \"contracts/tokenplay.sol\":19266:19367  random = uint(... */\n      dup2\n      swap1\n      sstore\n        /* \"contracts/tokenplay.sol\":19384:19394  msg.sender */\n      caller\n        /* \"contracts/tokenplay.sol\":19275:19367  uint(... */\n      0x00\n        /* \"contracts/tokenplay.sol\":19377:19395  staker[msg.sender] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/tokenplay.sol\":19377:19383  staker */\n      0x05\n        /* \"contracts/tokenplay.sol\":19377:19395  staker[msg.sender] */\n      swap1\n      swap4\n      mstore\n      swap2\n      keccak256\n        /* \"contracts/tokenplay.sol\":19377:19412  staker[msg.sender].tokenid = random */\n      sstore\n        /* \"contracts/tokenplay.sol\":19159:19419  function tokenId() public {... */\n      jump\t// out\n        /* \"contracts/tokenplay.sol\":20553:20666  function getparent() public view activeUser returns (address) {... */\n    tag_15:\n        /* \"contracts/tokenplay.sol\":19072:19082  msg.sender */\n      caller\n        /* \"contracts/tokenplay.sol\":20606:20613  address */\n      0x00\n        /* \"contracts/tokenplay.sol\":19065:19083  staker[msg.sender] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/tokenplay.sol\":19065:19071  staker */\n      0x05\n        /* \"contracts/tokenplay.sol\":19065:19083  staker[msg.sender] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"contracts/tokenplay.sol\":19065:19094  staker[msg.sender].activeUser */\n      0x01\n      add\n      sload\n      shl(0xa8, 0x01)\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/tokenplay.sol\":19057:19095  require(staker[msg.sender].activeUser) */\n      tag_47\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_47:\n      pop\n        /* \"contracts/tokenplay.sol\":20639:20649  msg.sender */\n      caller\n        /* \"contracts/tokenplay.sol\":20632:20650  staker[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/tokenplay.sol\":20632:20638  staker */\n      0x05\n        /* \"contracts/tokenplay.sol\":20632:20650  staker[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/tokenplay.sol\":20632:20659  staker[msg.sender].referrer */\n      0x01\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"contracts/tokenplay.sol\":20553:20666  function getparent() public view activeUser returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/tokenplay.sol\":19459:20046  function join() public {... */\n    tag_35:\n        /* \"contracts/tokenplay.sol\":19508:19518  msg.sender */\n      caller\n        /* \"contracts/tokenplay.sol\":19501:19519  staker[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/tokenplay.sol\":19501:19507  staker */\n      0x05\n        /* \"contracts/tokenplay.sol\":19501:19519  staker[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/tokenplay.sol\":19501:19530  staker[msg.sender].activeUser */\n      0x01\n      add\n      sload\n      shl(0xa8, 0x01)\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/tokenplay.sol\":19500:19530  !staker[msg.sender].activeUser */\n      iszero\n        /* \"contracts/tokenplay.sol\":19492:19553  require(!staker[msg.sender].activeUser, \"user already exist\") */\n      tag_50\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":1569:1571   */\n      0x20\n        /* \"contracts/tokenplay.sol\":19492:19553  require(!staker[msg.sender].activeUser, \"user already exist\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1551:1572   */\n      mstore\n        /* \"#utility.yul\":1608:1610   */\n      0x12\n        /* \"#utility.yul\":1588:1606   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":1581:1611   */\n      mstore\n      shl(0x72, 0x1d5cd95c88185b1c9958591e48195e1a5cdd)\n        /* \"#utility.yul\":1627:1645   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":1620:1668   */\n      mstore\n        /* \"#utility.yul\":1685:1703   */\n      0x64\n      add\n        /* \"contracts/tokenplay.sol\":19492:19553  require(!staker[msg.sender].activeUser, \"user already exist\") */\n      tag_42\n        /* \"#utility.yul\":1367:1709   */\n      jump\n        /* \"contracts/tokenplay.sol\":19492:19553  require(!staker[msg.sender].activeUser, \"user already exist\") */\n    tag_50:\n        /* \"contracts/tokenplay.sol\":19578:19588  msg.sender */\n      caller\n        /* \"contracts/tokenplay.sol\":19571:19589  staker[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/tokenplay.sol\":19571:19577  staker */\n      0x05\n        /* \"contracts/tokenplay.sol\":19571:19589  staker[msg.sender] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"contracts/tokenplay.sol\":19571:19597  staker[msg.sender].tokenid */\n      sload\n        /* \"contracts/tokenplay.sol\":19571:19602  staker[msg.sender].tokenid != 0 */\n      swap1\n      sub\n        /* \"contracts/tokenplay.sol\":19563:19626  require(staker[msg.sender].tokenid != 0, \"Not a valid TokenID\") */\n      tag_52\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":2280:2282   */\n      0x20\n        /* \"contracts/tokenplay.sol\":19563:19626  require(staker[msg.sender].tokenid != 0, \"Not a valid TokenID\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2262:2283   */\n      mstore\n        /* \"#utility.yul\":2319:2321   */\n      0x13\n        /* \"#utility.yul\":2299:2317   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":2292:2322   */\n      mstore\n      shl(0x6a, 0x139bdd0818481d985b1a5908151bdad95b9251)\n        /* \"#utility.yul\":2338:2356   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":2331:2380   */\n      mstore\n        /* \"#utility.yul\":2397:2415   */\n      0x64\n      add\n        /* \"contracts/tokenplay.sol\":19563:19626  require(staker[msg.sender].tokenid != 0, \"Not a valid TokenID\") */\n      tag_42\n        /* \"#utility.yul\":2078:2421   */\n      jump\n        /* \"contracts/tokenplay.sol\":19563:19626  require(staker[msg.sender].tokenid != 0, \"Not a valid TokenID\") */\n    tag_52:\n        /* \"contracts/tokenplay.sol\":19666:19676  msg.sender */\n      caller\n        /* \"contracts/tokenplay.sol\":19659:19677  staker[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/tokenplay.sol\":19659:19665  staker */\n      0x05\n        /* \"contracts/tokenplay.sol\":19659:19677  staker[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/tokenplay.sol\":19659:19689  staker[msg.sender].setreferrer */\n      0x01\n      add\n      sload\n      shl(0xa0, 0x01)\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/tokenplay.sol\":19657:19690  !(staker[msg.sender].setreferrer) */\n      iszero\n        /* \"contracts/tokenplay.sol\":19636:19752  require(... */\n      tag_55\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":2628:2630   */\n      0x20\n        /* \"contracts/tokenplay.sol\":19636:19752  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2610:2631   */\n      mstore\n        /* \"#utility.yul\":2667:2669   */\n      0x24\n        /* \"#utility.yul\":2647:2665   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":2640:2670   */\n      mstore\n        /* \"#utility.yul\":2706:2740   */\n      0x526566657272657220416c72656164792075736564204f6e6c79203120616c6c\n        /* \"#utility.yul\":2686:2704   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":2679:2741   */\n      mstore\n      shl(0xe2, 0x1bddd959)\n        /* \"#utility.yul\":2757:2775   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":2750:2784   */\n      mstore\n        /* \"#utility.yul\":2801:2820   */\n      0x84\n      add\n        /* \"contracts/tokenplay.sol\":19636:19752  require(... */\n      tag_42\n        /* \"#utility.yul\":2426:2826   */\n      jump\n        /* \"contracts/tokenplay.sol\":19636:19752  require(... */\n    tag_55:\n        /* \"contracts/tokenplay.sol\":19792:19798  parent */\n      sload(0x02)\n        /* \"contracts/tokenplay.sol\":19769:19779  msg.sender */\n      caller\n        /* \"contracts/tokenplay.sol\":19762:19780  staker[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/tokenplay.sol\":19762:19768  staker */\n      0x05\n        /* \"contracts/tokenplay.sol\":19762:19780  staker[msg.sender] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"contracts/tokenplay.sol\":19792:19798  parent */\n      0x01\n        /* \"contracts/tokenplay.sol\":19762:19789  staker[msg.sender].referrer */\n      swap1\n      dup2\n      add\n        /* \"contracts/tokenplay.sol\":19762:19798  staker[msg.sender].referrer = parent */\n      dup1\n      sload\n        /* \"contracts/tokenplay.sol\":19792:19798  parent */\n      0x0100\n      swap1\n      swap5\n      div\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n        /* \"contracts/tokenplay.sol\":19762:19798  staker[msg.sender].referrer = parent */\n      swap1\n      swap5\n      and\n      swap4\n      swap1\n      swap4\n      or\n      swap1\n      swap3\n      sstore\n        /* \"contracts/tokenplay.sol\":19808:19815  count++ */\n      dup2\n      sload\n      swap2\n        /* \"contracts/tokenplay.sol\":19792:19798  parent */\n      swap1\n        /* \"contracts/tokenplay.sol\":19808:19815  count++ */\n      tag_58\n      dup4\n      tag_59\n      jump\t// in\n    tag_58:\n      swap2\n      swap1\n      pop\n      sstore\n      pop\n        /* \"contracts/tokenplay.sol\":19825:19839  bool validUser */\n      0x00\n        /* \"contracts/tokenplay.sol\":19842:19876  isValidTransfer(msg.sender, count) */\n      tag_60\n        /* \"contracts/tokenplay.sol\":19858:19868  msg.sender */\n      caller\n        /* \"contracts/tokenplay.sol\":19870:19875  count */\n      sload(0x01)\n        /* \"contracts/tokenplay.sol\":19842:19857  isValidTransfer */\n      tag_61\n        /* \"contracts/tokenplay.sol\":19842:19876  isValidTransfer(msg.sender, count) */\n      jump\t// in\n    tag_60:\n        /* \"contracts/tokenplay.sol\":19825:19876  bool validUser = isValidTransfer(msg.sender, count) */\n      swap1\n      pop\n        /* \"contracts/tokenplay.sol\":19894:19903  validUser */\n      dup1\n        /* \"contracts/tokenplay.sol\":19886:19924  require(validUser, \"Not a valid user\") */\n      tag_62\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3270:3272   */\n      0x20\n        /* \"contracts/tokenplay.sol\":19886:19924  require(validUser, \"Not a valid user\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3252:3273   */\n      mstore\n        /* \"#utility.yul\":3309:3311   */\n      0x10\n        /* \"#utility.yul\":3289:3307   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3282:3312   */\n      mstore\n      shl(0x81, 0x2737ba1030903b30b634b2103ab9b2b9)\n        /* \"#utility.yul\":3328:3346   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3321:3367   */\n      mstore\n        /* \"#utility.yul\":3384:3402   */\n      0x64\n      add\n        /* \"contracts/tokenplay.sol\":19886:19924  require(validUser, \"Not a valid user\") */\n      tag_42\n        /* \"#utility.yul\":3068:3408   */\n      jump\n        /* \"contracts/tokenplay.sol\":19886:19924  require(validUser, \"Not a valid user\") */\n    tag_62:\n        /* \"contracts/tokenplay.sol\":19941:19951  msg.sender */\n      caller\n        /* \"contracts/tokenplay.sol\":19934:19952  staker[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/tokenplay.sol\":19934:19940  staker */\n      0x05\n        /* \"contracts/tokenplay.sol\":19934:19952  staker[msg.sender] */\n      0x20\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"contracts/tokenplay.sol\":19966:19970  true */\n      0x01\n        /* \"contracts/tokenplay.sol\":19934:19963  staker[msg.sender].activeUser */\n      swap1\n      dup2\n      add\n        /* \"contracts/tokenplay.sol\":19934:19970  staker[msg.sender].activeUser = true */\n      dup1\n      sload\n      not(shl(0xa8, 0xff))\n      and\n      shl(0xa8, 0x01)\n      or\n      swap1\n      sstore\n        /* \"contracts/tokenplay.sol\":19987:19993  parent */\n      sload(0x02)\n        /* \"contracts/tokenplay.sol\":19934:19970  staker[msg.sender].activeUser = true */\n      0x0100\n        /* \"contracts/tokenplay.sol\":19987:19993  parent */\n      swap1\n      div\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"contracts/tokenplay.sol\":19980:19994  staker[parent] */\n      dup4\n      mstore\n      swap2\n      keccak256\n        /* \"contracts/tokenplay.sol\":19980:20006  staker[parent].setreferrer */\n      add\n        /* \"contracts/tokenplay.sol\":19980:20013  staker[parent].setreferrer = true */\n      dup1\n      sload\n      not(shl(0xa0, 0xff))\n      and\n      shl(0xa0, 0x01)\n      or\n      swap1\n      sstore\n        /* \"contracts/tokenplay.sol\":20023:20039  changingParent() */\n      tag_65\n        /* \"contracts/tokenplay.sol\":20023:20037  changingParent */\n      tag_66\n        /* \"contracts/tokenplay.sol\":20023:20039  changingParent() */\n      jump\t// in\n    tag_65:\n        /* \"contracts/tokenplay.sol\":19482:20046  {... */\n      pop\n        /* \"contracts/tokenplay.sol\":19459:20046  function join() public {... */\n      jump\t// out\n        /* \"contracts/tokenplay.sol\":20052:20547  function isValidTransfer(... */\n    tag_61:\n        /* \"contracts/tokenplay.sol\":20168:20173  inter */\n      0x04\n      dup1\n      sload\n        /* \"contracts/tokenplay.sol\":20168:20191  inter.findBalance(user) */\n      mload(0x40)\n      shl(0xe5, 0x067dd27f)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":178:210   */\n      dup6\n      dup2\n      and\n        /* \"contracts/tokenplay.sol\":20168:20191  inter.findBalance(user) */\n      swap4\n      dup3\n      add\n        /* \"#utility.yul\":160:211   */\n      swap4\n      swap1\n      swap4\n      mstore\n        /* \"contracts/tokenplay.sol\":20144:20148  bool */\n      0x00\n      swap3\n        /* \"contracts/tokenplay.sol\":20195:20198  500 */\n      0x01f4\n      swap3\n        /* \"contracts/tokenplay.sol\":20168:20173  inter */\n      and\n      swap1\n        /* \"contracts/tokenplay.sol\":20168:20185  inter.findBalance */\n      0xcfba4fe0\n      swap1\n        /* \"#utility.yul\":133:151   */\n      0x24\n      add\n        /* \"contracts/tokenplay.sol\":20168:20191  inter.findBalance(user) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_70\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_70:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_71\n      swap2\n      swap1\n      tag_72\n      jump\t// in\n    tag_71:\n        /* \"contracts/tokenplay.sol\":20168:20198  inter.findBalance(user) >= 500 */\n      lt\n      iszero\n        /* \"contracts/tokenplay.sol\":20160:20223  require(inter.findBalance(user) >= 500, \"insufficient balance\") */\n      tag_73\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3804:3806   */\n      0x20\n        /* \"contracts/tokenplay.sol\":20160:20223  require(inter.findBalance(user) >= 500, \"insufficient balance\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3786:3807   */\n      mstore\n        /* \"#utility.yul\":3843:3845   */\n      0x14\n        /* \"#utility.yul\":3823:3841   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3816:3846   */\n      mstore\n      shl(0x60, 0x696e73756666696369656e742062616c616e6365)\n        /* \"#utility.yul\":3862:3880   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3855:3905   */\n      mstore\n        /* \"#utility.yul\":3922:3940   */\n      0x64\n      add\n        /* \"contracts/tokenplay.sol\":20160:20223  require(inter.findBalance(user) >= 500, \"insufficient balance\") */\n      tag_42\n        /* \"#utility.yul\":3602:3946   */\n      jump\n        /* \"contracts/tokenplay.sol\":20160:20223  require(inter.findBalance(user) >= 500, \"insufficient balance\") */\n    tag_73:\n        /* \"contracts/tokenplay.sol\":20247:20248  2 */\n      0x02\n        /* \"contracts/tokenplay.sol\":20237:20243  number */\n      dup3\n        /* \"contracts/tokenplay.sol\":20237:20248  number <= 2 */\n      gt\n        /* \"contracts/tokenplay.sol\":20233:20520  if (number <= 2) {... */\n      tag_76\n      jumpi\n        /* \"contracts/tokenplay.sol\":20264:20269  inter */\n      0x04\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/tokenplay.sol\":20285:20297  staker[user] */\n      dup6\n      dup2\n      and\n        /* \"contracts/tokenplay.sol\":20264:20269  inter */\n      0x00\n        /* \"contracts/tokenplay.sol\":20285:20297  staker[user] */\n      dup2\n      dup2\n      mstore\n        /* \"contracts/tokenplay.sol\":20285:20291  staker */\n      0x05\n        /* \"contracts/tokenplay.sol\":20285:20297  staker[user] */\n      0x20\n      mstore\n      0x40\n      swap1\n      dup2\n      swap1\n      keccak256\n        /* \"contracts/tokenplay.sol\":20264:20269  inter */\n      0x01\n        /* \"contracts/tokenplay.sol\":20285:20306  staker[user].referrer */\n      add\n      sload\n        /* \"contracts/tokenplay.sol\":20264:20312  inter.transfer(user, staker[user].referrer, 500) */\n      swap1\n      mload\n      shl(0xe3, 0x17d57599)\n      dup2\n      mstore\n      swap5\n      dup6\n      add\n        /* \"#utility.yul\":4201:4235   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"contracts/tokenplay.sol\":20285:20306  staker[user].referrer */\n      dup2\n      and\n        /* \"#utility.yul\":4251:4269   */\n      0x24\n      dup5\n      add\n        /* \"#utility.yul\":4244:4287   */\n      mstore\n        /* \"contracts/tokenplay.sol\":20308:20311  500 */\n      0x01f4\n        /* \"#utility.yul\":4303:4321   */\n      0x44\n      dup5\n      add\n        /* \"#utility.yul\":4296:4330   */\n      mstore\n        /* \"contracts/tokenplay.sol\":20264:20269  inter */\n      and\n      swap1\n        /* \"contracts/tokenplay.sol\":20264:20278  inter.transfer */\n      0xbeabacc8\n      swap1\n        /* \"#utility.yul\":4136:4154   */\n      0x64\n      add\n        /* \"contracts/tokenplay.sol\":20264:20312  inter.transfer(user, staker[user].referrer, 500) */\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_79\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_79:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_81\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_81:\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/tokenplay.sol\":20233:20520  if (number <= 2) {... */\n      jump(tag_82)\n    tag_76:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/tokenplay.sol\":20361:20373  staker[user] */\n      dup4\n      dup2\n      and\n        /* \"contracts/tokenplay.sol\":20343:20358  address parent1 */\n      0x00\n        /* \"contracts/tokenplay.sol\":20361:20373  staker[user] */\n      dup2\n      dup2\n      mstore\n        /* \"contracts/tokenplay.sol\":20361:20367  staker */\n      0x05\n        /* \"contracts/tokenplay.sol\":20361:20373  staker[user] */\n      0x20\n      mstore\n      0x40\n      swap1\n      dup2\n      swap1\n      keccak256\n        /* \"contracts/tokenplay.sol\":20361:20382  staker[user].referrer */\n      0x01\n      add\n      sload\n        /* \"contracts/tokenplay.sol\":20396:20401  inter */\n      0x04\n      dup1\n      sload\n        /* \"contracts/tokenplay.sol\":20396:20444  inter.transfer(user, staker[user].referrer, 300) */\n      swap3\n      mload\n      shl(0xe3, 0x17d57599)\n      dup2\n      mstore\n      swap1\n      dup2\n      add\n        /* \"#utility.yul\":4201:4235   */\n      swap4\n      swap1\n      swap4\n      mstore\n        /* \"contracts/tokenplay.sol\":20361:20382  staker[user].referrer */\n      dup4\n      and\n        /* \"#utility.yul\":4251:4269   */\n      0x24\n      dup4\n      add\n        /* \"#utility.yul\":4244:4287   */\n      dup2\n      swap1\n      mstore\n        /* \"contracts/tokenplay.sol\":20440:20443  300 */\n      0x012c\n        /* \"#utility.yul\":4303:4321   */\n      0x44\n      dup5\n      add\n        /* \"#utility.yul\":4296:4330   */\n      mstore\n        /* \"contracts/tokenplay.sol\":20361:20382  staker[user].referrer */\n      swap3\n        /* \"contracts/tokenplay.sol\":20396:20401  inter */\n      and\n      swap1\n        /* \"contracts/tokenplay.sol\":20396:20410  inter.transfer */\n      0xbeabacc8\n      swap1\n        /* \"#utility.yul\":4136:4154   */\n      0x64\n      add\n        /* \"contracts/tokenplay.sol\":20396:20444  inter.transfer(user, staker[user].referrer, 300) */\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_85\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_85:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_87\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_87:\n      pop\n      pop\n        /* \"contracts/tokenplay.sol\":20458:20463  inter */\n      0x04\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/tokenplay.sol\":20479:20494  staker[parent1] */\n      dup6\n      dup2\n      and\n        /* \"contracts/tokenplay.sol\":20458:20463  inter */\n      0x00\n        /* \"contracts/tokenplay.sol\":20479:20494  staker[parent1] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/tokenplay.sol\":20479:20485  staker */\n      0x05\n        /* \"contracts/tokenplay.sol\":20479:20494  staker[parent1] */\n      0x20\n      mstore\n      0x40\n      swap1\n      dup2\n      swap1\n      keccak256\n        /* \"contracts/tokenplay.sol\":20458:20463  inter */\n      0x01\n        /* \"contracts/tokenplay.sol\":20479:20503  staker[parent1].referrer */\n      add\n      sload\n        /* \"contracts/tokenplay.sol\":20458:20509  inter.transfer(user, staker[parent1].referrer, 200) */\n      swap1\n      mload\n      shl(0xe3, 0x17d57599)\n      dup2\n      mstore\n        /* \"#utility.yul\":4219:4234   */\n      dup11\n      dup4\n      and\n        /* \"contracts/tokenplay.sol\":20458:20509  inter.transfer(user, staker[parent1].referrer, 200) */\n      swap5\n      dup2\n      add\n        /* \"#utility.yul\":4201:4235   */\n      swap5\n      swap1\n      swap5\n      mstore\n        /* \"contracts/tokenplay.sol\":20479:20503  staker[parent1].referrer */\n      dup2\n      and\n        /* \"#utility.yul\":4251:4269   */\n      0x24\n      dup5\n      add\n        /* \"#utility.yul\":4244:4287   */\n      mstore\n        /* \"contracts/tokenplay.sol\":20505:20508  200 */\n      0xc8\n        /* \"#utility.yul\":4303:4321   */\n      0x44\n      dup5\n      add\n        /* \"#utility.yul\":4296:4330   */\n      mstore\n        /* \"contracts/tokenplay.sol\":20458:20463  inter */\n      and\n      swap3\n      pop\n        /* \"contracts/tokenplay.sol\":20458:20472  inter.transfer */\n      0xbeabacc8\n      swap2\n      pop\n        /* \"#utility.yul\":4136:4154   */\n      0x64\n      add\n        /* \"contracts/tokenplay.sol\":20458:20509  inter.transfer(user, staker[parent1].referrer, 200) */\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_90\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_90:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_92\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_92:\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/tokenplay.sol\":20329:20520  {... */\n      pop\n        /* \"contracts/tokenplay.sol\":20233:20520  if (number <= 2) {... */\n    tag_82:\n      pop\n        /* \"contracts/tokenplay.sol\":20536:20540  true */\n      0x01\n        /* \"contracts/tokenplay.sol\":20052:20547  function isValidTransfer(... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/tokenplay.sol\":20719:20801  function changingParent() internal activeUser {... */\n    tag_66:\n        /* \"contracts/tokenplay.sol\":19072:19082  msg.sender */\n      caller\n        /* \"contracts/tokenplay.sol\":19065:19083  staker[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/tokenplay.sol\":19065:19071  staker */\n      0x05\n        /* \"contracts/tokenplay.sol\":19065:19083  staker[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/tokenplay.sol\":19065:19094  staker[msg.sender].activeUser */\n      0x01\n      add\n      sload\n      shl(0xa8, 0x01)\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/tokenplay.sol\":19057:19095  require(staker[msg.sender].activeUser) */\n      tag_94\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_94:\n        /* \"contracts/tokenplay.sol\":20775:20781  parent */\n      0x02\n        /* \"contracts/tokenplay.sol\":20775:20794  parent = msg.sender */\n      dup1\n      sload\n      not(sub(shl(0xa8, 0x01), 0x0100))\n      and\n        /* \"contracts/tokenplay.sol\":20784:20794  msg.sender */\n      caller\n        /* \"contracts/tokenplay.sol\":20775:20794  parent = msg.sender */\n      0x0100\n      mul\n      or\n      swap1\n      sstore\n        /* \"contracts/tokenplay.sol\":20719:20801  function changingParent() internal activeUser {... */\n      jump\t// out\n        /* \"#utility.yul\":404:690   */\n    tag_27:\n        /* \"#utility.yul\":463:469   */\n      0x00\n        /* \"#utility.yul\":516:518   */\n      0x20\n        /* \"#utility.yul\":504:513   */\n      dup3\n        /* \"#utility.yul\":495:502   */\n      dup5\n        /* \"#utility.yul\":491:514   */\n      sub\n        /* \"#utility.yul\":487:519   */\n      slt\n        /* \"#utility.yul\":484:536   */\n      iszero\n      tag_100\n      jumpi\n        /* \"#utility.yul\":532:533   */\n      0x00\n        /* \"#utility.yul\":529:530   */\n      dup1\n        /* \"#utility.yul\":522:534   */\n      revert\n        /* \"#utility.yul\":484:536   */\n    tag_100:\n        /* \"#utility.yul\":558:581   */\n      dup2\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":610:641   */\n      dup2\n      and\n        /* \"#utility.yul\":600:642   */\n      dup2\n      eq\n        /* \"#utility.yul\":590:660   */\n      tag_101\n      jumpi\n        /* \"#utility.yul\":656:657   */\n      0x00\n        /* \"#utility.yul\":653:654   */\n      dup1\n        /* \"#utility.yul\":646:658   */\n      revert\n        /* \"#utility.yul\":590:660   */\n    tag_101:\n        /* \"#utility.yul\":679:684   */\n      swap4\n        /* \"#utility.yul\":404:690   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2831:3063   */\n    tag_59:\n        /* \"#utility.yul\":2870:2873   */\n      0x00\n        /* \"#utility.yul\":2891:2908   */\n      0x01\n      dup3\n      add\n        /* \"#utility.yul\":2888:3028   */\n      tag_109\n      jumpi\n        /* \"#utility.yul\":2950:2960   */\n      0x4e487b71\n        /* \"#utility.yul\":2945:2948   */\n      0xe0\n        /* \"#utility.yul\":2941:2961   */\n      shl\n        /* \"#utility.yul\":2938:2939   */\n      0x00\n        /* \"#utility.yul\":2931:2962   */\n      mstore\n        /* \"#utility.yul\":2985:2989   */\n      0x11\n        /* \"#utility.yul\":2982:2983   */\n      0x04\n        /* \"#utility.yul\":2975:2990   */\n      mstore\n        /* \"#utility.yul\":3013:3017   */\n      0x24\n        /* \"#utility.yul\":3010:3011   */\n      0x00\n        /* \"#utility.yul\":3003:3018   */\n      revert\n        /* \"#utility.yul\":2888:3028   */\n    tag_109:\n      pop\n        /* \"#utility.yul\":3055:3056   */\n      0x01\n        /* \"#utility.yul\":3044:3057   */\n      add\n      swap1\n        /* \"#utility.yul\":2831:3063   */\n      jump\t// out\n        /* \"#utility.yul\":3413:3597   */\n    tag_72:\n        /* \"#utility.yul\":3483:3489   */\n      0x00\n        /* \"#utility.yul\":3536:3538   */\n      0x20\n        /* \"#utility.yul\":3524:3533   */\n      dup3\n        /* \"#utility.yul\":3515:3522   */\n      dup5\n        /* \"#utility.yul\":3511:3534   */\n      sub\n        /* \"#utility.yul\":3507:3539   */\n      slt\n        /* \"#utility.yul\":3504:3556   */\n      iszero\n      tag_112\n      jumpi\n        /* \"#utility.yul\":3552:3553   */\n      0x00\n        /* \"#utility.yul\":3549:3550   */\n      dup1\n        /* \"#utility.yul\":3542:3554   */\n      revert\n        /* \"#utility.yul\":3504:3556   */\n    tag_112:\n      pop\n        /* \"#utility.yul\":3575:3591   */\n      mload\n      swap2\n        /* \"#utility.yul\":3413:3597   */\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220527782c307577fecee4685d6c2c214b18aac12f169c66ea080e8ee7e2eb72f8d64736f6c63430008140033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_864": {
									"entryPoint": null,
									"id": 864,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 248,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:514:1",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "95:209:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "141:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "150:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "153:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "143:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "143:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "143:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "116:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "125:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "112:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "112:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "137:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "108:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "108:32:1"
															},
															"nodeType": "YulIf",
															"src": "105:52:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "166:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "185:9:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "179:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "179:16:1"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "170:5:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "258:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "267:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "270:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "260:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "260:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "260:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "217:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "228:5:1"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "243:3:1",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "248:1:1",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "239:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "239:11:1"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "252:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "235:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "235:19:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "224:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "224:31:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "214:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "214:42:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "207:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "207:50:1"
															},
															"nodeType": "YulIf",
															"src": "204:70:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "283:15:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "293:5:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "283:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "61:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "72:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "84:6:1",
														"type": ""
													}
												],
												"src": "14:290:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "410:102:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "420:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "432:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "443:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "428:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "428:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "420:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "462:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "477:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "493:3:1",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "498:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "489:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "489:11:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "502:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "485:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "485:19:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "473:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "473:32:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "455:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "455:51:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "455:51:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "379:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "390:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "401:4:1",
														"type": ""
													}
												],
												"src": "309:203:1"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040525f600155348015610013575f80fd5b506040516108f93803806108f9833981016040819052610032916100f8565b600480546001600160a01b038381166001600160a01b03199283161783555f8054909216339081178355808352600560205260408084206001908101805460ff60a81b1916600160a81b17905560028054610100909402610100600160a81b0319909416939093179092559080558354925490516335313c2160e11b8152908216938101939093521690636a627842906024015f604051808303815f87803b1580156100dc575f80fd5b505af11580156100ee573d5f803e3d5ffd5b5050505050610125565b5f60208284031215610108575f80fd5b81516001600160a01b038116811461011e575f80fd5b9392505050565b6107c7806101325f395ff3fe608060405234801561000f575f80fd5b5060043610610085575f3560e01c806382e4eda41161005857806382e4eda4146100e7578063a5de36191461015c578063b688a3631461016e578063f13ad72514610176575f80fd5b806317d70f7c14610089578063255d45d8146100935780635ec01e4d146100b857806360f96a8f146100cf575b5f80fd5b610091610189565b005b61009b610247565b6040516001600160a01b0390911681526020015b60405180910390f35b6100c160035481565b6040519081526020016100af565b60025461009b9061010090046001600160a01b031681565b61012c6100f5366004610729565b60056020525f9081526040902080546001909101546001600160a01b0381169060ff600160a01b8204811691600160a81b90041684565b604080519485526001600160a01b03909316602085015290151591830191909152151560608201526080016100af565b5f5461009b906001600160a01b031681565b61009161028a565b60045461009b906001600160a01b031681565b335f90815260056020526040902060010154600160a81b900460ff16156101ec5760405162461bcd60e51b81526020600482015260126024820152711d5cd95c88185b1c9958591e48195e1a5cdd60721b60448201526064015b60405180910390fd5b6003546040516bffffffffffffffffffffffff193360601b166020820152426034820152605481019190915260740160408051601f1981840301815291815281516020928301206003819055335f9081526005909352912055565b335f90815260056020526040812060010154600160a81b900460ff1661026b575f80fd5b50335f908152600560205260409020600101546001600160a01b031690565b335f90815260056020526040902060010154600160a81b900460ff16156102e85760405162461bcd60e51b81526020600482015260126024820152711d5cd95c88185b1c9958591e48195e1a5cdd60721b60448201526064016101e3565b335f90815260056020526040812054900361033b5760405162461bcd60e51b8152602060048201526013602482015272139bdd0818481d985b1a5908151bdad95b9251606a1b60448201526064016101e3565b335f90815260056020526040902060010154600160a01b900460ff16156103b05760405162461bcd60e51b8152602060048201526024808201527f526566657272657220416c72656164792075736564204f6e6c79203120616c6c6044820152631bddd95960e21b60648201526084016101e3565b600254335f908152600560205260408120600190810180546101009094046001600160a01b03166001600160a01b031990941693909317909255815491906103f783610756565b91905055505f610409336001546104a2565b90508061044b5760405162461bcd60e51b815260206004820152601060248201526f2737ba1030903b30b634b2103ab9b2b960811b60448201526064016101e3565b335f908152600560205260408082206001908101805460ff60a81b1916600160a81b17905560025461010090046001600160a01b03168352912001805460ff60a01b1916600160a01b17905561049f6106ec565b50565b6004805460405163067dd27f60e51b81526001600160a01b03858116938201939093525f926101f492169063cfba4fe0906024016020604051808303815f875af11580156104f2573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610516919061077a565b101561055b5760405162461bcd60e51b8152602060048201526014602482015273696e73756666696369656e742062616c616e636560601b60448201526064016101e3565b600282116105e457600480546001600160a01b038581165f81815260056020526040908190206001015490516317d5759960e31b815294850191909152811660248401526101f46044840152169063beabacc8906064015f604051808303815f87803b1580156105c9575f80fd5b505af11580156105db573d5f803e3d5ffd5b505050506106e3565b6001600160a01b038381165f8181526005602052604090819020600101546004805492516317d5759960e31b81529081019390935283166024830181905261012c604484015292169063beabacc8906064015f604051808303815f87803b15801561064d575f80fd5b505af115801561065f573d5f803e3d5ffd5b5050600480546001600160a01b038581165f90815260056020526040908190206001015490516317d5759960e31b81528a8316948101949094528116602484015260c8604484015216925063beabacc891506064015f604051808303815f87803b1580156106cb575f80fd5b505af11580156106dd573d5f803e3d5ffd5b50505050505b50600192915050565b335f90815260056020526040902060010154600160a81b900460ff16610710575f80fd5b60028054610100600160a81b0319163361010002179055565b5f60208284031215610739575f80fd5b81356001600160a01b038116811461074f575f80fd5b9392505050565b5f6001820161077357634e487b7160e01b5f52601160045260245ffd5b5060010190565b5f6020828403121561078a575f80fd5b505191905056fea2646970667358221220527782c307577fecee4685d6c2c214b18aac12f169c66ea080e8ee7e2eb72f8d64736f6c63430008140033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH1 0x1 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x13 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x8F9 CODESIZE SUB DUP1 PUSH2 0x8F9 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x32 SWAP2 PUSH2 0xF8 JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP3 DUP4 AND OR DUP4 SSTORE PUSH0 DUP1 SLOAD SWAP1 SWAP3 AND CALLER SWAP1 DUP2 OR DUP4 SSTORE DUP1 DUP4 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 PUSH1 0x1 SWAP1 DUP2 ADD DUP1 SLOAD PUSH1 0xFF PUSH1 0xA8 SHL NOT AND PUSH1 0x1 PUSH1 0xA8 SHL OR SWAP1 SSTORE PUSH1 0x2 DUP1 SLOAD PUSH2 0x100 SWAP1 SWAP5 MUL PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT SWAP1 SWAP5 AND SWAP4 SWAP1 SWAP4 OR SWAP1 SWAP3 SSTORE SWAP1 DUP1 SSTORE DUP4 SLOAD SWAP3 SLOAD SWAP1 MLOAD PUSH4 0x35313C21 PUSH1 0xE1 SHL DUP2 MSTORE SWAP1 DUP3 AND SWAP4 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE AND SWAP1 PUSH4 0x6A627842 SWAP1 PUSH1 0x24 ADD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xDC JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xEE JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP POP PUSH2 0x125 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x108 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x11E JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x7C7 DUP1 PUSH2 0x132 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x85 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x82E4EDA4 GT PUSH2 0x58 JUMPI DUP1 PUSH4 0x82E4EDA4 EQ PUSH2 0xE7 JUMPI DUP1 PUSH4 0xA5DE3619 EQ PUSH2 0x15C JUMPI DUP1 PUSH4 0xB688A363 EQ PUSH2 0x16E JUMPI DUP1 PUSH4 0xF13AD725 EQ PUSH2 0x176 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x17D70F7C EQ PUSH2 0x89 JUMPI DUP1 PUSH4 0x255D45D8 EQ PUSH2 0x93 JUMPI DUP1 PUSH4 0x5EC01E4D EQ PUSH2 0xB8 JUMPI DUP1 PUSH4 0x60F96A8F EQ PUSH2 0xCF JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x91 PUSH2 0x189 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x9B PUSH2 0x247 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC1 PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xAF JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x9B SWAP1 PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x12C PUSH2 0xF5 CALLDATASIZE PUSH1 0x4 PUSH2 0x729 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 PUSH1 0xFF PUSH1 0x1 PUSH1 0xA0 SHL DUP3 DIV DUP2 AND SWAP2 PUSH1 0x1 PUSH1 0xA8 SHL SWAP1 DIV AND DUP5 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP5 DUP6 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND PUSH1 0x20 DUP6 ADD MSTORE SWAP1 ISZERO ISZERO SWAP2 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ISZERO ISZERO PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD PUSH2 0xAF JUMP JUMPDEST PUSH0 SLOAD PUSH2 0x9B SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x91 PUSH2 0x28A JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH2 0x9B SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH1 0x1 PUSH1 0xA8 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x1EC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x1D5CD95C88185B1C9958591E48195E1A5CDD PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT CALLER PUSH1 0x60 SHL AND PUSH1 0x20 DUP3 ADD MSTORE TIMESTAMP PUSH1 0x34 DUP3 ADD MSTORE PUSH1 0x54 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x74 ADD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 DUP2 MSTORE DUP2 MLOAD PUSH1 0x20 SWAP3 DUP4 ADD KECCAK256 PUSH1 0x3 DUP2 SWAP1 SSTORE CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x5 SWAP1 SWAP4 MSTORE SWAP2 KECCAK256 SSTORE JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH1 0x1 PUSH1 0xA8 SHL SWAP1 DIV PUSH1 0xFF AND PUSH2 0x26B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH1 0x1 PUSH1 0xA8 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x2E8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x1D5CD95C88185B1C9958591E48195E1A5CDD PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x1E3 JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SUB PUSH2 0x33B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x139BDD0818481D985B1A5908151BDAD95B9251 PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x1E3 JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x3B0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x526566657272657220416C72656164792075736564204F6E6C79203120616C6C PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x1BDDD959 PUSH1 0xE2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1E3 JUMP JUMPDEST PUSH1 0x2 SLOAD CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x1 SWAP1 DUP2 ADD DUP1 SLOAD PUSH2 0x100 SWAP1 SWAP5 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 SWAP5 AND SWAP4 SWAP1 SWAP4 OR SWAP1 SWAP3 SSTORE DUP2 SLOAD SWAP2 SWAP1 PUSH2 0x3F7 DUP4 PUSH2 0x756 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH0 PUSH2 0x409 CALLER PUSH1 0x1 SLOAD PUSH2 0x4A2 JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x44B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x2737BA1030903B30B634B2103AB9B2B9 PUSH1 0x81 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x1E3 JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 PUSH1 0x1 SWAP1 DUP2 ADD DUP1 SLOAD PUSH1 0xFF PUSH1 0xA8 SHL NOT AND PUSH1 0x1 PUSH1 0xA8 SHL OR SWAP1 SSTORE PUSH1 0x2 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE SWAP2 KECCAK256 ADD DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND PUSH1 0x1 PUSH1 0xA0 SHL OR SWAP1 SSTORE PUSH2 0x49F PUSH2 0x6EC JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x67DD27F PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND SWAP4 DUP3 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH0 SWAP3 PUSH2 0x1F4 SWAP3 AND SWAP1 PUSH4 0xCFBA4FE0 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x4F2 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x516 SWAP2 SWAP1 PUSH2 0x77A JUMP JUMPDEST LT ISZERO PUSH2 0x55B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x696E73756666696369656E742062616C616E6365 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x1E3 JUMP JUMPDEST PUSH1 0x2 DUP3 GT PUSH2 0x5E4 JUMPI PUSH1 0x4 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 MLOAD PUSH4 0x17D57599 PUSH1 0xE3 SHL DUP2 MSTORE SWAP5 DUP6 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP2 AND PUSH1 0x24 DUP5 ADD MSTORE PUSH2 0x1F4 PUSH1 0x44 DUP5 ADD MSTORE AND SWAP1 PUSH4 0xBEABACC8 SWAP1 PUSH1 0x64 ADD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x5C9 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x5DB JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH2 0x6E3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH1 0x4 DUP1 SLOAD SWAP3 MLOAD PUSH4 0x17D57599 PUSH1 0xE3 SHL DUP2 MSTORE SWAP1 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE DUP4 AND PUSH1 0x24 DUP4 ADD DUP2 SWAP1 MSTORE PUSH2 0x12C PUSH1 0x44 DUP5 ADD MSTORE SWAP3 AND SWAP1 PUSH4 0xBEABACC8 SWAP1 PUSH1 0x64 ADD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x64D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x65F JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP PUSH1 0x4 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 MLOAD PUSH4 0x17D57599 PUSH1 0xE3 SHL DUP2 MSTORE DUP11 DUP4 AND SWAP5 DUP2 ADD SWAP5 SWAP1 SWAP5 MSTORE DUP2 AND PUSH1 0x24 DUP5 ADD MSTORE PUSH1 0xC8 PUSH1 0x44 DUP5 ADD MSTORE AND SWAP3 POP PUSH4 0xBEABACC8 SWAP2 POP PUSH1 0x64 ADD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x6CB JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x6DD JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP POP JUMPDEST POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH1 0x1 PUSH1 0xA8 SHL SWAP1 DIV PUSH1 0xFF AND PUSH2 0x710 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT AND CALLER PUSH2 0x100 MUL OR SWAP1 SSTORE JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x739 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x74F JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 DUP3 ADD PUSH2 0x773 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x78A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MSTORE PUSH24 0x82C307577FECEE4685D6C2C214B18AAC12F169C66EA080E8 0xEE PUSH31 0x2EB72F8D64736F6C6343000814003300000000000000000000000000000000 ",
							"sourceMap": "18147:2656:0:-:0;;;18212:1;18199:14;;18499:281;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;18585:5;:37;;-1:-1:-1;;;;;18585:37:0;;;-1:-1:-1;;;;;;18585:37:0;;;;;;-1:-1:-1;18632:19:0;;;;;18641:10;18632:19;;;;;18661:18;;;:6;:18;;;;;;-1:-1:-1;18661:29:0;;;:36;;-1:-1:-1;;;;18661:36:0;-1:-1:-1;;;18661:36:0;;;18707:6;:19;;18585:37;18707:19;;;-1:-1:-1;;;;;;18707:19:0;;;;;;;;;;18736:9;;;18755:5;;18766:6;;18755:18;;-1:-1:-1;;;18755:18:0;;18766:6;;;18755:18;;;455:51:1;;;;18755:5:0;;:10;;428:18:1;;18755::0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;18499:281;18147:2656;;14:290:1;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;179:16;;-1:-1:-1;;;;;224:31:1;;214:42;;204:70;;270:1;267;260:12;204:70;293:5;14:290;-1:-1:-1;;;14:290:1:o;309:203::-;18147:2656:0;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@admins_798": {
									"entryPoint": null,
									"id": 798,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@changingParent_1116": {
									"entryPoint": 1772,
									"id": 1116,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@getparent_1105": {
									"entryPoint": 583,
									"id": 1105,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@inter_810": {
									"entryPoint": null,
									"id": 810,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@isValidTransfer_1091": {
									"entryPoint": 1186,
									"id": 1091,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@join_1023": {
									"entryPoint": 650,
									"id": 1023,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@parent_805": {
									"entryPoint": null,
									"id": 805,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@random_807": {
									"entryPoint": null,
									"id": 807,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@staker_815": {
									"entryPoint": null,
									"id": 815,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@tokenId_945": {
									"entryPoint": 393,
									"id": 945,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 1833,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 1914,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_rational_200_by_1__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_rational_300_by_1__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_rational_500_by_1__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_InterfaceERC20_$795__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_2547072ea1669624254ad98a29f387fdce4aca4498930b07c148c345758a3f9d__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_61cd3a7ce172e8143be870a803fc424cc2dc95cf837e5e148fec23edfad807b7__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_7e2c3d148196343ecd06c5b2a71b5ba4e09bd917096447f8a1ece3694fde0be6__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_a6d1ff1db3d0b9b8c60e12ccab5ce7431be9a2cd0518ac362f1c5c1e0b1cefee__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d2a30e0d5845e97b1b92823282b1c8f66fb85bf930b451b83a45ce7bac4460aa__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_address_t_bool_t_bool__to_t_uint256_t_address_t_bool_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"increment_t_uint256": {
									"entryPoint": 1878,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:5118:1",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "115:102:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "125:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "137:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "148:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "133:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "133:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "125:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "167:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "182:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "198:3:1",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "203:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "194:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "194:11:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "207:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "190:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "190:19:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "178:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "178:32:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "160:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "160:51:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "160:51:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "84:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "95:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "106:4:1",
														"type": ""
													}
												],
												"src": "14:203:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "323:76:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "333:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "345:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "356:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "341:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "341:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "333:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "375:9:1"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "386:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "368:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "368:25:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "368:25:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "292:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "303:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "314:4:1",
														"type": ""
													}
												],
												"src": "222:177:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "474:216:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "520:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "529:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "532:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "522:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "522:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "522:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "495:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "504:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "491:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "491:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "516:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "487:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "487:32:1"
															},
															"nodeType": "YulIf",
															"src": "484:52:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "545:36:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "571:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "558:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "558:23:1"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "549:5:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "644:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "653:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "656:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "646:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "646:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "646:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "603:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "614:5:1"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "629:3:1",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "634:1:1",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "625:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "625:11:1"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "638:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "621:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "621:19:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "610:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "610:31:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "600:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "600:42:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "593:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "593:50:1"
															},
															"nodeType": "YulIf",
															"src": "590:70:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "669:15:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "679:5:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "669:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "440:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "451:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "463:6:1",
														"type": ""
													}
												],
												"src": "404:286:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "868:264:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "878:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "890:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "901:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "886:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "886:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "878:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "921:9:1"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "932:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "914:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "914:25:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "914:25:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "959:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "970:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "955:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "955:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "979:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "995:3:1",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1000:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "991:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "991:11:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1004:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "987:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "987:19:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "975:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "975:32:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "948:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "948:60:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "948:60:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1028:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1039:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1024:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1024:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value2",
																						"nodeType": "YulIdentifier",
																						"src": "1058:6:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "1051:6:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1051:14:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1044:6:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1044:22:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1017:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1017:50:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1017:50:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1087:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1098:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1083:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1083:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value3",
																						"nodeType": "YulIdentifier",
																						"src": "1117:6:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "1110:6:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1110:14:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1103:6:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1103:22:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1076:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1076:50:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1076:50:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_address_t_bool_t_bool__to_t_uint256_t_address_t_bool_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "813:9:1",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "824:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "832:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "840:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "848:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "859:4:1",
														"type": ""
													}
												],
												"src": "695:437:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1260:102:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1270:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1282:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1293:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1278:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1278:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1270:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1312:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "1327:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1343:3:1",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1348:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "1339:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1339:11:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1352:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "1335:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1335:19:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1323:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1323:32:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1305:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1305:51:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1305:51:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_InterfaceERC20_$795__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1229:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1240:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1251:4:1",
														"type": ""
													}
												],
												"src": "1137:225:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1541:168:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1558:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1569:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1551:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1551:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1551:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1592:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1603:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1588:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1588:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1608:2:1",
																		"type": "",
																		"value": "18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1581:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1581:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1581:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1631:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1642:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1627:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1627:18:1"
																	},
																	{
																		"hexValue": "7573657220616c7265616479206578697374",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "1647:20:1",
																		"type": "",
																		"value": "user already exist"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1620:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1620:48:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1620:48:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1677:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1689:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1700:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1685:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1685:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1677:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d2a30e0d5845e97b1b92823282b1c8f66fb85bf930b451b83a45ce7bac4460aa__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1518:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1532:4:1",
														"type": ""
													}
												],
												"src": "1367:342:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1889:184:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1906:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1919:2:1",
																						"type": "",
																						"value": "96"
																					},
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "1923:6:1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "1915:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1915:15:1"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1936:26:1",
																						"type": "",
																						"value": "0xffffffffffffffffffffffff"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "1932:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1932:31:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1911:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1911:53:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1899:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1899:66:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1899:66:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "1985:3:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1990:2:1",
																				"type": "",
																				"value": "20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1981:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1981:12:1"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "1995:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1974:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1974:28:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1974:28:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "2022:3:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2027:2:1",
																				"type": "",
																				"value": "52"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2018:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2018:12:1"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "2032:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2011:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2011:28:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2011:28:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2048:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2059:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2064:2:1",
																		"type": "",
																		"value": "84"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2055:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2055:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "2048:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1849:3:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "1854:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1862:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1870:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1881:3:1",
														"type": ""
													}
												],
												"src": "1714:359:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2252:169:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2269:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2280:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2262:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2262:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2262:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2303:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2314:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2299:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2299:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2319:2:1",
																		"type": "",
																		"value": "19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2292:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2292:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2292:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2342:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2353:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2338:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2338:18:1"
																	},
																	{
																		"hexValue": "4e6f7420612076616c696420546f6b656e4944",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2358:21:1",
																		"type": "",
																		"value": "Not a valid TokenID"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2331:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2331:49:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2331:49:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2389:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2401:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2412:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2397:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2397:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2389:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_61cd3a7ce172e8143be870a803fc424cc2dc95cf837e5e148fec23edfad807b7__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2229:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2243:4:1",
														"type": ""
													}
												],
												"src": "2078:343:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2600:226:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2617:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2628:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2610:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2610:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2610:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2651:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2662:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2647:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2647:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2667:2:1",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2640:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2640:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2640:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2690:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2701:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2686:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2686:18:1"
																	},
																	{
																		"hexValue": "526566657272657220416c72656164792075736564204f6e6c79203120616c6c",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2706:34:1",
																		"type": "",
																		"value": "Referrer Already used Only 1 all"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2679:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2679:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2679:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2761:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2772:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2757:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2757:18:1"
																	},
																	{
																		"hexValue": "6f776564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2777:6:1",
																		"type": "",
																		"value": "owed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2750:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2750:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2750:34:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2793:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2805:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2816:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2801:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2801:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2793:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_2547072ea1669624254ad98a29f387fdce4aca4498930b07c148c345758a3f9d__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2577:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2591:4:1",
														"type": ""
													}
												],
												"src": "2426:400:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2878:185:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2917:111:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2938:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2945:3:1",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2950:10:1",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "2941:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2941:20:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2931:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2931:31:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2931:31:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2982:1:1",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2985:4:1",
																					"type": "",
																					"value": "0x11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2975:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2975:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2975:15:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3010:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3013:4:1",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3003:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3003:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3003:15:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2894:5:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2905:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "2901:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2901:6:1"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "2891:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2891:17:1"
															},
															"nodeType": "YulIf",
															"src": "2888:140:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3037:20:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3048:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3055:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3044:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3044:13:1"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "3037:3:1"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2860:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "2870:3:1",
														"type": ""
													}
												],
												"src": "2831:232:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3242:166:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3259:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3270:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3252:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3252:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3252:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3293:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3304:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3289:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3289:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3309:2:1",
																		"type": "",
																		"value": "16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3282:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3282:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3282:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3332:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3343:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3328:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3328:18:1"
																	},
																	{
																		"hexValue": "4e6f7420612076616c69642075736572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3348:18:1",
																		"type": "",
																		"value": "Not a valid user"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3321:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3321:46:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3321:46:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3376:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3388:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3399:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3384:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3384:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3376:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_7e2c3d148196343ecd06c5b2a71b5ba4e09bd917096447f8a1ece3694fde0be6__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3219:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3233:4:1",
														"type": ""
													}
												],
												"src": "3068:340:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3494:103:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3540:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3549:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3552:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3542:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3542:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3542:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3515:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3524:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3511:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3511:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3536:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3507:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3507:32:1"
															},
															"nodeType": "YulIf",
															"src": "3504:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3565:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3581:9:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3575:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3575:16:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "3565:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3460:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3471:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3483:6:1",
														"type": ""
													}
												],
												"src": "3413:184:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3776:170:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3793:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3804:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3786:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3786:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3786:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3827:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3838:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3823:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3823:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3843:2:1",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3816:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3816:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3816:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3866:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3877:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3862:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3862:18:1"
																	},
																	{
																		"hexValue": "696e73756666696369656e742062616c616e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3882:22:1",
																		"type": "",
																		"value": "insufficient balance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3855:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3855:50:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3855:50:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3914:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3926:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3937:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3922:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3922:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3914:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_a6d1ff1db3d0b9b8c60e12ccab5ce7431be9a2cd0518ac362f1c5c1e0b1cefee__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3753:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3767:4:1",
														"type": ""
													}
												],
												"src": "3602:344:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4118:218:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4128:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4140:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4151:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4136:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4136:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4128:4:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4163:29:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4181:3:1",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4186:1:1",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "4177:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4177:11:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4190:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "4173:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4173:19:1"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "4167:2:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4208:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "4223:6:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "4231:2:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "4219:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4219:15:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4201:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4201:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4201:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4255:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4266:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4251:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4251:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "4275:6:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "4283:2:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "4271:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4271:15:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4244:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4244:43:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4244:43:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4307:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4318:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4303:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4303:18:1"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "4323:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4296:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4296:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4296:34:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_rational_500_by_1__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4071:9:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "4082:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4090:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4098:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4109:4:1",
														"type": ""
													}
												],
												"src": "3951:385:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4508:218:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4518:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4530:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4541:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4526:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4526:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4518:4:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4553:29:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4571:3:1",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4576:1:1",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "4567:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4567:11:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4580:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "4563:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4563:19:1"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "4557:2:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4598:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "4613:6:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "4621:2:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "4609:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4609:15:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4591:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4591:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4591:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4645:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4656:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4641:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4641:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "4665:6:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "4673:2:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "4661:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4661:15:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4634:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4634:43:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4634:43:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4697:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4708:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4693:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4693:18:1"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "4713:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4686:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4686:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4686:34:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_rational_300_by_1__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4461:9:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "4472:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4480:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4488:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4499:4:1",
														"type": ""
													}
												],
												"src": "4341:385:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4898:218:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4908:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4920:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4931:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4916:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4916:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4908:4:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4943:29:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4961:3:1",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4966:1:1",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "4957:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4957:11:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4970:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "4953:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4953:19:1"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "4947:2:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4988:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "5003:6:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "5011:2:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "4999:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4999:15:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4981:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4981:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4981:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5035:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5046:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5031:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5031:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "5055:6:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "5063:2:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "5051:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5051:15:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5024:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5024:43:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5024:43:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5087:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5098:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5083:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5083:18:1"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "5103:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5076:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5076:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5076:34:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_rational_200_by_1__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4851:9:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "4862:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4870:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4878:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4889:4:1",
														"type": ""
													}
												],
												"src": "4731:385:1"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_uint256_t_address_t_bool_t_bool__to_t_uint256_t_address_t_bool_t_bool__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), and(value1, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 64), iszero(iszero(value2)))\n        mstore(add(headStart, 96), iszero(iszero(value3)))\n    }\n    function abi_encode_tuple_t_contract$_InterfaceERC20_$795__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_stringliteral_d2a30e0d5845e97b1b92823282b1c8f66fb85bf930b451b83a45ce7bac4460aa__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 18)\n        mstore(add(headStart, 64), \"user already exist\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_packed_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__nonPadded_inplace_fromStack_reversed(pos, value2, value1, value0) -> end\n    {\n        mstore(pos, and(shl(96, value0), not(0xffffffffffffffffffffffff)))\n        mstore(add(pos, 20), value1)\n        mstore(add(pos, 52), value2)\n        end := add(pos, 84)\n    }\n    function abi_encode_tuple_t_stringliteral_61cd3a7ce172e8143be870a803fc424cc2dc95cf837e5e148fec23edfad807b7__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 19)\n        mstore(add(headStart, 64), \"Not a valid TokenID\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_2547072ea1669624254ad98a29f387fdce4aca4498930b07c148c345758a3f9d__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"Referrer Already used Only 1 all\")\n        mstore(add(headStart, 96), \"owed\")\n        tail := add(headStart, 128)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n        ret := add(value, 1)\n    }\n    function abi_encode_tuple_t_stringliteral_7e2c3d148196343ecd06c5b2a71b5ba4e09bd917096447f8a1ece3694fde0be6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 16)\n        mstore(add(headStart, 64), \"Not a valid user\")\n        tail := add(headStart, 96)\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_tuple_t_stringliteral_a6d1ff1db3d0b9b8c60e12ccab5ce7431be9a2cd0518ac362f1c5c1e0b1cefee__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"insufficient balance\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_address_t_rational_500_by_1__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_address_t_address_t_rational_300_by_1__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_address_t_address_t_rational_200_by_1__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b5060043610610085575f3560e01c806382e4eda41161005857806382e4eda4146100e7578063a5de36191461015c578063b688a3631461016e578063f13ad72514610176575f80fd5b806317d70f7c14610089578063255d45d8146100935780635ec01e4d146100b857806360f96a8f146100cf575b5f80fd5b610091610189565b005b61009b610247565b6040516001600160a01b0390911681526020015b60405180910390f35b6100c160035481565b6040519081526020016100af565b60025461009b9061010090046001600160a01b031681565b61012c6100f5366004610729565b60056020525f9081526040902080546001909101546001600160a01b0381169060ff600160a01b8204811691600160a81b90041684565b604080519485526001600160a01b03909316602085015290151591830191909152151560608201526080016100af565b5f5461009b906001600160a01b031681565b61009161028a565b60045461009b906001600160a01b031681565b335f90815260056020526040902060010154600160a81b900460ff16156101ec5760405162461bcd60e51b81526020600482015260126024820152711d5cd95c88185b1c9958591e48195e1a5cdd60721b60448201526064015b60405180910390fd5b6003546040516bffffffffffffffffffffffff193360601b166020820152426034820152605481019190915260740160408051601f1981840301815291815281516020928301206003819055335f9081526005909352912055565b335f90815260056020526040812060010154600160a81b900460ff1661026b575f80fd5b50335f908152600560205260409020600101546001600160a01b031690565b335f90815260056020526040902060010154600160a81b900460ff16156102e85760405162461bcd60e51b81526020600482015260126024820152711d5cd95c88185b1c9958591e48195e1a5cdd60721b60448201526064016101e3565b335f90815260056020526040812054900361033b5760405162461bcd60e51b8152602060048201526013602482015272139bdd0818481d985b1a5908151bdad95b9251606a1b60448201526064016101e3565b335f90815260056020526040902060010154600160a01b900460ff16156103b05760405162461bcd60e51b8152602060048201526024808201527f526566657272657220416c72656164792075736564204f6e6c79203120616c6c6044820152631bddd95960e21b60648201526084016101e3565b600254335f908152600560205260408120600190810180546101009094046001600160a01b03166001600160a01b031990941693909317909255815491906103f783610756565b91905055505f610409336001546104a2565b90508061044b5760405162461bcd60e51b815260206004820152601060248201526f2737ba1030903b30b634b2103ab9b2b960811b60448201526064016101e3565b335f908152600560205260408082206001908101805460ff60a81b1916600160a81b17905560025461010090046001600160a01b03168352912001805460ff60a01b1916600160a01b17905561049f6106ec565b50565b6004805460405163067dd27f60e51b81526001600160a01b03858116938201939093525f926101f492169063cfba4fe0906024016020604051808303815f875af11580156104f2573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610516919061077a565b101561055b5760405162461bcd60e51b8152602060048201526014602482015273696e73756666696369656e742062616c616e636560601b60448201526064016101e3565b600282116105e457600480546001600160a01b038581165f81815260056020526040908190206001015490516317d5759960e31b815294850191909152811660248401526101f46044840152169063beabacc8906064015f604051808303815f87803b1580156105c9575f80fd5b505af11580156105db573d5f803e3d5ffd5b505050506106e3565b6001600160a01b038381165f8181526005602052604090819020600101546004805492516317d5759960e31b81529081019390935283166024830181905261012c604484015292169063beabacc8906064015f604051808303815f87803b15801561064d575f80fd5b505af115801561065f573d5f803e3d5ffd5b5050600480546001600160a01b038581165f90815260056020526040908190206001015490516317d5759960e31b81528a8316948101949094528116602484015260c8604484015216925063beabacc891506064015f604051808303815f87803b1580156106cb575f80fd5b505af11580156106dd573d5f803e3d5ffd5b50505050505b50600192915050565b335f90815260056020526040902060010154600160a81b900460ff16610710575f80fd5b60028054610100600160a81b0319163361010002179055565b5f60208284031215610739575f80fd5b81356001600160a01b038116811461074f575f80fd5b9392505050565b5f6001820161077357634e487b7160e01b5f52601160045260245ffd5b5060010190565b5f6020828403121561078a575f80fd5b505191905056fea2646970667358221220527782c307577fecee4685d6c2c214b18aac12f169c66ea080e8ee7e2eb72f8d64736f6c63430008140033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x85 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x82E4EDA4 GT PUSH2 0x58 JUMPI DUP1 PUSH4 0x82E4EDA4 EQ PUSH2 0xE7 JUMPI DUP1 PUSH4 0xA5DE3619 EQ PUSH2 0x15C JUMPI DUP1 PUSH4 0xB688A363 EQ PUSH2 0x16E JUMPI DUP1 PUSH4 0xF13AD725 EQ PUSH2 0x176 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x17D70F7C EQ PUSH2 0x89 JUMPI DUP1 PUSH4 0x255D45D8 EQ PUSH2 0x93 JUMPI DUP1 PUSH4 0x5EC01E4D EQ PUSH2 0xB8 JUMPI DUP1 PUSH4 0x60F96A8F EQ PUSH2 0xCF JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x91 PUSH2 0x189 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x9B PUSH2 0x247 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC1 PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xAF JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x9B SWAP1 PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x12C PUSH2 0xF5 CALLDATASIZE PUSH1 0x4 PUSH2 0x729 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 PUSH1 0xFF PUSH1 0x1 PUSH1 0xA0 SHL DUP3 DIV DUP2 AND SWAP2 PUSH1 0x1 PUSH1 0xA8 SHL SWAP1 DIV AND DUP5 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP5 DUP6 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND PUSH1 0x20 DUP6 ADD MSTORE SWAP1 ISZERO ISZERO SWAP2 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ISZERO ISZERO PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD PUSH2 0xAF JUMP JUMPDEST PUSH0 SLOAD PUSH2 0x9B SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x91 PUSH2 0x28A JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH2 0x9B SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH1 0x1 PUSH1 0xA8 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x1EC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x1D5CD95C88185B1C9958591E48195E1A5CDD PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT CALLER PUSH1 0x60 SHL AND PUSH1 0x20 DUP3 ADD MSTORE TIMESTAMP PUSH1 0x34 DUP3 ADD MSTORE PUSH1 0x54 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x74 ADD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 DUP2 MSTORE DUP2 MLOAD PUSH1 0x20 SWAP3 DUP4 ADD KECCAK256 PUSH1 0x3 DUP2 SWAP1 SSTORE CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x5 SWAP1 SWAP4 MSTORE SWAP2 KECCAK256 SSTORE JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH1 0x1 PUSH1 0xA8 SHL SWAP1 DIV PUSH1 0xFF AND PUSH2 0x26B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH1 0x1 PUSH1 0xA8 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x2E8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x1D5CD95C88185B1C9958591E48195E1A5CDD PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x1E3 JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SUB PUSH2 0x33B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x139BDD0818481D985B1A5908151BDAD95B9251 PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x1E3 JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x3B0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x526566657272657220416C72656164792075736564204F6E6C79203120616C6C PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x1BDDD959 PUSH1 0xE2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1E3 JUMP JUMPDEST PUSH1 0x2 SLOAD CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x1 SWAP1 DUP2 ADD DUP1 SLOAD PUSH2 0x100 SWAP1 SWAP5 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 SWAP5 AND SWAP4 SWAP1 SWAP4 OR SWAP1 SWAP3 SSTORE DUP2 SLOAD SWAP2 SWAP1 PUSH2 0x3F7 DUP4 PUSH2 0x756 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH0 PUSH2 0x409 CALLER PUSH1 0x1 SLOAD PUSH2 0x4A2 JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x44B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x2737BA1030903B30B634B2103AB9B2B9 PUSH1 0x81 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x1E3 JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 PUSH1 0x1 SWAP1 DUP2 ADD DUP1 SLOAD PUSH1 0xFF PUSH1 0xA8 SHL NOT AND PUSH1 0x1 PUSH1 0xA8 SHL OR SWAP1 SSTORE PUSH1 0x2 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE SWAP2 KECCAK256 ADD DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND PUSH1 0x1 PUSH1 0xA0 SHL OR SWAP1 SSTORE PUSH2 0x49F PUSH2 0x6EC JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x67DD27F PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND SWAP4 DUP3 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH0 SWAP3 PUSH2 0x1F4 SWAP3 AND SWAP1 PUSH4 0xCFBA4FE0 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x4F2 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x516 SWAP2 SWAP1 PUSH2 0x77A JUMP JUMPDEST LT ISZERO PUSH2 0x55B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x696E73756666696369656E742062616C616E6365 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x1E3 JUMP JUMPDEST PUSH1 0x2 DUP3 GT PUSH2 0x5E4 JUMPI PUSH1 0x4 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 MLOAD PUSH4 0x17D57599 PUSH1 0xE3 SHL DUP2 MSTORE SWAP5 DUP6 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP2 AND PUSH1 0x24 DUP5 ADD MSTORE PUSH2 0x1F4 PUSH1 0x44 DUP5 ADD MSTORE AND SWAP1 PUSH4 0xBEABACC8 SWAP1 PUSH1 0x64 ADD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x5C9 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x5DB JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH2 0x6E3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH1 0x4 DUP1 SLOAD SWAP3 MLOAD PUSH4 0x17D57599 PUSH1 0xE3 SHL DUP2 MSTORE SWAP1 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE DUP4 AND PUSH1 0x24 DUP4 ADD DUP2 SWAP1 MSTORE PUSH2 0x12C PUSH1 0x44 DUP5 ADD MSTORE SWAP3 AND SWAP1 PUSH4 0xBEABACC8 SWAP1 PUSH1 0x64 ADD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x64D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x65F JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP PUSH1 0x4 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 MLOAD PUSH4 0x17D57599 PUSH1 0xE3 SHL DUP2 MSTORE DUP11 DUP4 AND SWAP5 DUP2 ADD SWAP5 SWAP1 SWAP5 MSTORE DUP2 AND PUSH1 0x24 DUP5 ADD MSTORE PUSH1 0xC8 PUSH1 0x44 DUP5 ADD MSTORE AND SWAP3 POP PUSH4 0xBEABACC8 SWAP2 POP PUSH1 0x64 ADD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x6CB JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x6DD JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP POP JUMPDEST POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH1 0x1 PUSH1 0xA8 SHL SWAP1 DIV PUSH1 0xFF AND PUSH2 0x710 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT AND CALLER PUSH2 0x100 MUL OR SWAP1 SSTORE JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x739 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x74F JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 DUP3 ADD PUSH2 0x773 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x78A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MSTORE PUSH24 0x82C307577FECEE4685D6C2C214B18AAC12F169C66EA080E8 0xEE PUSH31 0x2EB72F8D64736F6C6343000814003300000000000000000000000000000000 ",
							"sourceMap": "18147:2656:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;19159:260;;;:::i;:::-;;20553:113;;;:::i;:::-;;;-1:-1:-1;;;;;178:32:1;;;160:51;;148:2;133:18;20553:113:0;;;;;;;;18269:18;;;;;;;;;368:25:1;;;356:2;341:18;18269::0;222:177:1;18242:21:0;;;;;;;;-1:-1:-1;;;;;18242:21:0;;;18327:40;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;18327:40:0;;;;-1:-1:-1;;;18327:40:0;;;;;-1:-1:-1;;;18327:40:0;;;;;;;;;914:25:1;;;-1:-1:-1;;;;;975:32:1;;;970:2;955:18;;948:60;1051:14;;1044:22;1024:18;;;1017:50;;;;1110:14;1103:22;1098:2;1083:18;;1076:50;901:3;886:19;18327:40:0;695:437:1;18172:21:0;;;;;-1:-1:-1;;;;;18172:21:0;;;19459:587;;;:::i;18293:27::-;;;;;-1:-1:-1;;;;;18293:27:0;;;19159:260;19211:10;19204:18;;;;:6;:18;;;;;:29;;;-1:-1:-1;;;19204:29:0;;;;19203:30;19195:61;;;;-1:-1:-1;;;19195:61:0;;1569:2:1;19195:61:0;;;1551:21:1;1608:2;1588:18;;;1581:30;-1:-1:-1;;;1627:18:1;;;1620:48;1685:18;;19195:61:0;;;;;;;;;19349:6;;19303:53;;-1:-1:-1;;19320:10:0;1919:2:1;1915:15;1911:53;19303::0;;;1899:66:1;19332:15:0;1981:12:1;;;1974:28;2018:12;;;2011:28;;;;2055:12;;19303:53:0;;;-1:-1:-1;;19303:53:0;;;;;;;;;19293:64;;19303:53;19293:64;;;;19266:6;:101;;;19384:10;19275:92;19377:18;;;:6;:18;;;;;:35;19159:260::o;20553:113::-;19072:10;20606:7;19065:18;;;:6;:18;;;;;:29;;;-1:-1:-1;;;19065:29:0;;;;19057:38;;;;;;-1:-1:-1;20639:10:0::1;20632:18;::::0;;;:6:::1;:18;::::0;;;;:27:::1;;::::0;-1:-1:-1;;;;;20632:27:0::1;20553:113:::0;:::o;19459:587::-;19508:10;19501:18;;;;:6;:18;;;;;:29;;;-1:-1:-1;;;19501:29:0;;;;19500:30;19492:61;;;;-1:-1:-1;;;19492:61:0;;1569:2:1;19492:61:0;;;1551:21:1;1608:2;1588:18;;;1581:30;-1:-1:-1;;;1627:18:1;;;1620:48;1685:18;;19492:61:0;1367:342:1;19492:61:0;19578:10;19571:18;;;;:6;:18;;;;;:26;:31;;19563:63;;;;-1:-1:-1;;;19563:63:0;;2280:2:1;19563:63:0;;;2262:21:1;2319:2;2299:18;;;2292:30;-1:-1:-1;;;2338:18:1;;;2331:49;2397:18;;19563:63:0;2078:343:1;19563:63:0;19666:10;19659:18;;;;:6;:18;;;;;:30;;;-1:-1:-1;;;19659:30:0;;;;19657:33;19636:116;;;;-1:-1:-1;;;19636:116:0;;2628:2:1;19636:116:0;;;2610:21:1;2667:2;2647:18;;;2640:30;2706:34;2686:18;;;2679:62;-1:-1:-1;;;2757:18:1;;;2750:34;2801:19;;19636:116:0;2426:400:1;19636:116:0;19792:6;;19769:10;19762:18;;;;:6;:18;;;;;19792:6;19762:27;;;:36;;19792:6;;;;-1:-1:-1;;;;;19792:6:0;-1:-1:-1;;;;;;19762:36:0;;;;;;;;;;19808:7;;;19792:6;19808:7;;;:::i;:::-;;;;;;19825:14;19842:34;19858:10;19870:5;;19842:15;:34::i;:::-;19825:51;;19894:9;19886:38;;;;-1:-1:-1;;;19886:38:0;;3270:2:1;19886:38:0;;;3252:21:1;3309:2;3289:18;;;3282:30;-1:-1:-1;;;3328:18:1;;;3321:46;3384:18;;19886:38:0;3068:340:1;19886:38:0;19941:10;19934:18;;;;:6;:18;;;;;;19966:4;19934:29;;;:36;;-1:-1:-1;;;;19934:36:0;-1:-1:-1;;;19934:36:0;;;19987:6;;19934:36;19987:6;;-1:-1:-1;;;;;19987:6:0;19980:14;;;;:26;:33;;-1:-1:-1;;;;19980:33:0;-1:-1:-1;;;19980:33:0;;;20023:16;:14;:16::i;:::-;19482:564;19459:587::o;20052:495::-;20168:5;;;:23;;-1:-1:-1;;;20168:23:0;;-1:-1:-1;;;;;178:32:1;;;20168:23:0;;;160:51:1;;;;20144:4:0;;20195:3;;20168:5;;:17;;133:18:1;;20168:23:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:30;;20160:63;;;;-1:-1:-1;;;20160:63:0;;3804:2:1;20160:63:0;;;3786:21:1;3843:2;3823:18;;;3816:30;-1:-1:-1;;;3862:18:1;;;3855:50;3922:18;;20160:63:0;3602:344:1;20160:63:0;20247:1;20237:6;:11;20233:287;;20264:5;;;-1:-1:-1;;;;;20285:12:0;;;20264:5;20285:12;;;:6;:12;;;;;;;20264:5;20285:21;;20264:48;;-1:-1:-1;;;20264:48:0;;;;;4201:34:1;;;;20285:21:0;;4251:18:1;;;4244:43;20308:3:0;4303:18:1;;;4296:34;20264:5:0;;:14;;4136:18:1;;20264:48:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20233:287;;;-1:-1:-1;;;;;20361:12:0;;;20343:15;20361:12;;;:6;:12;;;;;;;:21;;;20396:5;;;:48;;-1:-1:-1;;;20396:48:0;;;;;4201:34:1;;;;20361:21:0;;4251:18:1;;;4244:43;;;20440:3:0;4303:18:1;;;4296:34;20361:21:0;20396:5;;:14;;4136:18:1;;20396:48:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;20458:5:0;;;-1:-1:-1;;;;;20479:15:0;;;20458:5;20479:15;;;:6;:15;;;;;;;20458:5;20479:24;;20458:51;;-1:-1:-1;;;20458:51:0;;4219:15:1;;;20458:51:0;;;4201:34:1;;;;20479:24:0;;4251:18:1;;;4244:43;20505:3:0;4303:18:1;;;4296:34;20458:5:0;;-1:-1:-1;20458:14:0;;-1:-1:-1;4136:18:1;;20458:51:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20329:191;20233:287;-1:-1:-1;20536:4:0;20052:495;;;;:::o;20719:82::-;19072:10;19065:18;;;;:6;:18;;;;;:29;;;-1:-1:-1;;;19065:29:0;;;;19057:38;;;;;;20775:6:::1;:19:::0;;-1:-1:-1;;;;;;20775:19:0::1;20784:10;20775:19;;;::::0;;20719:82::o;404:286:1:-;463:6;516:2;504:9;495:7;491:23;487:32;484:52;;;532:1;529;522:12;484:52;558:23;;-1:-1:-1;;;;;610:31:1;;600:42;;590:70;;656:1;653;646:12;590:70;679:5;404:286;-1:-1:-1;;;404:286:1:o;2831:232::-;2870:3;2891:17;;;2888:140;;2950:10;2945:3;2941:20;2938:1;2931:31;2985:4;2982:1;2975:15;3013:4;3010:1;3003:15;2888:140;-1:-1:-1;3055:1:1;3044:13;;2831:232::o;3413:184::-;3483:6;3536:2;3524:9;3515:7;3511:23;3507:32;3504:52;;;3552:1;3549;3542:12;3504:52;-1:-1:-1;3575:16:1;;3413:184;-1:-1:-1;3413:184:1:o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "398200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"admins()": "2346",
								"getparent()": "4645",
								"inter()": "2391",
								"join()": "infinite",
								"parent()": "2403",
								"random()": "2339",
								"staker(address)": "4765",
								"tokenId()": "48941"
							},
							"internal": {
								"changingParent()": "26471",
								"isValidTransfer(address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 18147,
									"end": 20803,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 18147,
									"end": 20803,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 18147,
									"end": 20803,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 18212,
									"end": 18213,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 18199,
									"end": 18213,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 18199,
									"end": 18213,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 18499,
									"end": 18780,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 18499,
									"end": 18780,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 18499,
									"end": 18780,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 18499,
									"end": 18780,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 18499,
									"end": 18780,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 18499,
									"end": 18780,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 18499,
									"end": 18780,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 18499,
									"end": 18780,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 18499,
									"end": 18780,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 18499,
									"end": 18780,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 18499,
									"end": 18780,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 18499,
									"end": 18780,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 18499,
									"end": 18780,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 18499,
									"end": 18780,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 18499,
									"end": 18780,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 18499,
									"end": 18780,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 18499,
									"end": 18780,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 18499,
									"end": 18780,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 18499,
									"end": 18780,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 18499,
									"end": 18780,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 18499,
									"end": 18780,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 18499,
									"end": 18780,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 18499,
									"end": 18780,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 18499,
									"end": 18780,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 18499,
									"end": 18780,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 18499,
									"end": 18780,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 18499,
									"end": 18780,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 18499,
									"end": 18780,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 18499,
									"end": 18780,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 18499,
									"end": 18780,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 18499,
									"end": 18780,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 18499,
									"end": 18780,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 18585,
									"end": 18590,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 18585,
									"end": 18622,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 18585,
									"end": 18622,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 18585,
									"end": 18622,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 18585,
									"end": 18622,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 18585,
									"end": 18622,
									"name": "AND",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 18585,
									"end": 18622,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 18585,
									"end": 18622,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 18585,
									"end": 18622,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 18585,
									"end": 18622,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 18585,
									"end": 18622,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 18585,
									"end": 18622,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 18632,
									"end": 18651,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 18632,
									"end": 18651,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 18632,
									"end": 18651,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 18632,
									"end": 18651,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 18632,
									"end": 18651,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 18641,
									"end": 18651,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 18632,
									"end": 18651,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 18632,
									"end": 18651,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 18632,
									"end": 18651,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 18632,
									"end": 18651,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 18632,
									"end": 18651,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 18661,
									"end": 18679,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 18661,
									"end": 18679,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 18661,
									"end": 18679,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 18661,
									"end": 18667,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 18661,
									"end": 18679,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 18661,
									"end": 18679,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 18661,
									"end": 18679,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 18661,
									"end": 18679,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 18661,
									"end": 18679,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 18661,
									"end": 18679,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": 18661,
									"end": 18690,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 18661,
									"end": 18690,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 18661,
									"end": 18690,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 18661,
									"end": 18697,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 18661,
									"end": 18697,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "FF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A8"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 18661,
									"end": 18697,
									"name": "AND",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A8"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 18661,
									"end": 18697,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 18661,
									"end": 18697,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 18661,
									"end": 18697,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 18707,
									"end": 18713,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 18707,
									"end": 18726,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 18707,
									"end": 18726,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 18585,
									"end": 18622,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 18707,
									"end": 18726,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 18707,
									"end": 18726,
									"name": "SWAP5",
									"source": 0
								},
								{
									"begin": 18707,
									"end": 18726,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "100"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A8"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 18707,
									"end": 18726,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 18707,
									"end": 18726,
									"name": "SWAP5",
									"source": 0
								},
								{
									"begin": 18707,
									"end": 18726,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 18707,
									"end": 18726,
									"name": "SWAP4",
									"source": 0
								},
								{
									"begin": 18707,
									"end": 18726,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 18707,
									"end": 18726,
									"name": "SWAP4",
									"source": 0
								},
								{
									"begin": 18707,
									"end": 18726,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 18707,
									"end": 18726,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 18707,
									"end": 18726,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 18707,
									"end": 18726,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 18736,
									"end": 18745,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 18736,
									"end": 18745,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 18736,
									"end": 18745,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 18755,
									"end": 18760,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 18755,
									"end": 18760,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 18766,
									"end": 18772,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 18766,
									"end": 18772,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 18755,
									"end": 18773,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 18755,
									"end": 18773,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "35313C21"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 18755,
									"end": 18773,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 18755,
									"end": 18773,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 18766,
									"end": 18772,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 18766,
									"end": 18772,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 18766,
									"end": 18772,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 18755,
									"end": 18773,
									"name": "SWAP4",
									"source": 0
								},
								{
									"begin": 18755,
									"end": 18773,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 18755,
									"end": 18773,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 455,
									"end": 506,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 455,
									"end": 506,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 455,
									"end": 506,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 455,
									"end": 506,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 18755,
									"end": 18760,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 18755,
									"end": 18760,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 18755,
									"end": 18765,
									"name": "PUSH",
									"source": 0,
									"value": "6A627842"
								},
								{
									"begin": 18755,
									"end": 18765,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 428,
									"end": 446,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 428,
									"end": 446,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 18755,
									"end": 18773,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 18755,
									"end": 18773,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 18755,
									"end": 18773,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 18755,
									"end": 18773,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 18755,
									"end": 18773,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 18755,
									"end": 18773,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 18755,
									"end": 18773,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 18755,
									"end": 18773,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 18755,
									"end": 18773,
									"name": "DUP8",
									"source": 0
								},
								{
									"begin": 18755,
									"end": 18773,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 18755,
									"end": 18773,
									"name": "EXTCODESIZE",
									"source": 0
								},
								{
									"begin": 18755,
									"end": 18773,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 18755,
									"end": 18773,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 18755,
									"end": 18773,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 18755,
									"end": 18773,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 18755,
									"end": 18773,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 18755,
									"end": 18773,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 18755,
									"end": 18773,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 18755,
									"end": 18773,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 18755,
									"end": 18773,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 18755,
									"end": 18773,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 18755,
									"end": 18773,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 18755,
									"end": 18773,
									"name": "GAS",
									"source": 0
								},
								{
									"begin": 18755,
									"end": 18773,
									"name": "CALL",
									"source": 0
								},
								{
									"begin": 18755,
									"end": 18773,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 18755,
									"end": 18773,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 18755,
									"end": 18773,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 18755,
									"end": 18773,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 18755,
									"end": 18773,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 18755,
									"end": 18773,
									"name": "RETURNDATASIZE",
									"source": 0
								},
								{
									"begin": 18755,
									"end": 18773,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 18755,
									"end": 18773,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 18755,
									"end": 18773,
									"name": "RETURNDATACOPY",
									"source": 0
								},
								{
									"begin": 18755,
									"end": 18773,
									"name": "RETURNDATASIZE",
									"source": 0
								},
								{
									"begin": 18755,
									"end": 18773,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 18755,
									"end": 18773,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 18755,
									"end": 18773,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 18755,
									"end": 18773,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 18755,
									"end": 18773,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 18755,
									"end": 18773,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 18755,
									"end": 18773,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 18755,
									"end": 18773,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 18499,
									"end": 18780,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 18147,
									"end": 20803,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 18147,
									"end": 20803,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 14,
									"end": 304,
									"name": "tag",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 14,
									"end": 304,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 84,
									"end": 90,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 137,
									"end": 139,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 125,
									"end": 134,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 116,
									"end": 123,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 112,
									"end": 135,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 108,
									"end": 140,
									"name": "SLT",
									"source": 1
								},
								{
									"begin": 105,
									"end": 157,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 105,
									"end": 157,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "14"
								},
								{
									"begin": 105,
									"end": 157,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 153,
									"end": 154,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 150,
									"end": 151,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 143,
									"end": 155,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 105,
									"end": 157,
									"name": "tag",
									"source": 1,
									"value": "14"
								},
								{
									"begin": 105,
									"end": 157,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 179,
									"end": 195,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 179,
									"end": 195,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 224,
									"end": 255,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 224,
									"end": 255,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 214,
									"end": 256,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 214,
									"end": 256,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 204,
									"end": 274,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "15"
								},
								{
									"begin": 204,
									"end": 274,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 270,
									"end": 271,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 267,
									"end": 268,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 260,
									"end": 272,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 204,
									"end": 274,
									"name": "tag",
									"source": 1,
									"value": "15"
								},
								{
									"begin": 204,
									"end": 274,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 293,
									"end": 298,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 14,
									"end": 304,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 14,
									"end": 304,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 309,
									"end": 512,
									"name": "tag",
									"source": 1,
									"value": "12"
								},
								{
									"begin": 309,
									"end": 512,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 18147,
									"end": 20803,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 18147,
									"end": 20803,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 18147,
									"end": 20803,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 18147,
									"end": 20803,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 18147,
									"end": 20803,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 18147,
									"end": 20803,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 18147,
									"end": 20803,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220527782c307577fecee4685d6c2c214b18aac12f169c66ea080e8ee7e2eb72f8d64736f6c63430008140033",
									".code": [
										{
											"begin": 18147,
											"end": 20803,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 18147,
											"end": 20803,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18147,
											"end": 20803,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18147,
											"end": 20803,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 18147,
											"end": 20803,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18147,
											"end": 20803,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 18147,
											"end": 20803,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 18147,
											"end": 20803,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 18147,
											"end": 20803,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18147,
											"end": 20803,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18147,
											"end": 20803,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 18147,
											"end": 20803,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 18147,
											"end": 20803,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18147,
											"end": 20803,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18147,
											"end": 20803,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 18147,
											"end": 20803,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 18147,
											"end": 20803,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 18147,
											"end": 20803,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 18147,
											"end": 20803,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 18147,
											"end": 20803,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18147,
											"end": 20803,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 18147,
											"end": 20803,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 18147,
											"end": 20803,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 18147,
											"end": 20803,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18147,
											"end": 20803,
											"name": "PUSH",
											"source": 0,
											"value": "82E4EDA4"
										},
										{
											"begin": 18147,
											"end": 20803,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 18147,
											"end": 20803,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 18147,
											"end": 20803,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 18147,
											"end": 20803,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18147,
											"end": 20803,
											"name": "PUSH",
											"source": 0,
											"value": "82E4EDA4"
										},
										{
											"begin": 18147,
											"end": 20803,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 18147,
											"end": 20803,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 18147,
											"end": 20803,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 18147,
											"end": 20803,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18147,
											"end": 20803,
											"name": "PUSH",
											"source": 0,
											"value": "A5DE3619"
										},
										{
											"begin": 18147,
											"end": 20803,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 18147,
											"end": 20803,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 18147,
											"end": 20803,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 18147,
											"end": 20803,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18147,
											"end": 20803,
											"name": "PUSH",
											"source": 0,
											"value": "B688A363"
										},
										{
											"begin": 18147,
											"end": 20803,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 18147,
											"end": 20803,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 18147,
											"end": 20803,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 18147,
											"end": 20803,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18147,
											"end": 20803,
											"name": "PUSH",
											"source": 0,
											"value": "F13AD725"
										},
										{
											"begin": 18147,
											"end": 20803,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 18147,
											"end": 20803,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 18147,
											"end": 20803,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 18147,
											"end": 20803,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18147,
											"end": 20803,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18147,
											"end": 20803,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 18147,
											"end": 20803,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 18147,
											"end": 20803,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18147,
											"end": 20803,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18147,
											"end": 20803,
											"name": "PUSH",
											"source": 0,
											"value": "17D70F7C"
										},
										{
											"begin": 18147,
											"end": 20803,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 18147,
											"end": 20803,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 18147,
											"end": 20803,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 18147,
											"end": 20803,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18147,
											"end": 20803,
											"name": "PUSH",
											"source": 0,
											"value": "255D45D8"
										},
										{
											"begin": 18147,
											"end": 20803,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 18147,
											"end": 20803,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 18147,
											"end": 20803,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 18147,
											"end": 20803,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18147,
											"end": 20803,
											"name": "PUSH",
											"source": 0,
											"value": "5EC01E4D"
										},
										{
											"begin": 18147,
											"end": 20803,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 18147,
											"end": 20803,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 18147,
											"end": 20803,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 18147,
											"end": 20803,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18147,
											"end": 20803,
											"name": "PUSH",
											"source": 0,
											"value": "60F96A8F"
										},
										{
											"begin": 18147,
											"end": 20803,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 18147,
											"end": 20803,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 18147,
											"end": 20803,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 18147,
											"end": 20803,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 18147,
											"end": 20803,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18147,
											"end": 20803,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18147,
											"end": 20803,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18147,
											"end": 20803,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 19159,
											"end": 19419,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 19159,
											"end": 19419,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19159,
											"end": 19419,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 19159,
											"end": 19419,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 19159,
											"end": 19419,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 19159,
											"end": 19419,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 19159,
											"end": 19419,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19159,
											"end": 19419,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 20553,
											"end": 20666,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 20553,
											"end": 20666,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20553,
											"end": 20666,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 20553,
											"end": 20666,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 20553,
											"end": 20666,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20553,
											"end": 20666,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 20553,
											"end": 20666,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20553,
											"end": 20666,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20553,
											"end": 20666,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 178,
											"end": 210,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 178,
											"end": 210,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 178,
											"end": 210,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 160,
											"end": 211,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 160,
											"end": 211,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 148,
											"end": 150,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 20553,
											"end": 20666,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 20553,
											"end": 20666,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20553,
											"end": 20666,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20553,
											"end": 20666,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20553,
											"end": 20666,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20553,
											"end": 20666,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20553,
											"end": 20666,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 20553,
											"end": 20666,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20553,
											"end": 20666,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 18269,
											"end": 18287,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 18269,
											"end": 18287,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18269,
											"end": 18287,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 18269,
											"end": 18287,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 18269,
											"end": 18287,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 18269,
											"end": 18287,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18269,
											"end": 18287,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 18269,
											"end": 18287,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 18269,
											"end": 18287,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18269,
											"end": 18287,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18269,
											"end": 18287,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 368,
											"end": 393,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 368,
											"end": 393,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 368,
											"end": 393,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 356,
											"end": 358,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 341,
											"end": 359,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 18269,
											"end": 18287,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 222,
											"end": 399,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 18242,
											"end": 18263,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 18242,
											"end": 18263,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18242,
											"end": 18263,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 18242,
											"end": 18263,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 18242,
											"end": 18263,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 18242,
											"end": 18263,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18242,
											"end": 18263,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 18242,
											"end": 18263,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18242,
											"end": 18263,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 18242,
											"end": 18263,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18242,
											"end": 18263,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18242,
											"end": 18263,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 18327,
											"end": 18367,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 18327,
											"end": 18367,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18327,
											"end": 18367,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 18327,
											"end": 18367,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 18327,
											"end": 18367,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 18327,
											"end": 18367,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 18327,
											"end": 18367,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 18327,
											"end": 18367,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 18327,
											"end": 18367,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 18327,
											"end": 18367,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18327,
											"end": 18367,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 18327,
											"end": 18367,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 18327,
											"end": 18367,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18327,
											"end": 18367,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18327,
											"end": 18367,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18327,
											"end": 18367,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18327,
											"end": 18367,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18327,
											"end": 18367,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18327,
											"end": 18367,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18327,
											"end": 18367,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 18327,
											"end": 18367,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18327,
											"end": 18367,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 18327,
											"end": 18367,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 18327,
											"end": 18367,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18327,
											"end": 18367,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18327,
											"end": 18367,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18327,
											"end": 18367,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 18327,
											"end": 18367,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18327,
											"end": 18367,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18327,
											"end": 18367,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18327,
											"end": 18367,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 18327,
											"end": 18367,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18327,
											"end": 18367,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 18327,
											"end": 18367,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18327,
											"end": 18367,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18327,
											"end": 18367,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 18327,
											"end": 18367,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18327,
											"end": 18367,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 18327,
											"end": 18367,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18327,
											"end": 18367,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 18327,
											"end": 18367,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 18327,
											"end": 18367,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 18327,
											"end": 18367,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18327,
											"end": 18367,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18327,
											"end": 18367,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18327,
											"end": 18367,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 914,
											"end": 939,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 914,
											"end": 939,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 914,
											"end": 939,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 975,
											"end": 1007,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 975,
											"end": 1007,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 975,
											"end": 1007,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 970,
											"end": 972,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 955,
											"end": 973,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 955,
											"end": 973,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 948,
											"end": 1008,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1051,
											"end": 1065,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1051,
											"end": 1065,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1044,
											"end": 1066,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1024,
											"end": 1042,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1024,
											"end": 1042,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1024,
											"end": 1042,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1017,
											"end": 1067,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1017,
											"end": 1067,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1017,
											"end": 1067,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1017,
											"end": 1067,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1110,
											"end": 1124,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1103,
											"end": 1125,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1098,
											"end": 1100,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 1083,
											"end": 1101,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1083,
											"end": 1101,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1076,
											"end": 1126,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 901,
											"end": 904,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 886,
											"end": 905,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 18327,
											"end": 18367,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 695,
											"end": 1132,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 18172,
											"end": 18193,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 18172,
											"end": 18193,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18172,
											"end": 18193,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18172,
											"end": 18193,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 18172,
											"end": 18193,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 18172,
											"end": 18193,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 18172,
											"end": 18193,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18172,
											"end": 18193,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18172,
											"end": 18193,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 19459,
											"end": 20046,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 19459,
											"end": 20046,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19459,
											"end": 20046,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 19459,
											"end": 20046,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 19459,
											"end": 20046,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 18293,
											"end": 18320,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 18293,
											"end": 18320,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18293,
											"end": 18320,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 18293,
											"end": 18320,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 18293,
											"end": 18320,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 18293,
											"end": 18320,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 18293,
											"end": 18320,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18293,
											"end": 18320,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18293,
											"end": 18320,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 19159,
											"end": 19419,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 19159,
											"end": 19419,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19211,
											"end": 19221,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 19204,
											"end": 19222,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19204,
											"end": 19222,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19204,
											"end": 19222,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19204,
											"end": 19222,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19204,
											"end": 19210,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 19204,
											"end": 19222,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 19204,
											"end": 19222,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19204,
											"end": 19222,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19204,
											"end": 19222,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19204,
											"end": 19222,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 19204,
											"end": 19233,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 19204,
											"end": 19233,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19204,
											"end": 19233,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 19204,
											"end": 19233,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19204,
											"end": 19233,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 19204,
											"end": 19233,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 19204,
											"end": 19233,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 19203,
											"end": 19233,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 19195,
											"end": 19256,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 19195,
											"end": 19256,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 19195,
											"end": 19256,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19195,
											"end": 19256,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 19195,
											"end": 19256,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19195,
											"end": 19256,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1569,
											"end": 1571,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 19195,
											"end": 19256,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 19195,
											"end": 19256,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 19195,
											"end": 19256,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1551,
											"end": 1572,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1608,
											"end": 1610,
											"name": "PUSH",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 1588,
											"end": 1606,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1588,
											"end": 1606,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1588,
											"end": 1606,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1581,
											"end": 1611,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1D5CD95C88185B1C9958591E48195E1A5CDD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "72"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1627,
											"end": 1645,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 1627,
											"end": 1645,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1627,
											"end": 1645,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1620,
											"end": 1668,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1685,
											"end": 1703,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 1685,
											"end": 1703,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 19195,
											"end": 19256,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 19195,
											"end": 19256,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19195,
											"end": 19256,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19195,
											"end": 19256,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 19195,
											"end": 19256,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19195,
											"end": 19256,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19195,
											"end": 19256,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 19195,
											"end": 19256,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19195,
											"end": 19256,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 19195,
											"end": 19256,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 19195,
											"end": 19256,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19349,
											"end": 19355,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 19349,
											"end": 19355,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 19303,
											"end": 19356,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19303,
											"end": 19356,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 19320,
											"end": 19330,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 1919,
											"end": 1921,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 1915,
											"end": 1930,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 1911,
											"end": 1964,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 19303,
											"end": 19356,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 19303,
											"end": 19356,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 19303,
											"end": 19356,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1899,
											"end": 1965,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 19332,
											"end": 19347,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 1981,
											"end": 1993,
											"name": "PUSH",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 1981,
											"end": 1993,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1981,
											"end": 1993,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1974,
											"end": 2002,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2018,
											"end": 2030,
											"name": "PUSH",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 2018,
											"end": 2030,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2018,
											"end": 2030,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2011,
											"end": 2039,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2011,
											"end": 2039,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2011,
											"end": 2039,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2011,
											"end": 2039,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2055,
											"end": 2067,
											"name": "PUSH",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 2055,
											"end": 2067,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 19303,
											"end": 19356,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19303,
											"end": 19356,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19303,
											"end": 19356,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 19303,
											"end": 19356,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19303,
											"end": 19356,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 19303,
											"end": 19356,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 19303,
											"end": 19356,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19303,
											"end": 19356,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19303,
											"end": 19356,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19303,
											"end": 19356,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19303,
											"end": 19356,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19303,
											"end": 19356,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19293,
											"end": 19357,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19293,
											"end": 19357,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 19303,
											"end": 19356,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 19293,
											"end": 19357,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 19293,
											"end": 19357,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 19293,
											"end": 19357,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19293,
											"end": 19357,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 19266,
											"end": 19272,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 19266,
											"end": 19367,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19266,
											"end": 19367,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19266,
											"end": 19367,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 19384,
											"end": 19394,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 19275,
											"end": 19367,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19377,
											"end": 19395,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19377,
											"end": 19395,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19377,
											"end": 19395,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19377,
											"end": 19383,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 19377,
											"end": 19395,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19377,
											"end": 19395,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 19377,
											"end": 19395,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19377,
											"end": 19395,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19377,
											"end": 19395,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 19377,
											"end": 19412,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 19159,
											"end": 19419,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20553,
											"end": 20666,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 20553,
											"end": 20666,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19072,
											"end": 19082,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 20606,
											"end": 20613,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19065,
											"end": 19083,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19065,
											"end": 19083,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19065,
											"end": 19083,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19065,
											"end": 19071,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 19065,
											"end": 19083,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 19065,
											"end": 19083,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19065,
											"end": 19083,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19065,
											"end": 19083,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19065,
											"end": 19083,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 19065,
											"end": 19094,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 19065,
											"end": 19094,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19065,
											"end": 19094,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 19065,
											"end": 19094,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19065,
											"end": 19094,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 19065,
											"end": 19094,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 19065,
											"end": 19094,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 19057,
											"end": 19095,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 19057,
											"end": 19095,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 19057,
											"end": 19095,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19057,
											"end": 19095,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19057,
											"end": 19095,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 19057,
											"end": 19095,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 19057,
											"end": 19095,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 20639,
											"end": 20649,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 20632,
											"end": 20650,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20632,
											"end": 20650,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20632,
											"end": 20650,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20632,
											"end": 20650,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20632,
											"end": 20638,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 20632,
											"end": 20650,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 20632,
											"end": 20650,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20632,
											"end": 20650,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20632,
											"end": 20650,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20632,
											"end": 20650,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 20632,
											"end": 20659,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 20632,
											"end": 20659,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20632,
											"end": 20659,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 20632,
											"end": 20659,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20553,
											"end": 20666,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20553,
											"end": 20666,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 19459,
											"end": 20046,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 19459,
											"end": 20046,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19508,
											"end": 19518,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 19501,
											"end": 19519,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19501,
											"end": 19519,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19501,
											"end": 19519,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19501,
											"end": 19519,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19501,
											"end": 19507,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 19501,
											"end": 19519,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 19501,
											"end": 19519,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19501,
											"end": 19519,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19501,
											"end": 19519,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19501,
											"end": 19519,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 19501,
											"end": 19530,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 19501,
											"end": 19530,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19501,
											"end": 19530,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 19501,
											"end": 19530,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19501,
											"end": 19530,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 19501,
											"end": 19530,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 19501,
											"end": 19530,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 19500,
											"end": 19530,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 19492,
											"end": 19553,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 19492,
											"end": 19553,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 19492,
											"end": 19553,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19492,
											"end": 19553,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 19492,
											"end": 19553,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19492,
											"end": 19553,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1569,
											"end": 1571,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 19492,
											"end": 19553,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 19492,
											"end": 19553,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 19492,
											"end": 19553,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1551,
											"end": 1572,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1608,
											"end": 1610,
											"name": "PUSH",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 1588,
											"end": 1606,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1588,
											"end": 1606,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1588,
											"end": 1606,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1581,
											"end": 1611,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1D5CD95C88185B1C9958591E48195E1A5CDD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "72"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1627,
											"end": 1645,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 1627,
											"end": 1645,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1627,
											"end": 1645,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1620,
											"end": 1668,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1685,
											"end": 1703,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 1685,
											"end": 1703,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 19492,
											"end": 19553,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 1367,
											"end": 1709,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 19492,
											"end": 19553,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 19492,
											"end": 19553,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19578,
											"end": 19588,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 19571,
											"end": 19589,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19571,
											"end": 19589,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19571,
											"end": 19589,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19571,
											"end": 19589,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19571,
											"end": 19577,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 19571,
											"end": 19589,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 19571,
											"end": 19589,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19571,
											"end": 19589,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19571,
											"end": 19589,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19571,
											"end": 19589,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 19571,
											"end": 19597,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 19571,
											"end": 19602,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19571,
											"end": 19602,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 19563,
											"end": 19626,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 19563,
											"end": 19626,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 19563,
											"end": 19626,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19563,
											"end": 19626,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 19563,
											"end": 19626,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19563,
											"end": 19626,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2280,
											"end": 2282,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 19563,
											"end": 19626,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 19563,
											"end": 19626,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 19563,
											"end": 19626,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2262,
											"end": 2283,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2319,
											"end": 2321,
											"name": "PUSH",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 2299,
											"end": 2317,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2299,
											"end": 2317,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2299,
											"end": 2317,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2292,
											"end": 2322,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "139BDD0818481D985B1A5908151BDAD95B9251"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2338,
											"end": 2356,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 2338,
											"end": 2356,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2338,
											"end": 2356,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2331,
											"end": 2380,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2397,
											"end": 2415,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 2397,
											"end": 2415,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 19563,
											"end": 19626,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 2078,
											"end": 2421,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 19563,
											"end": 19626,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 19563,
											"end": 19626,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19666,
											"end": 19676,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 19659,
											"end": 19677,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19659,
											"end": 19677,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19659,
											"end": 19677,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19659,
											"end": 19677,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19659,
											"end": 19665,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 19659,
											"end": 19677,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 19659,
											"end": 19677,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19659,
											"end": 19677,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19659,
											"end": 19677,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19659,
											"end": 19677,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 19659,
											"end": 19689,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 19659,
											"end": 19689,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19659,
											"end": 19689,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 19659,
											"end": 19689,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19659,
											"end": 19689,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 19659,
											"end": 19689,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 19659,
											"end": 19689,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 19657,
											"end": 19690,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 19636,
											"end": 19752,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 19636,
											"end": 19752,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 19636,
											"end": 19752,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19636,
											"end": 19752,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 19636,
											"end": 19752,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19636,
											"end": 19752,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2628,
											"end": 2630,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 19636,
											"end": 19752,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 19636,
											"end": 19752,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 19636,
											"end": 19752,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2610,
											"end": 2631,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2667,
											"end": 2669,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2647,
											"end": 2665,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2647,
											"end": 2665,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2647,
											"end": 2665,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2640,
											"end": 2670,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2706,
											"end": 2740,
											"name": "PUSH",
											"source": 1,
											"value": "526566657272657220416C72656164792075736564204F6E6C79203120616C6C"
										},
										{
											"begin": 2686,
											"end": 2704,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 2686,
											"end": 2704,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2686,
											"end": 2704,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2679,
											"end": 2741,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1BDDD959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2757,
											"end": 2775,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 2757,
											"end": 2775,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2757,
											"end": 2775,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2750,
											"end": 2784,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2801,
											"end": 2820,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 2801,
											"end": 2820,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 19636,
											"end": 19752,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 2426,
											"end": 2826,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 19636,
											"end": 19752,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 19636,
											"end": 19752,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19792,
											"end": 19798,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 19792,
											"end": 19798,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 19769,
											"end": 19779,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 19762,
											"end": 19780,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19762,
											"end": 19780,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19762,
											"end": 19780,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19762,
											"end": 19780,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19762,
											"end": 19768,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 19762,
											"end": 19780,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 19762,
											"end": 19780,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19762,
											"end": 19780,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19762,
											"end": 19780,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19762,
											"end": 19780,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 19792,
											"end": 19798,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 19762,
											"end": 19789,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19762,
											"end": 19789,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19762,
											"end": 19789,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19762,
											"end": 19798,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19762,
											"end": 19798,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 19792,
											"end": 19798,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 19792,
											"end": 19798,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19792,
											"end": 19798,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 19792,
											"end": 19798,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 19792,
											"end": 19798,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 19762,
											"end": 19798,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19762,
											"end": 19798,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 19762,
											"end": 19798,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 19762,
											"end": 19798,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 19762,
											"end": 19798,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19762,
											"end": 19798,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 19762,
											"end": 19798,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 19762,
											"end": 19798,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19762,
											"end": 19798,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 19762,
											"end": 19798,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 19808,
											"end": 19815,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19808,
											"end": 19815,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 19808,
											"end": 19815,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19792,
											"end": 19798,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19808,
											"end": 19815,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 19808,
											"end": 19815,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 19808,
											"end": 19815,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 19808,
											"end": 19815,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 19808,
											"end": 19815,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 19808,
											"end": 19815,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19808,
											"end": 19815,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19808,
											"end": 19815,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19808,
											"end": 19815,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19808,
											"end": 19815,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 19808,
											"end": 19815,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19825,
											"end": 19839,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19842,
											"end": 19876,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 19858,
											"end": 19868,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 19870,
											"end": 19875,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 19870,
											"end": 19875,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 19842,
											"end": 19857,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 19842,
											"end": 19876,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 19842,
											"end": 19876,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 19842,
											"end": 19876,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19825,
											"end": 19876,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19825,
											"end": 19876,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19894,
											"end": 19903,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19886,
											"end": 19924,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 19886,
											"end": 19924,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 19886,
											"end": 19924,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19886,
											"end": 19924,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 19886,
											"end": 19924,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19886,
											"end": 19924,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3270,
											"end": 3272,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 19886,
											"end": 19924,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 19886,
											"end": 19924,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 19886,
											"end": 19924,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3252,
											"end": 3273,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3309,
											"end": 3311,
											"name": "PUSH",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 3289,
											"end": 3307,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 3289,
											"end": 3307,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3289,
											"end": 3307,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3282,
											"end": 3312,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2737BA1030903B30B634B2103AB9B2B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "81"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3328,
											"end": 3346,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 3328,
											"end": 3346,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3328,
											"end": 3346,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3321,
											"end": 3367,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3384,
											"end": 3402,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 3384,
											"end": 3402,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 19886,
											"end": 19924,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 3068,
											"end": 3408,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 19886,
											"end": 19924,
											"name": "tag",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 19886,
											"end": 19924,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19941,
											"end": 19951,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 19934,
											"end": 19952,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19934,
											"end": 19952,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19934,
											"end": 19952,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19934,
											"end": 19952,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19934,
											"end": 19940,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 19934,
											"end": 19952,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 19934,
											"end": 19952,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19934,
											"end": 19952,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19934,
											"end": 19952,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19934,
											"end": 19952,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 19934,
											"end": 19952,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 19966,
											"end": 19970,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 19934,
											"end": 19963,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19934,
											"end": 19963,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19934,
											"end": 19963,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19934,
											"end": 19970,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19934,
											"end": 19970,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 19934,
											"end": 19970,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 19934,
											"end": 19970,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 19934,
											"end": 19970,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19934,
											"end": 19970,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 19987,
											"end": 19993,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 19987,
											"end": 19993,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 19934,
											"end": 19970,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 19987,
											"end": 19993,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19987,
											"end": 19993,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 19987,
											"end": 19993,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 19980,
											"end": 19994,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 19980,
											"end": 19994,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19980,
											"end": 19994,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19980,
											"end": 19994,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 19980,
											"end": 20006,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19980,
											"end": 20013,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19980,
											"end": 20013,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 19980,
											"end": 20013,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 19980,
											"end": 20013,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 19980,
											"end": 20013,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19980,
											"end": 20013,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 20023,
											"end": 20039,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 20023,
											"end": 20037,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 20023,
											"end": 20039,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20023,
											"end": 20039,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 20023,
											"end": 20039,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19482,
											"end": 20046,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19459,
											"end": 20046,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20052,
											"end": 20547,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 20052,
											"end": 20547,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20168,
											"end": 20173,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 20168,
											"end": 20173,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20168,
											"end": 20173,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 20168,
											"end": 20191,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20168,
											"end": 20191,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "67DD27F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 20168,
											"end": 20191,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20168,
											"end": 20191,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 178,
											"end": 210,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 178,
											"end": 210,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 178,
											"end": 210,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 20168,
											"end": 20191,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 20168,
											"end": 20191,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 20168,
											"end": 20191,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 160,
											"end": 211,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 160,
											"end": 211,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 160,
											"end": 211,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 160,
											"end": 211,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 20144,
											"end": 20148,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20144,
											"end": 20148,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 20195,
											"end": 20198,
											"name": "PUSH",
											"source": 0,
											"value": "1F4"
										},
										{
											"begin": 20195,
											"end": 20198,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 20168,
											"end": 20173,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20168,
											"end": 20173,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20168,
											"end": 20185,
											"name": "PUSH",
											"source": 0,
											"value": "CFBA4FE0"
										},
										{
											"begin": 20168,
											"end": 20185,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 133,
											"end": 151,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 20168,
											"end": 20191,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 20168,
											"end": 20191,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20168,
											"end": 20191,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20168,
											"end": 20191,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20168,
											"end": 20191,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 20168,
											"end": 20191,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 20168,
											"end": 20191,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20168,
											"end": 20191,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20168,
											"end": 20191,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 20168,
											"end": 20191,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 20168,
											"end": 20191,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 20168,
											"end": 20191,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 20168,
											"end": 20191,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20168,
											"end": 20191,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 20168,
											"end": 20191,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 20168,
											"end": 20191,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20168,
											"end": 20191,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 20168,
											"end": 20191,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20168,
											"end": 20191,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20168,
											"end": 20191,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 20168,
											"end": 20191,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 20168,
											"end": 20191,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20168,
											"end": 20191,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 20168,
											"end": 20191,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 20168,
											"end": 20191,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20168,
											"end": 20191,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20168,
											"end": 20191,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20168,
											"end": 20191,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20168,
											"end": 20191,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20168,
											"end": 20191,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20168,
											"end": 20191,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20168,
											"end": 20191,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 20168,
											"end": 20191,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 20168,
											"end": 20191,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 20168,
											"end": 20191,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 20168,
											"end": 20191,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 20168,
											"end": 20191,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20168,
											"end": 20191,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20168,
											"end": 20191,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 20168,
											"end": 20191,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20168,
											"end": 20191,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20168,
											"end": 20191,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20168,
											"end": 20191,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20168,
											"end": 20191,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20168,
											"end": 20191,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20168,
											"end": 20191,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20168,
											"end": 20191,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20168,
											"end": 20191,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 20168,
											"end": 20191,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20168,
											"end": 20191,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20168,
											"end": 20191,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 20168,
											"end": 20191,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20168,
											"end": 20191,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 20168,
											"end": 20191,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20168,
											"end": 20198,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 20168,
											"end": 20198,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 20160,
											"end": 20223,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 20160,
											"end": 20223,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20160,
											"end": 20223,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20160,
											"end": 20223,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 20160,
											"end": 20223,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20160,
											"end": 20223,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3804,
											"end": 3806,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 20160,
											"end": 20223,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 20160,
											"end": 20223,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 20160,
											"end": 20223,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3786,
											"end": 3807,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3843,
											"end": 3845,
											"name": "PUSH",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 3823,
											"end": 3841,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 3823,
											"end": 3841,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3823,
											"end": 3841,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3816,
											"end": 3846,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "696E73756666696369656E742062616C616E6365"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3862,
											"end": 3880,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 3862,
											"end": 3880,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3862,
											"end": 3880,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3855,
											"end": 3905,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3922,
											"end": 3940,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 3922,
											"end": 3940,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 20160,
											"end": 20223,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 3602,
											"end": 3946,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 20160,
											"end": 20223,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 20160,
											"end": 20223,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20247,
											"end": 20248,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 20237,
											"end": 20243,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 20237,
											"end": 20248,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 20233,
											"end": 20520,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 20233,
											"end": 20520,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20264,
											"end": 20269,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 20264,
											"end": 20269,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20264,
											"end": 20269,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 20285,
											"end": 20297,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 20285,
											"end": 20297,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20285,
											"end": 20297,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20264,
											"end": 20269,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20285,
											"end": 20297,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20285,
											"end": 20297,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20285,
											"end": 20297,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20285,
											"end": 20291,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 20285,
											"end": 20297,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 20285,
											"end": 20297,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20285,
											"end": 20297,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20285,
											"end": 20297,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20285,
											"end": 20297,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20285,
											"end": 20297,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20285,
											"end": 20297,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 20264,
											"end": 20269,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 20285,
											"end": 20306,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20285,
											"end": 20306,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 20264,
											"end": 20312,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20264,
											"end": 20312,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "17D57599"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 20264,
											"end": 20312,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20264,
											"end": 20312,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20264,
											"end": 20312,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 20264,
											"end": 20312,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 20264,
											"end": 20312,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4201,
											"end": 4235,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4201,
											"end": 4235,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4201,
											"end": 4235,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4201,
											"end": 4235,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 20285,
											"end": 20306,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20285,
											"end": 20306,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4251,
											"end": 4269,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 4251,
											"end": 4269,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4251,
											"end": 4269,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4244,
											"end": 4287,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 20308,
											"end": 20311,
											"name": "PUSH",
											"source": 0,
											"value": "1F4"
										},
										{
											"begin": 4303,
											"end": 4321,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 4303,
											"end": 4321,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4303,
											"end": 4321,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4296,
											"end": 4330,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 20264,
											"end": 20269,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20264,
											"end": 20269,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20264,
											"end": 20278,
											"name": "PUSH",
											"source": 0,
											"value": "BEABACC8"
										},
										{
											"begin": 20264,
											"end": 20278,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4136,
											"end": 4154,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 4136,
											"end": 4154,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 20264,
											"end": 20312,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20264,
											"end": 20312,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20264,
											"end": 20312,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20264,
											"end": 20312,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20264,
											"end": 20312,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 20264,
											"end": 20312,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 20264,
											"end": 20312,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20264,
											"end": 20312,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20264,
											"end": 20312,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 20264,
											"end": 20312,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20264,
											"end": 20312,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 20264,
											"end": 20312,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 20264,
											"end": 20312,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20264,
											"end": 20312,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 20264,
											"end": 20312,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 20264,
											"end": 20312,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20264,
											"end": 20312,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20264,
											"end": 20312,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20264,
											"end": 20312,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 20264,
											"end": 20312,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 20264,
											"end": 20312,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20264,
											"end": 20312,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20264,
											"end": 20312,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 20264,
											"end": 20312,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 20264,
											"end": 20312,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 20264,
											"end": 20312,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20264,
											"end": 20312,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 20264,
											"end": 20312,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 20264,
											"end": 20312,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20264,
											"end": 20312,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 20264,
											"end": 20312,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20264,
											"end": 20312,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20264,
											"end": 20312,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 20264,
											"end": 20312,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 20264,
											"end": 20312,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20264,
											"end": 20312,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 20264,
											"end": 20312,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 20264,
											"end": 20312,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20264,
											"end": 20312,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20264,
											"end": 20312,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20264,
											"end": 20312,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20264,
											"end": 20312,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20233,
											"end": 20520,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 20233,
											"end": 20520,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20233,
											"end": 20520,
											"name": "tag",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 20233,
											"end": 20520,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 20361,
											"end": 20373,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 20361,
											"end": 20373,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20361,
											"end": 20373,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20343,
											"end": 20358,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20361,
											"end": 20373,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20361,
											"end": 20373,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20361,
											"end": 20373,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20361,
											"end": 20367,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 20361,
											"end": 20373,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 20361,
											"end": 20373,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20361,
											"end": 20373,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20361,
											"end": 20373,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20361,
											"end": 20373,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20361,
											"end": 20373,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20361,
											"end": 20373,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 20361,
											"end": 20382,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 20361,
											"end": 20382,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20361,
											"end": 20382,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 20396,
											"end": 20401,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 20396,
											"end": 20401,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20396,
											"end": 20401,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 20396,
											"end": 20444,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 20396,
											"end": 20444,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "17D57599"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 20396,
											"end": 20444,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20396,
											"end": 20444,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20396,
											"end": 20444,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20396,
											"end": 20444,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20396,
											"end": 20444,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4201,
											"end": 4235,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 4201,
											"end": 4235,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4201,
											"end": 4235,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 4201,
											"end": 4235,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 20361,
											"end": 20382,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 20361,
											"end": 20382,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4251,
											"end": 4269,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 4251,
											"end": 4269,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4251,
											"end": 4269,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4244,
											"end": 4287,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4244,
											"end": 4287,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4244,
											"end": 4287,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 20440,
											"end": 20443,
											"name": "PUSH",
											"source": 0,
											"value": "12C"
										},
										{
											"begin": 4303,
											"end": 4321,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 4303,
											"end": 4321,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4303,
											"end": 4321,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4296,
											"end": 4330,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 20361,
											"end": 20382,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 20396,
											"end": 20401,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20396,
											"end": 20401,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20396,
											"end": 20410,
											"name": "PUSH",
											"source": 0,
											"value": "BEABACC8"
										},
										{
											"begin": 20396,
											"end": 20410,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4136,
											"end": 4154,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 4136,
											"end": 4154,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 20396,
											"end": 20444,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20396,
											"end": 20444,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20396,
											"end": 20444,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20396,
											"end": 20444,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20396,
											"end": 20444,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 20396,
											"end": 20444,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 20396,
											"end": 20444,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20396,
											"end": 20444,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20396,
											"end": 20444,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 20396,
											"end": 20444,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20396,
											"end": 20444,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 20396,
											"end": 20444,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 20396,
											"end": 20444,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20396,
											"end": 20444,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 20396,
											"end": 20444,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 20396,
											"end": 20444,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20396,
											"end": 20444,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20396,
											"end": 20444,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20396,
											"end": 20444,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 20396,
											"end": 20444,
											"name": "tag",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 20396,
											"end": 20444,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20396,
											"end": 20444,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20396,
											"end": 20444,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 20396,
											"end": 20444,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 20396,
											"end": 20444,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 20396,
											"end": 20444,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20396,
											"end": 20444,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 20396,
											"end": 20444,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 20396,
											"end": 20444,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20396,
											"end": 20444,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 20396,
											"end": 20444,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20396,
											"end": 20444,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20396,
											"end": 20444,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 20396,
											"end": 20444,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 20396,
											"end": 20444,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20396,
											"end": 20444,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 20396,
											"end": 20444,
											"name": "tag",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 20396,
											"end": 20444,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 20458,
											"end": 20463,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 20458,
											"end": 20463,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20458,
											"end": 20463,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 20479,
											"end": 20494,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 20479,
											"end": 20494,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20479,
											"end": 20494,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20458,
											"end": 20463,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20479,
											"end": 20494,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20479,
											"end": 20494,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20479,
											"end": 20494,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20479,
											"end": 20485,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 20479,
											"end": 20494,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 20479,
											"end": 20494,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20479,
											"end": 20494,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20479,
											"end": 20494,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20479,
											"end": 20494,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20479,
											"end": 20494,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20479,
											"end": 20494,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 20458,
											"end": 20463,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 20479,
											"end": 20503,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20479,
											"end": 20503,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 20458,
											"end": 20509,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20458,
											"end": 20509,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "17D57599"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 20458,
											"end": 20509,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20458,
											"end": 20509,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4219,
											"end": 4234,
											"name": "DUP11",
											"source": 1
										},
										{
											"begin": 4219,
											"end": 4234,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4219,
											"end": 4234,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 20458,
											"end": 20509,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 20458,
											"end": 20509,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20458,
											"end": 20509,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4201,
											"end": 4235,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 4201,
											"end": 4235,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4201,
											"end": 4235,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 4201,
											"end": 4235,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 20479,
											"end": 20503,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20479,
											"end": 20503,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4251,
											"end": 4269,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 4251,
											"end": 4269,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4251,
											"end": 4269,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4244,
											"end": 4287,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 20505,
											"end": 20508,
											"name": "PUSH",
											"source": 0,
											"value": "C8"
										},
										{
											"begin": 4303,
											"end": 4321,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 4303,
											"end": 4321,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4303,
											"end": 4321,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4296,
											"end": 4330,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 20458,
											"end": 20463,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20458,
											"end": 20463,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 20458,
											"end": 20472,
											"name": "PUSH",
											"source": 0,
											"value": "BEABACC8"
										},
										{
											"begin": 20458,
											"end": 20472,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4136,
											"end": 4154,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 4136,
											"end": 4154,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 20458,
											"end": 20509,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20458,
											"end": 20509,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20458,
											"end": 20509,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20458,
											"end": 20509,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20458,
											"end": 20509,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 20458,
											"end": 20509,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 20458,
											"end": 20509,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20458,
											"end": 20509,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20458,
											"end": 20509,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 20458,
											"end": 20509,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20458,
											"end": 20509,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 20458,
											"end": 20509,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 20458,
											"end": 20509,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20458,
											"end": 20509,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 20458,
											"end": 20509,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 20458,
											"end": 20509,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20458,
											"end": 20509,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20458,
											"end": 20509,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20458,
											"end": 20509,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 20458,
											"end": 20509,
											"name": "tag",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 20458,
											"end": 20509,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20458,
											"end": 20509,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20458,
											"end": 20509,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 20458,
											"end": 20509,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 20458,
											"end": 20509,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 20458,
											"end": 20509,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20458,
											"end": 20509,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 20458,
											"end": 20509,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 20458,
											"end": 20509,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20458,
											"end": 20509,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 20458,
											"end": 20509,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20458,
											"end": 20509,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20458,
											"end": 20509,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 20458,
											"end": 20509,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 20458,
											"end": 20509,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20458,
											"end": 20509,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 20458,
											"end": 20509,
											"name": "tag",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 20458,
											"end": 20509,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20458,
											"end": 20509,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20458,
											"end": 20509,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20458,
											"end": 20509,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20458,
											"end": 20509,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20329,
											"end": 20520,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20233,
											"end": 20520,
											"name": "tag",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 20233,
											"end": 20520,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 20536,
											"end": 20540,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 20052,
											"end": 20547,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 20052,
											"end": 20547,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20052,
											"end": 20547,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20052,
											"end": 20547,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20052,
											"end": 20547,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20719,
											"end": 20801,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 20719,
											"end": 20801,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19072,
											"end": 19082,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 19065,
											"end": 19083,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19065,
											"end": 19083,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19065,
											"end": 19083,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19065,
											"end": 19083,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19065,
											"end": 19071,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 19065,
											"end": 19083,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 19065,
											"end": 19083,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19065,
											"end": 19083,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19065,
											"end": 19083,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19065,
											"end": 19083,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 19065,
											"end": 19094,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 19065,
											"end": 19094,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19065,
											"end": 19094,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 19065,
											"end": 19094,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19065,
											"end": 19094,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 19065,
											"end": 19094,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 19065,
											"end": 19094,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 19057,
											"end": 19095,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 19057,
											"end": 19095,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 19057,
											"end": 19095,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19057,
											"end": 19095,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19057,
											"end": 19095,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 19057,
											"end": 19095,
											"name": "tag",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 19057,
											"end": 19095,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20775,
											"end": 20781,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 20775,
											"end": 20794,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20775,
											"end": 20794,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "100"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 20775,
											"end": 20794,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20784,
											"end": 20794,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 20775,
											"end": 20794,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 20775,
											"end": 20794,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 20775,
											"end": 20794,
											"modifierDepth": 1,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 20775,
											"end": 20794,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20775,
											"end": 20794,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 20719,
											"end": 20801,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 404,
											"end": 690,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 404,
											"end": 690,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 463,
											"end": 469,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 516,
											"end": 518,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 504,
											"end": 513,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 495,
											"end": 502,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 491,
											"end": 514,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 487,
											"end": 519,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 484,
											"end": 536,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 484,
											"end": 536,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 484,
											"end": 536,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 532,
											"end": 533,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 529,
											"end": 530,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 522,
											"end": 534,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 484,
											"end": 536,
											"name": "tag",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 484,
											"end": 536,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 558,
											"end": 581,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 558,
											"end": 581,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 610,
											"end": 641,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 610,
											"end": 641,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 600,
											"end": 642,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 600,
											"end": 642,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 590,
											"end": 660,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 590,
											"end": 660,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 656,
											"end": 657,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 653,
											"end": 654,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 646,
											"end": 658,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 590,
											"end": 660,
											"name": "tag",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 590,
											"end": 660,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 679,
											"end": 684,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 404,
											"end": 690,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 404,
											"end": 690,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2831,
											"end": 3063,
											"name": "tag",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 2831,
											"end": 3063,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2870,
											"end": 2873,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2891,
											"end": 2908,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2891,
											"end": 2908,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2891,
											"end": 2908,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2888,
											"end": 3028,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 2888,
											"end": 3028,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2950,
											"end": 2960,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 2945,
											"end": 2948,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 2941,
											"end": 2961,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 2938,
											"end": 2939,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2931,
											"end": 2962,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2985,
											"end": 2989,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 2982,
											"end": 2983,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2975,
											"end": 2990,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3013,
											"end": 3017,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 3010,
											"end": 3011,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3003,
											"end": 3018,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2888,
											"end": 3028,
											"name": "tag",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 2888,
											"end": 3028,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3055,
											"end": 3056,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 3044,
											"end": 3057,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3044,
											"end": 3057,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2831,
											"end": 3063,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3413,
											"end": 3597,
											"name": "tag",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 3413,
											"end": 3597,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3483,
											"end": 3489,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3536,
											"end": 3538,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3524,
											"end": 3533,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3515,
											"end": 3522,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3511,
											"end": 3534,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3507,
											"end": 3539,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 3504,
											"end": 3556,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3504,
											"end": 3556,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 3504,
											"end": 3556,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3552,
											"end": 3553,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3549,
											"end": 3550,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3542,
											"end": 3554,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3504,
											"end": 3556,
											"name": "tag",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 3504,
											"end": 3556,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3575,
											"end": 3591,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3575,
											"end": 3591,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3413,
											"end": 3597,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3413,
											"end": 3597,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"contracts/tokenplay.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"admins()": "a5de3619",
							"getparent()": "255d45d8",
							"inter()": "f13ad725",
							"join()": "b688a363",
							"parent()": "60f96a8f",
							"random()": "5ec01e4d",
							"staker(address)": "82e4eda4",
							"tokenId()": "17d70f7c"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_ERC20address\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"admins\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getparent\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"inter\",\"outputs\":[{\"internalType\":\"contract InterfaceERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"join\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"parent\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"random\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"staker\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenid\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"referrer\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"setreferrer\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"activeUser\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenId\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/tokenplay.sol\":\"Tokenplay\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/tokenplay.sol\":{\"keccak256\":\"0xc51203f5a3b51abfdd040e607acf94e478345f1b943b8a21e8633c7956581e73\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://aa1bc6a0aac2c45edfd942dfd39bffba36f9ee6e3522c65c1755891267926394\",\"dweb:/ipfs/QmeJh4iBomTSqbRnFRfim6cQexjAHk57rwmDpTf5L2PawM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 798,
								"contract": "contracts/tokenplay.sol:Tokenplay",
								"label": "admins",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 801,
								"contract": "contracts/tokenplay.sol:Tokenplay",
								"label": "count",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 803,
								"contract": "contracts/tokenplay.sol:Tokenplay",
								"label": "sync",
								"offset": 0,
								"slot": "2",
								"type": "t_bool"
							},
							{
								"astId": 805,
								"contract": "contracts/tokenplay.sol:Tokenplay",
								"label": "parent",
								"offset": 1,
								"slot": "2",
								"type": "t_address"
							},
							{
								"astId": 807,
								"contract": "contracts/tokenplay.sol:Tokenplay",
								"label": "random",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							},
							{
								"astId": 810,
								"contract": "contracts/tokenplay.sol:Tokenplay",
								"label": "inter",
								"offset": 0,
								"slot": "4",
								"type": "t_contract(InterfaceERC20)795"
							},
							{
								"astId": 815,
								"contract": "contracts/tokenplay.sol:Tokenplay",
								"label": "staker",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_struct(Staker)824_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_contract(InterfaceERC20)795": {
								"encoding": "inplace",
								"label": "contract InterfaceERC20",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_struct(Staker)824_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct Tokenplay.Staker)",
								"numberOfBytes": "32",
								"value": "t_struct(Staker)824_storage"
							},
							"t_struct(Staker)824_storage": {
								"encoding": "inplace",
								"label": "struct Tokenplay.Staker",
								"members": [
									{
										"astId": 817,
										"contract": "contracts/tokenplay.sol:Tokenplay",
										"label": "tokenid",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 819,
										"contract": "contracts/tokenplay.sol:Tokenplay",
										"label": "referrer",
										"offset": 0,
										"slot": "1",
										"type": "t_address"
									},
									{
										"astId": 821,
										"contract": "contracts/tokenplay.sol:Tokenplay",
										"label": "setreferrer",
										"offset": 20,
										"slot": "1",
										"type": "t_bool"
									},
									{
										"astId": 823,
										"contract": "contracts/tokenplay.sol:Tokenplay",
										"label": "activeUser",
										"offset": 21,
										"slot": "1",
										"type": "t_bool"
									}
								],
								"numberOfBytes": "64"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"tokenFunctions": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "admins",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "findBalance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "mint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/tokenplay.sol\":17291:17798  contract tokenFunctions is ERC20 {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/tokenplay.sol\":17358:17435  constructor() ERC20(\"CURRENCY\", \"MATIC\") {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"contracts/tokenplay.sol\":6361:6474  constructor(string memory name_, string memory symbol_) {... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x08\n  dup2\n  mstore\n  0x20\n  add\n  shl(0xc0, 0x43555252454e4359)\n  dup2\n  mstore\n  pop\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x05\n  dup2\n  mstore\n  0x20\n  add\n  shl(0xd8, 0x4d41544943)\n  dup2\n  mstore\n  pop\n    /* \"contracts/tokenplay.sol\":6435:6440  name_ */\n  dup2\n    /* \"contracts/tokenplay.sol\":6427:6432  _name */\n  0x03\n    /* \"contracts/tokenplay.sol\":6427:6440  _name = name_ */\n  swap1\n  dup2\n  tag_5\n  swap2\n  swap1\n  tag_6\n  jump\t// in\ntag_5:\n  pop\n    /* \"contracts/tokenplay.sol\":6450:6457  _symbol */\n  0x04\n    /* \"contracts/tokenplay.sol\":6450:6467  _symbol = symbol_ */\n  tag_7\n    /* \"contracts/tokenplay.sol\":6460:6467  symbol_ */\n  dup3\n    /* \"contracts/tokenplay.sol\":6450:6457  _symbol */\n  dup3\n    /* \"contracts/tokenplay.sol\":6450:6467  _symbol = symbol_ */\n  tag_6\n  jump\t// in\ntag_7:\n  pop\n  pop\n    /* \"contracts/tokenplay.sol\":17409:17415  admins */\n  0x05\n    /* \"contracts/tokenplay.sol\":17409:17428  admins = msg.sender */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n    /* \"contracts/tokenplay.sol\":17418:17428  msg.sender */\n  caller\n    /* \"contracts/tokenplay.sol\":17409:17428  admins = msg.sender */\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/tokenplay.sol\":17291:17798  contract tokenFunctions is ERC20 {... */\n  jump(tag_15)\n    /* \"#utility.yul\":14:141   */\ntag_10:\n    /* \"#utility.yul\":75:85   */\n  0x4e487b71\n    /* \"#utility.yul\":70:73   */\n  0xe0\n    /* \"#utility.yul\":66:86   */\n  shl\n    /* \"#utility.yul\":63:64   */\n  0x00\n    /* \"#utility.yul\":56:87   */\n  mstore\n    /* \"#utility.yul\":106:110   */\n  0x41\n    /* \"#utility.yul\":103:104   */\n  0x04\n    /* \"#utility.yul\":96:111   */\n  mstore\n    /* \"#utility.yul\":130:134   */\n  0x24\n    /* \"#utility.yul\":127:128   */\n  0x00\n    /* \"#utility.yul\":120:135   */\n  revert\n    /* \"#utility.yul\":146:526   */\ntag_11:\n    /* \"#utility.yul\":225:226   */\n  0x01\n    /* \"#utility.yul\":221:233   */\n  dup2\n  dup2\n  shr\n  swap1\n    /* \"#utility.yul\":268:280   */\n  dup3\n  and\n  dup1\n    /* \"#utility.yul\":289:350   */\n  tag_18\n  jumpi\n    /* \"#utility.yul\":343:347   */\n  0x7f\n    /* \"#utility.yul\":335:341   */\n  dup3\n    /* \"#utility.yul\":331:348   */\n  and\n    /* \"#utility.yul\":321:348   */\n  swap2\n  pop\n    /* \"#utility.yul\":289:350   */\ntag_18:\n    /* \"#utility.yul\":396:398   */\n  0x20\n    /* \"#utility.yul\":388:394   */\n  dup3\n    /* \"#utility.yul\":385:399   */\n  lt\n    /* \"#utility.yul\":365:383   */\n  dup2\n    /* \"#utility.yul\":362:400   */\n  sub\n    /* \"#utility.yul\":359:520   */\n  tag_19\n  jumpi\n    /* \"#utility.yul\":442:452   */\n  0x4e487b71\n    /* \"#utility.yul\":437:440   */\n  0xe0\n    /* \"#utility.yul\":433:453   */\n  shl\n    /* \"#utility.yul\":430:431   */\n  0x00\n    /* \"#utility.yul\":423:454   */\n  mstore\n    /* \"#utility.yul\":477:481   */\n  0x22\n    /* \"#utility.yul\":474:475   */\n  0x04\n    /* \"#utility.yul\":467:482   */\n  mstore\n    /* \"#utility.yul\":505:509   */\n  0x24\n    /* \"#utility.yul\":502:503   */\n  0x00\n    /* \"#utility.yul\":495:510   */\n  revert\n    /* \"#utility.yul\":359:520   */\ntag_19:\n  pop\n    /* \"#utility.yul\":146:526   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":657:1202   */\ntag_13:\n    /* \"#utility.yul\":759:761   */\n  0x1f\n    /* \"#utility.yul\":754:757   */\n  dup3\n    /* \"#utility.yul\":751:762   */\n  gt\n    /* \"#utility.yul\":748:1196   */\n  iszero\n  tag_22\n  jumpi\n    /* \"#utility.yul\":795:796   */\n  0x00\n    /* \"#utility.yul\":820:825   */\n  dup2\n    /* \"#utility.yul\":816:818   */\n  dup2\n    /* \"#utility.yul\":809:826   */\n  mstore\n    /* \"#utility.yul\":865:869   */\n  0x20\n    /* \"#utility.yul\":861:863   */\n  dup2\n    /* \"#utility.yul\":851:870   */\n  keccak256\n    /* \"#utility.yul\":935:937   */\n  0x1f\n    /* \"#utility.yul\":923:933   */\n  dup6\n    /* \"#utility.yul\":919:938   */\n  add\n    /* \"#utility.yul\":916:917   */\n  0x05\n    /* \"#utility.yul\":912:939   */\n  shr\n    /* \"#utility.yul\":906:910   */\n  dup2\n    /* \"#utility.yul\":902:940   */\n  add\n    /* \"#utility.yul\":971:975   */\n  0x20\n    /* \"#utility.yul\":959:969   */\n  dup7\n    /* \"#utility.yul\":956:976   */\n  lt\n    /* \"#utility.yul\":953:1000   */\n  iszero\n  tag_23\n  jumpi\n  pop\n    /* \"#utility.yul\":994:998   */\n  dup1\n    /* \"#utility.yul\":953:1000   */\ntag_23:\n    /* \"#utility.yul\":1049:1051   */\n  0x1f\n    /* \"#utility.yul\":1044:1047   */\n  dup6\n    /* \"#utility.yul\":1040:1052   */\n  add\n    /* \"#utility.yul\":1037:1038   */\n  0x05\n    /* \"#utility.yul\":1033:1053   */\n  shr\n    /* \"#utility.yul\":1027:1031   */\n  dup3\n    /* \"#utility.yul\":1023:1054   */\n  add\n    /* \"#utility.yul\":1013:1054   */\n  swap2\n  pop\n    /* \"#utility.yul\":1104:1186   */\ntag_24:\n    /* \"#utility.yul\":1122:1124   */\n  dup2\n    /* \"#utility.yul\":1115:1120   */\n  dup2\n    /* \"#utility.yul\":1112:1125   */\n  lt\n    /* \"#utility.yul\":1104:1186   */\n  iszero\n  tag_26\n  jumpi\n    /* \"#utility.yul\":1167:1184   */\n  dup3\n  dup2\n  sstore\n    /* \"#utility.yul\":1148:1149   */\n  0x01\n    /* \"#utility.yul\":1137:1150   */\n  add\n    /* \"#utility.yul\":1104:1186   */\n  jump(tag_24)\ntag_26:\n    /* \"#utility.yul\":1108:1111   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":748:1196   */\ntag_22:\n    /* \"#utility.yul\":657:1202   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1378:2730   */\ntag_6:\n    /* \"#utility.yul\":1498:1508   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":1520:1550   */\n  dup2\n  gt\n    /* \"#utility.yul\":1517:1573   */\n  iszero\n  tag_30\n  jumpi\n    /* \"#utility.yul\":1553:1571   */\n  tag_30\n  tag_10\n  jump\t// in\ntag_30:\n    /* \"#utility.yul\":1582:1679   */\n  tag_31\n    /* \"#utility.yul\":1672:1678   */\n  dup2\n    /* \"#utility.yul\":1632:1670   */\n  tag_32\n    /* \"#utility.yul\":1664:1668   */\n  dup5\n    /* \"#utility.yul\":1658:1669   */\n  sload\n    /* \"#utility.yul\":1632:1670   */\n  tag_11\n  jump\t// in\ntag_32:\n    /* \"#utility.yul\":1626:1630   */\n  dup5\n    /* \"#utility.yul\":1582:1679   */\n  tag_13\n  jump\t// in\ntag_31:\n    /* \"#utility.yul\":1734:1738   */\n  0x20\n  dup1\n    /* \"#utility.yul\":1798:1800   */\n  0x1f\n    /* \"#utility.yul\":1787:1801   */\n  dup4\n  gt\n    /* \"#utility.yul\":1815:1816   */\n  0x01\n    /* \"#utility.yul\":1810:2473   */\n  dup2\n  eq\n  tag_34\n  jumpi\n    /* \"#utility.yul\":2517:2518   */\n  0x00\n    /* \"#utility.yul\":2534:2540   */\n  dup5\n    /* \"#utility.yul\":2531:2620   */\n  iszero\n  tag_35\n  jumpi\n  pop\n    /* \"#utility.yul\":2586:2605   */\n  dup6\n  dup4\n  add\n    /* \"#utility.yul\":2580:2606   */\n  mload\n    /* \"#utility.yul\":2531:2620   */\ntag_35:\n  not(0x00)\n    /* \"#utility.yul\":1335:1336   */\n  0x03\n    /* \"#utility.yul\":1331:1342   */\n  dup7\n  swap1\n  shl\n    /* \"#utility.yul\":1327:1351   */\n  shr\n    /* \"#utility.yul\":1323:1352   */\n  not\n    /* \"#utility.yul\":1313:1353   */\n  and\n    /* \"#utility.yul\":1359:1360   */\n  0x01\n    /* \"#utility.yul\":1355:1366   */\n  dup6\n  swap1\n  shl\n    /* \"#utility.yul\":1310:1367   */\n  or\n    /* \"#utility.yul\":2633:2714   */\n  dup6\n  sstore\n    /* \"#utility.yul\":1780:2724   */\n  jump(tag_26)\n    /* \"#utility.yul\":1810:2473   */\ntag_34:\n    /* \"#utility.yul\":604:605   */\n  0x00\n    /* \"#utility.yul\":597:611   */\n  dup6\n  dup2\n  mstore\n    /* \"#utility.yul\":641:645   */\n  0x20\n    /* \"#utility.yul\":628:646   */\n  dup2\n  keccak256\n  not(0x1f)\n    /* \"#utility.yul\":1846:1866   */\n  dup7\n  and\n  swap2\n    /* \"#utility.yul\":1964:2200   */\ntag_38:\n    /* \"#utility.yul\":1978:1985   */\n  dup3\n    /* \"#utility.yul\":1975:1976   */\n  dup2\n    /* \"#utility.yul\":1972:1986   */\n  lt\n    /* \"#utility.yul\":1964:2200   */\n  iszero\n  tag_40\n  jumpi\n    /* \"#utility.yul\":2067:2086   */\n  dup9\n  dup7\n  add\n    /* \"#utility.yul\":2061:2087   */\n  mload\n    /* \"#utility.yul\":2046:2088   */\n  dup3\n  sstore\n    /* \"#utility.yul\":2159:2186   */\n  swap5\n  dup5\n  add\n  swap5\n    /* \"#utility.yul\":2127:2128   */\n  0x01\n    /* \"#utility.yul\":2115:2129   */\n  swap1\n  swap2\n  add\n  swap1\n    /* \"#utility.yul\":1994:2013   */\n  dup5\n  add\n    /* \"#utility.yul\":1964:2200   */\n  jump(tag_38)\ntag_40:\n    /* \"#utility.yul\":1968:1971   */\n  pop\n    /* \"#utility.yul\":2228:2234   */\n  dup6\n    /* \"#utility.yul\":2219:2226   */\n  dup3\n    /* \"#utility.yul\":2216:2235   */\n  lt\n    /* \"#utility.yul\":2213:2414   */\n  iszero\n  tag_41\n  jumpi\n    /* \"#utility.yul\":2289:2308   */\n  dup8\n  dup6\n  add\n    /* \"#utility.yul\":2283:2309   */\n  mload\n  not(0x00)\n    /* \"#utility.yul\":2372:2373   */\n  0x03\n    /* \"#utility.yul\":2368:2382   */\n  dup9\n  swap1\n  shl\n    /* \"#utility.yul\":2384:2387   */\n  0xf8\n    /* \"#utility.yul\":2364:2388   */\n  and\n    /* \"#utility.yul\":2360:2397   */\n  shr\n    /* \"#utility.yul\":2356:2398   */\n  not\n    /* \"#utility.yul\":2341:2399   */\n  and\n    /* \"#utility.yul\":2326:2400   */\n  dup2\n  sstore\n    /* \"#utility.yul\":2213:2414   */\ntag_41:\n  pop\n  pop\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":2460:2461   */\n  0x01\n    /* \"#utility.yul\":2444:2458   */\n  swap1\n  dup2\n  shl\n    /* \"#utility.yul\":2440:2462   */\n  add\n    /* \"#utility.yul\":2427:2463   */\n  swap1\n  sstore\n  pop\n    /* \"#utility.yul\":1378:2730   */\n  jump\t// out\ntag_15:\n    /* \"contracts/tokenplay.sol\":17291:17798  contract tokenFunctions is ERC20 {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/tokenplay.sol\":17291:17798  contract tokenFunctions is ERC20 {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x70a08231\n      gt\n      tag_18\n      jumpi\n      dup1\n      0xa9059cbb\n      gt\n      tag_19\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xbeabacc8\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xcfba4fe0\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_17\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_19:\n      dup1\n      0x70a08231\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xa457c2d7\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xa5de3619\n      eq\n      tag_13\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_18:\n      dup1\n      0x23b872dd\n      gt\n      tag_20\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x39509351\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x6a627842\n      eq\n      tag_9\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_20:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/tokenplay.sol\":6539:6637  function name() public view virtual override returns (string memory) {... */\n    tag_3:\n      tag_21\n      tag_22\n      jump\t// in\n    tag_21:\n      mload(0x40)\n      tag_23\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_23:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/tokenplay.sol\":8825:9022  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_4:\n      tag_25\n      tag_26\n      calldatasize\n      0x04\n      tag_27\n      jump\t// in\n    tag_26:\n      tag_28\n      jump\t// in\n    tag_25:\n      mload(0x40)\n        /* \"#utility.yul\":1169:1183   */\n      swap1\n      iszero\n        /* \"#utility.yul\":1162:1184   */\n      iszero\n        /* \"#utility.yul\":1144:1185   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1132:1134   */\n      0x20\n        /* \"#utility.yul\":1117:1135   */\n      add\n        /* \"contracts/tokenplay.sol\":8825:9022  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n      tag_23\n        /* \"#utility.yul\":1004:1191   */\n      jump\n        /* \"contracts/tokenplay.sol\":7636:7742  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_5:\n        /* \"contracts/tokenplay.sol\":7723:7735  _totalSupply */\n      sload(0x02)\n        /* \"contracts/tokenplay.sol\":7636:7742  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_31:\n      mload(0x40)\n        /* \"#utility.yul\":1342:1367   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":1330:1332   */\n      0x20\n        /* \"#utility.yul\":1315:1333   */\n      add\n        /* \"contracts/tokenplay.sol\":7636:7742  function totalSupply() public view virtual override returns (uint256) {... */\n      tag_23\n        /* \"#utility.yul\":1196:1373   */\n      jump\n        /* \"contracts/tokenplay.sol\":9584:9840  function transferFrom(address from, address to, uint256 amount) public virtual override returns (bool) {... */\n    tag_6:\n      tag_25\n      tag_36\n      calldatasize\n      0x04\n      tag_37\n      jump\t// in\n    tag_36:\n      tag_38\n      jump\t// in\n        /* \"contracts/tokenplay.sol\":7485:7576  function decimals() public view virtual override returns (uint8) {... */\n    tag_7:\n      mload(0x40)\n        /* \"contracts/tokenplay.sol\":7567:7569  18 */\n      0x12\n        /* \"#utility.yul\":1853:1889   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1841:1843   */\n      0x20\n        /* \"#utility.yul\":1826:1844   */\n      add\n        /* \"contracts/tokenplay.sol\":7485:7576  function decimals() public view virtual override returns (uint8) {... */\n      tag_23\n        /* \"#utility.yul\":1711:1895   */\n      jump\n        /* \"contracts/tokenplay.sol\":10235:10469  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_8:\n      tag_25\n      tag_45\n      calldatasize\n      0x04\n      tag_27\n      jump\t// in\n    tag_45:\n      tag_46\n      jump\t// in\n        /* \"contracts/tokenplay.sol\":17441:17539  function mint(address owner) external {... */\n    tag_9:\n      tag_48\n      tag_49\n      calldatasize\n      0x04\n      tag_50\n      jump\t// in\n    tag_49:\n      tag_51\n      jump\t// in\n    tag_48:\n      stop\n        /* \"contracts/tokenplay.sol\":7800:7925  function balanceOf(address account) public view virtual override returns (uint256) {... */\n    tag_10:\n      tag_31\n      tag_53\n      calldatasize\n      0x04\n      tag_50\n      jump\t// in\n    tag_53:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/tokenplay.sol\":7900:7918  _balances[account] */\n      and\n        /* \"contracts/tokenplay.sol\":7874:7881  uint256 */\n      0x00\n        /* \"contracts/tokenplay.sol\":7900:7918  _balances[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"contracts/tokenplay.sol\":7800:7925  function balanceOf(address account) public view virtual override returns (uint256) {... */\n      jump\n        /* \"contracts/tokenplay.sol\":6750:6852  function symbol() public view virtual override returns (string memory) {... */\n    tag_11:\n      tag_21\n      tag_57\n      jump\t// in\n        /* \"contracts/tokenplay.sol\":10956:11383  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_12:\n      tag_25\n      tag_60\n      calldatasize\n      0x04\n      tag_27\n      jump\t// in\n    tag_60:\n      tag_61\n      jump\t// in\n        /* \"contracts/tokenplay.sol\":17330:17351  address public admins */\n    tag_13:\n      sload(0x05)\n      tag_63\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n    tag_63:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":2255:2287   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":2237:2288   */\n      dup2\n      mstore\n        /* \"#utility.yul\":2225:2227   */\n      0x20\n        /* \"#utility.yul\":2210:2228   */\n      add\n        /* \"contracts/tokenplay.sol\":17330:17351  address public admins */\n      tag_23\n        /* \"#utility.yul\":2091:2294   */\n      jump\n        /* \"contracts/tokenplay.sol\":8121:8310  function transfer(address to, uint256 amount) public virtual override returns (bool) {... */\n    tag_14:\n      tag_25\n      tag_68\n      calldatasize\n      0x04\n      tag_27\n      jump\t// in\n    tag_68:\n      tag_69\n      jump\t// in\n        /* \"contracts/tokenplay.sol\":17686:17796  function transfer(address from, address to, uint amount) external {... */\n    tag_15:\n      tag_48\n      tag_72\n      calldatasize\n      0x04\n      tag_37\n      jump\t// in\n    tag_72:\n      tag_73\n      jump\t// in\n        /* \"contracts/tokenplay.sol\":17545:17680  function findBalance(address user) external view returns (uint) {... */\n    tag_16:\n      tag_31\n      tag_75\n      calldatasize\n      0x04\n      tag_50\n      jump\t// in\n    tag_75:\n      tag_76\n      jump\t// in\n        /* \"contracts/tokenplay.sol\":8368:8517  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_17:\n      tag_31\n      tag_79\n      calldatasize\n      0x04\n      tag_80\n      jump\t// in\n    tag_79:\n      tag_81\n      jump\t// in\n        /* \"contracts/tokenplay.sol\":6539:6637  function name() public view virtual override returns (string memory) {... */\n    tag_22:\n        /* \"contracts/tokenplay.sol\":6593:6606  string memory */\n      0x60\n        /* \"contracts/tokenplay.sol\":6625:6630  _name */\n      0x03\n        /* \"contracts/tokenplay.sol\":6618:6630  return _name */\n      dup1\n      sload\n      tag_84\n      swap1\n      tag_85\n      jump\t// in\n    tag_84:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_86\n      swap1\n      tag_85\n      jump\t// in\n    tag_86:\n      dup1\n      iszero\n      tag_87\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_88\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_87)\n    tag_88:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_89:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_89\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_87:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/tokenplay.sol\":6539:6637  function name() public view virtual override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/tokenplay.sol\":8825:9022  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_28:\n        /* \"contracts/tokenplay.sol\":8908:8912  bool */\n      0x00\n        /* \"contracts/tokenplay.sol\":4322:4332  msg.sender */\n      caller\n        /* \"contracts/tokenplay.sol\":8962:8994  _approve(owner, spender, amount) */\n      tag_93\n        /* \"contracts/tokenplay.sol\":4322:4332  msg.sender */\n      dup2\n        /* \"contracts/tokenplay.sol\":8978:8985  spender */\n      dup6\n        /* \"contracts/tokenplay.sol\":8987:8993  amount */\n      dup6\n        /* \"contracts/tokenplay.sol\":8962:8970  _approve */\n      tag_94\n        /* \"contracts/tokenplay.sol\":8962:8994  _approve(owner, spender, amount) */\n      jump\t// in\n    tag_93:\n        /* \"contracts/tokenplay.sol\":9011:9015  true */\n      0x01\n        /* \"contracts/tokenplay.sol\":9004:9015  return true */\n      swap2\n      pop\n      pop\n        /* \"contracts/tokenplay.sol\":8825:9022  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_90:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/tokenplay.sol\":9584:9840  function transferFrom(address from, address to, uint256 amount) public virtual override returns (bool) {... */\n    tag_38:\n        /* \"contracts/tokenplay.sol\":9681:9685  bool */\n      0x00\n        /* \"contracts/tokenplay.sol\":4322:4332  msg.sender */\n      caller\n        /* \"contracts/tokenplay.sol\":9737:9775  _spendAllowance(from, spender, amount) */\n      tag_98\n        /* \"contracts/tokenplay.sol\":9753:9757  from */\n      dup6\n        /* \"contracts/tokenplay.sol\":4322:4332  msg.sender */\n      dup3\n        /* \"contracts/tokenplay.sol\":9768:9774  amount */\n      dup6\n        /* \"contracts/tokenplay.sol\":9737:9752  _spendAllowance */\n      tag_99\n        /* \"contracts/tokenplay.sol\":9737:9775  _spendAllowance(from, spender, amount) */\n      jump\t// in\n    tag_98:\n        /* \"contracts/tokenplay.sol\":9785:9812  _transfer(from, to, amount) */\n      tag_100\n        /* \"contracts/tokenplay.sol\":9795:9799  from */\n      dup6\n        /* \"contracts/tokenplay.sol\":9801:9803  to */\n      dup6\n        /* \"contracts/tokenplay.sol\":9805:9811  amount */\n      dup6\n        /* \"contracts/tokenplay.sol\":9785:9794  _transfer */\n      tag_101\n        /* \"contracts/tokenplay.sol\":9785:9812  _transfer(from, to, amount) */\n      jump\t// in\n    tag_100:\n      pop\n        /* \"contracts/tokenplay.sol\":9829:9833  true */\n      0x01\n      swap5\n        /* \"contracts/tokenplay.sol\":9584:9840  function transferFrom(address from, address to, uint256 amount) public virtual override returns (bool) {... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/tokenplay.sol\":10235:10469  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_46:\n        /* \"contracts/tokenplay.sol\":10323:10327  bool */\n      0x00\n        /* \"contracts/tokenplay.sol\":4322:4332  msg.sender */\n      caller\n        /* \"contracts/tokenplay.sol\":10377:10441  _approve(owner, spender, allowance(owner, spender) + addedValue) */\n      tag_93\n        /* \"contracts/tokenplay.sol\":4322:4332  msg.sender */\n      dup2\n        /* \"contracts/tokenplay.sol\":10393:10400  spender */\n      dup6\n        /* \"contracts/tokenplay.sol\":10430:10440  addedValue */\n      dup6\n        /* \"contracts/tokenplay.sol\":10402:10427  allowance(owner, spender) */\n      tag_106\n        /* \"contracts/tokenplay.sol\":4322:4332  msg.sender */\n      dup4\n        /* \"contracts/tokenplay.sol\":10393:10400  spender */\n      dup4\n        /* \"contracts/tokenplay.sol\":10402:10411  allowance */\n      tag_81\n        /* \"contracts/tokenplay.sol\":10402:10427  allowance(owner, spender) */\n      jump\t// in\n    tag_106:\n        /* \"contracts/tokenplay.sol\":10402:10440  allowance(owner, spender) + addedValue */\n      tag_107\n      swap2\n      swap1\n      tag_108\n      jump\t// in\n    tag_107:\n        /* \"contracts/tokenplay.sol\":10377:10385  _approve */\n      tag_94\n        /* \"contracts/tokenplay.sol\":10377:10441  _approve(owner, spender, allowance(owner, spender) + addedValue) */\n      jump\t// in\n        /* \"contracts/tokenplay.sol\":17441:17539  function mint(address owner) external {... */\n    tag_51:\n        /* \"contracts/tokenplay.sol\":17489:17532  _mint(owner, 70000000 * (10 ** decimals())) */\n      tag_110\n        /* \"contracts/tokenplay.sol\":17495:17500  owner */\n      dup2\n        /* \"contracts/tokenplay.sol\":17514:17530  10 ** decimals() */\n      tag_112\n        /* \"contracts/tokenplay.sol\":7567:7569  18 */\n      0x12\n        /* \"contracts/tokenplay.sol\":17514:17516  10 */\n      0x0a\n        /* \"contracts/tokenplay.sol\":17514:17530  10 ** decimals() */\n      tag_113\n      jump\t// in\n    tag_112:\n        /* \"contracts/tokenplay.sol\":17502:17531  70000000 * (10 ** decimals()) */\n      tag_114\n      swap1\n        /* \"contracts/tokenplay.sol\":17502:17510  70000000 */\n      0x042c1d80\n        /* \"contracts/tokenplay.sol\":17502:17531  70000000 * (10 ** decimals()) */\n      tag_115\n      jump\t// in\n    tag_114:\n        /* \"contracts/tokenplay.sol\":17489:17494  _mint */\n      tag_116\n        /* \"contracts/tokenplay.sol\":17489:17532  _mint(owner, 70000000 * (10 ** decimals())) */\n      jump\t// in\n    tag_110:\n        /* \"contracts/tokenplay.sol\":17441:17539  function mint(address owner) external {... */\n      pop\n      jump\t// out\n        /* \"contracts/tokenplay.sol\":6750:6852  function symbol() public view virtual override returns (string memory) {... */\n    tag_57:\n        /* \"contracts/tokenplay.sol\":6806:6819  string memory */\n      0x60\n        /* \"contracts/tokenplay.sol\":6838:6845  _symbol */\n      0x04\n        /* \"contracts/tokenplay.sol\":6831:6845  return _symbol */\n      dup1\n      sload\n      tag_84\n      swap1\n      tag_85\n      jump\t// in\n        /* \"contracts/tokenplay.sol\":10956:11383  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_61:\n        /* \"contracts/tokenplay.sol\":11049:11053  bool */\n      0x00\n        /* \"contracts/tokenplay.sol\":4322:4332  msg.sender */\n      caller\n        /* \"contracts/tokenplay.sol\":11049:11053  bool */\n      dup2\n        /* \"contracts/tokenplay.sol\":11130:11155  allowance(owner, spender) */\n      tag_126\n        /* \"contracts/tokenplay.sol\":4322:4332  msg.sender */\n      dup3\n        /* \"contracts/tokenplay.sol\":11147:11154  spender */\n      dup7\n        /* \"contracts/tokenplay.sol\":11130:11139  allowance */\n      tag_81\n        /* \"contracts/tokenplay.sol\":11130:11155  allowance(owner, spender) */\n      jump\t// in\n    tag_126:\n        /* \"contracts/tokenplay.sol\":11103:11155  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"contracts/tokenplay.sol\":11193:11208  subtractedValue */\n      dup4\n        /* \"contracts/tokenplay.sol\":11173:11189  currentAllowance */\n      dup2\n        /* \"contracts/tokenplay.sol\":11173:11208  currentAllowance >= subtractedValue */\n      lt\n      iszero\n        /* \"contracts/tokenplay.sol\":11165:11250  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n      tag_127\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4969:4971   */\n      0x20\n        /* \"contracts/tokenplay.sol\":11165:11250  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4951:4972   */\n      mstore\n        /* \"#utility.yul\":5008:5010   */\n      0x25\n        /* \"#utility.yul\":4988:5006   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4981:5011   */\n      mstore\n        /* \"#utility.yul\":5047:5081   */\n      0x45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77\n        /* \"#utility.yul\":5027:5045   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5020:5082   */\n      mstore\n      shl(0xd8, 0x207a65726f)\n        /* \"#utility.yul\":5098:5116   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":5091:5126   */\n      mstore\n        /* \"#utility.yul\":5143:5162   */\n      0x84\n      add\n        /* \"contracts/tokenplay.sol\":11165:11250  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n    tag_128:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_127:\n        /* \"contracts/tokenplay.sol\":11284:11344  _approve(owner, spender, currentAllowance - subtractedValue) */\n      tag_100\n        /* \"contracts/tokenplay.sol\":11293:11298  owner */\n      dup3\n        /* \"contracts/tokenplay.sol\":11300:11307  spender */\n      dup7\n        /* \"contracts/tokenplay.sol\":11328:11343  subtractedValue */\n      dup7\n        /* \"contracts/tokenplay.sol\":11309:11325  currentAllowance */\n      dup5\n        /* \"contracts/tokenplay.sol\":11309:11343  currentAllowance - subtractedValue */\n      sub\n        /* \"contracts/tokenplay.sol\":11284:11292  _approve */\n      tag_94\n        /* \"contracts/tokenplay.sol\":11284:11344  _approve(owner, spender, currentAllowance - subtractedValue) */\n      jump\t// in\n        /* \"contracts/tokenplay.sol\":8121:8310  function transfer(address to, uint256 amount) public virtual override returns (bool) {... */\n    tag_69:\n        /* \"contracts/tokenplay.sol\":8200:8204  bool */\n      0x00\n        /* \"contracts/tokenplay.sol\":4322:4332  msg.sender */\n      caller\n        /* \"contracts/tokenplay.sol\":8254:8282  _transfer(owner, to, amount) */\n      tag_93\n        /* \"contracts/tokenplay.sol\":4322:4332  msg.sender */\n      dup2\n        /* \"contracts/tokenplay.sol\":8271:8273  to */\n      dup6\n        /* \"contracts/tokenplay.sol\":8275:8281  amount */\n      dup6\n        /* \"contracts/tokenplay.sol\":8254:8263  _transfer */\n      tag_101\n        /* \"contracts/tokenplay.sol\":8254:8282  _transfer(owner, to, amount) */\n      jump\t// in\n        /* \"contracts/tokenplay.sol\":17686:17796  function transfer(address from, address to, uint amount) external {... */\n    tag_73:\n        /* \"contracts/tokenplay.sol\":17762:17789  _transfer(from, to, amount) */\n      tag_135\n        /* \"contracts/tokenplay.sol\":17772:17776  from */\n      dup4\n        /* \"contracts/tokenplay.sol\":17778:17780  to */\n      dup4\n        /* \"contracts/tokenplay.sol\":17782:17788  amount */\n      dup4\n        /* \"contracts/tokenplay.sol\":17762:17771  _transfer */\n      tag_101\n        /* \"contracts/tokenplay.sol\":17762:17789  _transfer(from, to, amount) */\n      jump\t// in\n    tag_135:\n        /* \"contracts/tokenplay.sol\":17686:17796  function transfer(address from, address to, uint amount) external {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/tokenplay.sol\":17545:17680  function findBalance(address user) external view returns (uint) {... */\n    tag_76:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/tokenplay.sol\":7900:7918  _balances[account] */\n      dup2\n      and\n        /* \"contracts/tokenplay.sol\":17603:17607  uint */\n      0x00\n        /* \"contracts/tokenplay.sol\":7900:7918  _balances[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n        /* \"contracts/tokenplay.sol\":17603:17607  uint */\n      dup2\n      swap1\n        /* \"contracts/tokenplay.sol\":17634:17649  balanceOf(user) */\n    tag_137:\n        /* \"contracts/tokenplay.sol\":17619:17649  uint balance = balanceOf(user) */\n      swap4\n        /* \"contracts/tokenplay.sol\":17545:17680  function findBalance(address user) external view returns (uint) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/tokenplay.sol\":8368:8517  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_81:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/tokenplay.sol\":8483:8501  _allowances[owner] */\n      swap2\n      dup3\n      and\n        /* \"contracts/tokenplay.sol\":8457:8464  uint256 */\n      0x00\n        /* \"contracts/tokenplay.sol\":8483:8501  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/tokenplay.sol\":8483:8494  _allowances */\n      0x01\n        /* \"contracts/tokenplay.sol\":8483:8501  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/tokenplay.sol\":8483:8510  _allowances[owner][spender] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      swap1\n        /* \"contracts/tokenplay.sol\":8368:8517  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n      jump\t// out\n        /* \"contracts/tokenplay.sol\":14838:15178  function _approve(address owner, address spender, uint256 amount) internal virtual {... */\n    tag_94:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/tokenplay.sol\":14939:14958  owner != address(0) */\n      dup4\n      and\n        /* \"contracts/tokenplay.sol\":14931:14999  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_141\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5375:5377   */\n      0x20\n        /* \"contracts/tokenplay.sol\":14931:14999  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5357:5378   */\n      mstore\n        /* \"#utility.yul\":5414:5416   */\n      0x24\n        /* \"#utility.yul\":5394:5412   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":5387:5417   */\n      mstore\n        /* \"#utility.yul\":5453:5487   */\n      0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464\n        /* \"#utility.yul\":5433:5451   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5426:5488   */\n      mstore\n      shl(0xe0, 0x72657373)\n        /* \"#utility.yul\":5504:5522   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":5497:5531   */\n      mstore\n        /* \"#utility.yul\":5548:5567   */\n      0x84\n      add\n        /* \"contracts/tokenplay.sol\":14931:14999  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_128\n        /* \"#utility.yul\":5173:5573   */\n      jump\n        /* \"contracts/tokenplay.sol\":14931:14999  require(owner != address(0), \"ERC20: approve from the zero address\") */\n    tag_141:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/tokenplay.sol\":15017:15038  spender != address(0) */\n      dup3\n      and\n        /* \"contracts/tokenplay.sol\":15009:15077  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_144\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5780:5782   */\n      0x20\n        /* \"contracts/tokenplay.sol\":15009:15077  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5762:5783   */\n      mstore\n        /* \"#utility.yul\":5819:5821   */\n      0x22\n        /* \"#utility.yul\":5799:5817   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5792:5822   */\n      mstore\n        /* \"#utility.yul\":5858:5892   */\n      0x45524332303a20617070726f766520746f20746865207a65726f206164647265\n        /* \"#utility.yul\":5838:5856   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5831:5893   */\n      mstore\n      shl(0xf0, 0x7373)\n        /* \"#utility.yul\":5909:5927   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":5902:5934   */\n      mstore\n        /* \"#utility.yul\":5951:5970   */\n      0x84\n      add\n        /* \"contracts/tokenplay.sol\":15009:15077  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_128\n        /* \"#utility.yul\":5578:5976   */\n      jump\n        /* \"contracts/tokenplay.sol\":15009:15077  require(spender != address(0), \"ERC20: approve to the zero address\") */\n    tag_144:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/tokenplay.sol\":15088:15106  _allowances[owner] */\n      dup4\n      dup2\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"contracts/tokenplay.sol\":15088:15099  _allowances */\n      0x01\n        /* \"contracts/tokenplay.sol\":15088:15106  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/tokenplay.sol\":15088:15115  _allowances[owner][spender] */\n      swap5\n      dup8\n      and\n      dup1\n      dup5\n      mstore\n      swap5\n      dup3\n      mstore\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"contracts/tokenplay.sol\":15088:15124  _allowances[owner][spender] = amount */\n      dup6\n      swap1\n      sstore\n        /* \"contracts/tokenplay.sol\":15139:15171  Approval(owner, spender, amount) */\n      swap1\n      mload\n        /* \"#utility.yul\":1342:1367   */\n      dup5\n      dup2\n      mstore\n        /* \"contracts/tokenplay.sol\":15139:15171  Approval(owner, spender, amount) */\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      swap2\n        /* \"#utility.yul\":1315:1333   */\n      add\n        /* \"contracts/tokenplay.sol\":15139:15171  Approval(owner, spender, amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/tokenplay.sol\":14838:15178  function _approve(address owner, address spender, uint256 amount) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/tokenplay.sol\":15459:15870  function _spendAllowance(address owner, address spender, uint256 amount) internal virtual {... */\n    tag_99:\n        /* \"contracts/tokenplay.sol\":15559:15583  uint256 currentAllowance */\n      0x00\n        /* \"contracts/tokenplay.sol\":15586:15611  allowance(owner, spender) */\n      tag_149\n        /* \"contracts/tokenplay.sol\":15596:15601  owner */\n      dup5\n        /* \"contracts/tokenplay.sol\":15603:15610  spender */\n      dup5\n        /* \"contracts/tokenplay.sol\":15586:15595  allowance */\n      tag_81\n        /* \"contracts/tokenplay.sol\":15586:15611  allowance(owner, spender) */\n      jump\t// in\n    tag_149:\n        /* \"contracts/tokenplay.sol\":15559:15611  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n      not(0x00)\n        /* \"contracts/tokenplay.sol\":15625:15641  currentAllowance */\n      dup2\n        /* \"contracts/tokenplay.sol\":15625:15662  currentAllowance != type(uint256).max */\n      eq\n        /* \"contracts/tokenplay.sol\":15621:15864  if (currentAllowance != type(uint256).max) {... */\n      tag_154\n      jumpi\n        /* \"contracts/tokenplay.sol\":15706:15712  amount */\n      dup2\n        /* \"contracts/tokenplay.sol\":15686:15702  currentAllowance */\n      dup2\n        /* \"contracts/tokenplay.sol\":15686:15712  currentAllowance >= amount */\n      lt\n      iszero\n        /* \"contracts/tokenplay.sol\":15678:15746  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n      tag_151\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6183:6185   */\n      0x20\n        /* \"contracts/tokenplay.sol\":15678:15746  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6165:6186   */\n      mstore\n        /* \"#utility.yul\":6222:6224   */\n      0x1d\n        /* \"#utility.yul\":6202:6220   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6195:6225   */\n      mstore\n        /* \"#utility.yul\":6261:6292   */\n      0x45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000\n        /* \"#utility.yul\":6241:6259   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6234:6293   */\n      mstore\n        /* \"#utility.yul\":6310:6328   */\n      0x64\n      add\n        /* \"contracts/tokenplay.sol\":15678:15746  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n      tag_128\n        /* \"#utility.yul\":5981:6334   */\n      jump\n        /* \"contracts/tokenplay.sol\":15678:15746  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n    tag_151:\n        /* \"contracts/tokenplay.sol\":15788:15839  _approve(owner, spender, currentAllowance - amount) */\n      tag_154\n        /* \"contracts/tokenplay.sol\":15797:15802  owner */\n      dup5\n        /* \"contracts/tokenplay.sol\":15804:15811  spender */\n      dup5\n        /* \"contracts/tokenplay.sol\":15832:15838  amount */\n      dup5\n        /* \"contracts/tokenplay.sol\":15813:15829  currentAllowance */\n      dup5\n        /* \"contracts/tokenplay.sol\":15813:15838  currentAllowance - amount */\n      sub\n        /* \"contracts/tokenplay.sol\":15788:15796  _approve */\n      tag_94\n        /* \"contracts/tokenplay.sol\":15788:15839  _approve(owner, spender, currentAllowance - amount) */\n      jump\t// in\n    tag_154:\n        /* \"contracts/tokenplay.sol\":15549:15870  {... */\n      pop\n        /* \"contracts/tokenplay.sol\":15459:15870  function _spendAllowance(address owner, address spender, uint256 amount) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/tokenplay.sol\":11837:12625  function _transfer(address from, address to, uint256 amount) internal virtual {... */\n    tag_101:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/tokenplay.sol\":11933:11951  from != address(0) */\n      dup4\n      and\n        /* \"contracts/tokenplay.sol\":11925:11993  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      tag_156\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6541:6543   */\n      0x20\n        /* \"contracts/tokenplay.sol\":11925:11993  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6523:6544   */\n      mstore\n        /* \"#utility.yul\":6580:6582   */\n      0x25\n        /* \"#utility.yul\":6560:6578   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6553:6583   */\n      mstore\n        /* \"#utility.yul\":6619:6653   */\n      0x45524332303a207472616e736665722066726f6d20746865207a65726f206164\n        /* \"#utility.yul\":6599:6617   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6592:6654   */\n      mstore\n      shl(0xd8, 0x6472657373)\n        /* \"#utility.yul\":6670:6688   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":6663:6698   */\n      mstore\n        /* \"#utility.yul\":6715:6734   */\n      0x84\n      add\n        /* \"contracts/tokenplay.sol\":11925:11993  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      tag_128\n        /* \"#utility.yul\":6339:6740   */\n      jump\n        /* \"contracts/tokenplay.sol\":11925:11993  require(from != address(0), \"ERC20: transfer from the zero address\") */\n    tag_156:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/tokenplay.sol\":12011:12027  to != address(0) */\n      dup3\n      and\n        /* \"contracts/tokenplay.sol\":12003:12067  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      tag_159\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6947:6949   */\n      0x20\n        /* \"contracts/tokenplay.sol\":12003:12067  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6929:6950   */\n      mstore\n        /* \"#utility.yul\":6986:6988   */\n      0x23\n        /* \"#utility.yul\":6966:6984   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6959:6989   */\n      mstore\n        /* \"#utility.yul\":7025:7059   */\n      0x45524332303a207472616e7366657220746f20746865207a65726f2061646472\n        /* \"#utility.yul\":7005:7023   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6998:7060   */\n      mstore\n      shl(0xe8, 0x657373)\n        /* \"#utility.yul\":7076:7094   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":7069:7102   */\n      mstore\n        /* \"#utility.yul\":7119:7138   */\n      0x84\n      add\n        /* \"contracts/tokenplay.sol\":12003:12067  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      tag_128\n        /* \"#utility.yul\":6745:7144   */\n      jump\n        /* \"contracts/tokenplay.sol\":12003:12067  require(to != address(0), \"ERC20: transfer to the zero address\") */\n    tag_159:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/tokenplay.sol\":12149:12164  _balances[from] */\n      dup4\n      and\n        /* \"contracts/tokenplay.sol\":12127:12146  uint256 fromBalance */\n      0x00\n        /* \"contracts/tokenplay.sol\":12149:12164  _balances[from] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"contracts/tokenplay.sol\":12182:12203  fromBalance >= amount */\n      dup2\n      dup2\n      lt\n      iszero\n        /* \"contracts/tokenplay.sol\":12174:12246  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      tag_164\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7351:7353   */\n      0x20\n        /* \"contracts/tokenplay.sol\":12174:12246  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7333:7354   */\n      mstore\n        /* \"#utility.yul\":7390:7392   */\n      0x26\n        /* \"#utility.yul\":7370:7388   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7363:7393   */\n      mstore\n        /* \"#utility.yul\":7429:7463   */\n      0x45524332303a207472616e7366657220616d6f756e7420657863656564732062\n        /* \"#utility.yul\":7409:7427   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7402:7464   */\n      mstore\n      shl(0xd0, 0x616c616e6365)\n        /* \"#utility.yul\":7480:7498   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":7473:7509   */\n      mstore\n        /* \"#utility.yul\":7526:7545   */\n      0x84\n      add\n        /* \"contracts/tokenplay.sol\":12174:12246  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      tag_128\n        /* \"#utility.yul\":7149:7551   */\n      jump\n        /* \"contracts/tokenplay.sol\":12174:12246  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n    tag_164:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/tokenplay.sol\":12280:12295  _balances[from] */\n      dup5\n      dup2\n      and\n        /* \"contracts/tokenplay.sol\":12280:12289  _balances */\n      0x00\n        /* \"contracts/tokenplay.sol\":12280:12295  _balances[from] */\n      dup2\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/tokenplay.sol\":12298:12318  fromBalance - amount */\n      dup8\n      dup8\n      sub\n        /* \"contracts/tokenplay.sol\":12280:12318  _balances[from] = fromBalance - amount */\n      swap1\n      sstore\n        /* \"contracts/tokenplay.sol\":12495:12508  _balances[to] */\n      swap4\n      dup8\n      and\n      dup1\n      dup4\n      mstore\n      swap2\n      dup5\n      swap1\n      keccak256\n        /* \"contracts/tokenplay.sol\":12495:12518  _balances[to] += amount */\n      dup1\n      sload\n      dup8\n      add\n      swap1\n      sstore\n        /* \"contracts/tokenplay.sol\":12544:12570  Transfer(from, to, amount) */\n      swap3\n      mload\n        /* \"#utility.yul\":1342:1367   */\n      dup6\n      dup2\n      mstore\n        /* \"contracts/tokenplay.sol\":12495:12508  _balances[to] */\n      swap1\n      swap3\n        /* \"contracts/tokenplay.sol\":12544:12570  Transfer(from, to, amount) */\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap2\n        /* \"#utility.yul\":1315:1333   */\n      add\n        /* \"contracts/tokenplay.sol\":12544:12570  Transfer(from, to, amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/tokenplay.sol\":12581:12618  _afterTokenTransfer(from, to, amount) */\n      tag_154\n        /* \"contracts/tokenplay.sol\":17686:17796  function transfer(address from, address to, uint amount) external {... */\n      jump\n        /* \"contracts/tokenplay.sol\":12901:13436  function _mint(address account, uint256 amount) internal virtual {... */\n    tag_116:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/tokenplay.sol\":12984:13005  account != address(0) */\n      dup3\n      and\n        /* \"contracts/tokenplay.sol\":12976:13041  require(account != address(0), \"ERC20: mint to the zero address\") */\n      tag_171\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7758:7760   */\n      0x20\n        /* \"contracts/tokenplay.sol\":12976:13041  require(account != address(0), \"ERC20: mint to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7740:7761   */\n      mstore\n        /* \"#utility.yul\":7797:7799   */\n      0x1f\n        /* \"#utility.yul\":7777:7795   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7770:7800   */\n      mstore\n        /* \"#utility.yul\":7836:7869   */\n      0x45524332303a206d696e7420746f20746865207a65726f206164647265737300\n        /* \"#utility.yul\":7816:7834   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7809:7870   */\n      mstore\n        /* \"#utility.yul\":7887:7905   */\n      0x64\n      add\n        /* \"contracts/tokenplay.sol\":12976:13041  require(account != address(0), \"ERC20: mint to the zero address\") */\n      tag_128\n        /* \"#utility.yul\":7556:7911   */\n      jump\n        /* \"contracts/tokenplay.sol\":12976:13041  require(account != address(0), \"ERC20: mint to the zero address\") */\n    tag_171:\n        /* \"contracts/tokenplay.sol\":13128:13134  amount */\n      dup1\n        /* \"contracts/tokenplay.sol\":13112:13124  _totalSupply */\n      0x02\n      0x00\n        /* \"contracts/tokenplay.sol\":13112:13134  _totalSupply += amount */\n      dup3\n      dup3\n      sload\n      tag_175\n      swap2\n      swap1\n      tag_108\n      jump\t// in\n    tag_175:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/tokenplay.sol\":13280:13298  _balances[account] */\n      dup3\n      and\n        /* \"contracts/tokenplay.sol\":13280:13289  _balances */\n      0x00\n        /* \"contracts/tokenplay.sol\":13280:13298  _balances[account] */\n      dup2\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/tokenplay.sol\":13280:13308  _balances[account] += amount */\n      dup1\n      sload\n      dup7\n      add\n      swap1\n      sstore\n        /* \"contracts/tokenplay.sol\":13333:13370  Transfer(address(0), account, amount) */\n      mload\n        /* \"#utility.yul\":1342:1367   */\n      dup5\n      dup2\n      mstore\n        /* \"contracts/tokenplay.sol\":13333:13370  Transfer(address(0), account, amount) */\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap2\n        /* \"#utility.yul\":1315:1333   */\n      add\n        /* \"contracts/tokenplay.sol\":13333:13370  Transfer(address(0), account, amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/tokenplay.sol\":12901:13436  function _mint(address account, uint256 amount) internal virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14:562   */\n    tag_24:\n        /* \"#utility.yul\":126:130   */\n      0x00\n        /* \"#utility.yul\":155:157   */\n      0x20\n        /* \"#utility.yul\":184:186   */\n      dup1\n        /* \"#utility.yul\":173:182   */\n      dup4\n        /* \"#utility.yul\":166:187   */\n      mstore\n        /* \"#utility.yul\":216:222   */\n      dup4\n        /* \"#utility.yul\":210:223   */\n      mload\n        /* \"#utility.yul\":259:265   */\n      dup1\n        /* \"#utility.yul\":254:256   */\n      dup3\n        /* \"#utility.yul\":243:252   */\n      dup6\n        /* \"#utility.yul\":239:257   */\n      add\n        /* \"#utility.yul\":232:266   */\n      mstore\n        /* \"#utility.yul\":284:285   */\n      0x00\n        /* \"#utility.yul\":294:434   */\n    tag_186:\n        /* \"#utility.yul\":308:314   */\n      dup2\n        /* \"#utility.yul\":305:306   */\n      dup2\n        /* \"#utility.yul\":302:315   */\n      lt\n        /* \"#utility.yul\":294:434   */\n      iszero\n      tag_188\n      jumpi\n        /* \"#utility.yul\":403:417   */\n      dup6\n      dup2\n      add\n        /* \"#utility.yul\":399:422   */\n      dup4\n      add\n        /* \"#utility.yul\":393:423   */\n      mload\n        /* \"#utility.yul\":369:386   */\n      dup6\n      dup3\n      add\n        /* \"#utility.yul\":388:390   */\n      0x40\n        /* \"#utility.yul\":365:391   */\n      add\n        /* \"#utility.yul\":358:424   */\n      mstore\n        /* \"#utility.yul\":323:333   */\n      dup3\n      add\n        /* \"#utility.yul\":294:434   */\n      jump(tag_186)\n    tag_188:\n        /* \"#utility.yul\":298:301   */\n      pop\n        /* \"#utility.yul\":483:484   */\n      0x00\n        /* \"#utility.yul\":478:480   */\n      0x40\n        /* \"#utility.yul\":469:475   */\n      dup3\n        /* \"#utility.yul\":458:467   */\n      dup7\n        /* \"#utility.yul\":454:476   */\n      add\n        /* \"#utility.yul\":450:481   */\n      add\n        /* \"#utility.yul\":443:485   */\n      mstore\n        /* \"#utility.yul\":553:555   */\n      0x40\n        /* \"#utility.yul\":546:548   */\n      0x1f\n        /* \"#utility.yul\":542:549   */\n      not\n        /* \"#utility.yul\":537:539   */\n      0x1f\n        /* \"#utility.yul\":529:535   */\n      dup4\n        /* \"#utility.yul\":525:540   */\n      add\n        /* \"#utility.yul\":521:550   */\n      and\n        /* \"#utility.yul\":510:519   */\n      dup6\n        /* \"#utility.yul\":506:551   */\n      add\n        /* \"#utility.yul\":502:556   */\n      add\n        /* \"#utility.yul\":494:556   */\n      swap3\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":14:562   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":567:740   */\n    tag_180:\n        /* \"#utility.yul\":635:655   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":684:715   */\n      dup2\n      and\n        /* \"#utility.yul\":674:716   */\n      dup2\n      eq\n        /* \"#utility.yul\":664:734   */\n      tag_190\n      jumpi\n        /* \"#utility.yul\":730:731   */\n      0x00\n        /* \"#utility.yul\":727:728   */\n      dup1\n        /* \"#utility.yul\":720:732   */\n      revert\n        /* \"#utility.yul\":664:734   */\n    tag_190:\n        /* \"#utility.yul\":567:740   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":745:999   */\n    tag_27:\n        /* \"#utility.yul\":813:819   */\n      0x00\n        /* \"#utility.yul\":821:827   */\n      dup1\n        /* \"#utility.yul\":874:876   */\n      0x40\n        /* \"#utility.yul\":862:871   */\n      dup4\n        /* \"#utility.yul\":853:860   */\n      dup6\n        /* \"#utility.yul\":849:872   */\n      sub\n        /* \"#utility.yul\":845:877   */\n      slt\n        /* \"#utility.yul\":842:894   */\n      iszero\n      tag_192\n      jumpi\n        /* \"#utility.yul\":890:891   */\n      0x00\n        /* \"#utility.yul\":887:888   */\n      dup1\n        /* \"#utility.yul\":880:892   */\n      revert\n        /* \"#utility.yul\":842:894   */\n    tag_192:\n        /* \"#utility.yul\":913:942   */\n      tag_193\n        /* \"#utility.yul\":932:941   */\n      dup4\n        /* \"#utility.yul\":913:942   */\n      tag_180\n      jump\t// in\n    tag_193:\n        /* \"#utility.yul\":903:942   */\n      swap5\n        /* \"#utility.yul\":989:991   */\n      0x20\n        /* \"#utility.yul\":974:992   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":961:993   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":745:999   */\n      jump\t// out\n        /* \"#utility.yul\":1378:1706   */\n    tag_37:\n        /* \"#utility.yul\":1455:1461   */\n      0x00\n        /* \"#utility.yul\":1463:1469   */\n      dup1\n        /* \"#utility.yul\":1471:1477   */\n      0x00\n        /* \"#utility.yul\":1524:1526   */\n      0x60\n        /* \"#utility.yul\":1512:1521   */\n      dup5\n        /* \"#utility.yul\":1503:1510   */\n      dup7\n        /* \"#utility.yul\":1499:1522   */\n      sub\n        /* \"#utility.yul\":1495:1527   */\n      slt\n        /* \"#utility.yul\":1492:1544   */\n      iszero\n      tag_197\n      jumpi\n        /* \"#utility.yul\":1540:1541   */\n      0x00\n        /* \"#utility.yul\":1537:1538   */\n      dup1\n        /* \"#utility.yul\":1530:1542   */\n      revert\n        /* \"#utility.yul\":1492:1544   */\n    tag_197:\n        /* \"#utility.yul\":1563:1592   */\n      tag_198\n        /* \"#utility.yul\":1582:1591   */\n      dup5\n        /* \"#utility.yul\":1563:1592   */\n      tag_180\n      jump\t// in\n    tag_198:\n        /* \"#utility.yul\":1553:1592   */\n      swap3\n      pop\n        /* \"#utility.yul\":1611:1649   */\n      tag_199\n        /* \"#utility.yul\":1645:1647   */\n      0x20\n        /* \"#utility.yul\":1634:1643   */\n      dup6\n        /* \"#utility.yul\":1630:1648   */\n      add\n        /* \"#utility.yul\":1611:1649   */\n      tag_180\n      jump\t// in\n    tag_199:\n        /* \"#utility.yul\":1601:1649   */\n      swap2\n      pop\n        /* \"#utility.yul\":1696:1698   */\n      0x40\n        /* \"#utility.yul\":1685:1694   */\n      dup5\n        /* \"#utility.yul\":1681:1699   */\n      add\n        /* \"#utility.yul\":1668:1700   */\n      calldataload\n        /* \"#utility.yul\":1658:1700   */\n      swap1\n      pop\n        /* \"#utility.yul\":1378:1706   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":1900:2086   */\n    tag_50:\n        /* \"#utility.yul\":1959:1965   */\n      0x00\n        /* \"#utility.yul\":2012:2014   */\n      0x20\n        /* \"#utility.yul\":2000:2009   */\n      dup3\n        /* \"#utility.yul\":1991:1998   */\n      dup5\n        /* \"#utility.yul\":1987:2010   */\n      sub\n        /* \"#utility.yul\":1983:2015   */\n      slt\n        /* \"#utility.yul\":1980:2032   */\n      iszero\n      tag_202\n      jumpi\n        /* \"#utility.yul\":2028:2029   */\n      0x00\n        /* \"#utility.yul\":2025:2026   */\n      dup1\n        /* \"#utility.yul\":2018:2030   */\n      revert\n        /* \"#utility.yul\":1980:2032   */\n    tag_202:\n        /* \"#utility.yul\":2051:2080   */\n      tag_137\n        /* \"#utility.yul\":2070:2079   */\n      dup3\n        /* \"#utility.yul\":2051:2080   */\n      tag_180\n      jump\t// in\n        /* \"#utility.yul\":2299:2559   */\n    tag_80:\n        /* \"#utility.yul\":2367:2373   */\n      0x00\n        /* \"#utility.yul\":2375:2381   */\n      dup1\n        /* \"#utility.yul\":2428:2430   */\n      0x40\n        /* \"#utility.yul\":2416:2425   */\n      dup4\n        /* \"#utility.yul\":2407:2414   */\n      dup6\n        /* \"#utility.yul\":2403:2426   */\n      sub\n        /* \"#utility.yul\":2399:2431   */\n      slt\n        /* \"#utility.yul\":2396:2448   */\n      iszero\n      tag_206\n      jumpi\n        /* \"#utility.yul\":2444:2445   */\n      0x00\n        /* \"#utility.yul\":2441:2442   */\n      dup1\n        /* \"#utility.yul\":2434:2446   */\n      revert\n        /* \"#utility.yul\":2396:2448   */\n    tag_206:\n        /* \"#utility.yul\":2467:2496   */\n      tag_207\n        /* \"#utility.yul\":2486:2495   */\n      dup4\n        /* \"#utility.yul\":2467:2496   */\n      tag_180\n      jump\t// in\n    tag_207:\n        /* \"#utility.yul\":2457:2496   */\n      swap2\n      pop\n        /* \"#utility.yul\":2515:2553   */\n      tag_208\n        /* \"#utility.yul\":2549:2551   */\n      0x20\n        /* \"#utility.yul\":2538:2547   */\n      dup5\n        /* \"#utility.yul\":2534:2552   */\n      add\n        /* \"#utility.yul\":2515:2553   */\n      tag_180\n      jump\t// in\n    tag_208:\n        /* \"#utility.yul\":2505:2553   */\n      swap1\n      pop\n        /* \"#utility.yul\":2299:2559   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2564:2944   */\n    tag_85:\n        /* \"#utility.yul\":2643:2644   */\n      0x01\n        /* \"#utility.yul\":2639:2651   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":2686:2698   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":2707:2768   */\n      tag_210\n      jumpi\n        /* \"#utility.yul\":2761:2765   */\n      0x7f\n        /* \"#utility.yul\":2753:2759   */\n      dup3\n        /* \"#utility.yul\":2749:2766   */\n      and\n        /* \"#utility.yul\":2739:2766   */\n      swap2\n      pop\n        /* \"#utility.yul\":2707:2768   */\n    tag_210:\n        /* \"#utility.yul\":2814:2816   */\n      0x20\n        /* \"#utility.yul\":2806:2812   */\n      dup3\n        /* \"#utility.yul\":2803:2817   */\n      lt\n        /* \"#utility.yul\":2783:2801   */\n      dup2\n        /* \"#utility.yul\":2780:2818   */\n      sub\n        /* \"#utility.yul\":2777:2938   */\n      tag_211\n      jumpi\n        /* \"#utility.yul\":2860:2870   */\n      0x4e487b71\n        /* \"#utility.yul\":2855:2858   */\n      0xe0\n        /* \"#utility.yul\":2851:2871   */\n      shl\n        /* \"#utility.yul\":2848:2849   */\n      0x00\n        /* \"#utility.yul\":2841:2872   */\n      mstore\n        /* \"#utility.yul\":2895:2899   */\n      0x22\n        /* \"#utility.yul\":2892:2893   */\n      0x04\n        /* \"#utility.yul\":2885:2900   */\n      mstore\n        /* \"#utility.yul\":2923:2927   */\n      0x24\n        /* \"#utility.yul\":2920:2921   */\n      0x00\n        /* \"#utility.yul\":2913:2928   */\n      revert\n        /* \"#utility.yul\":2777:2938   */\n    tag_211:\n      pop\n        /* \"#utility.yul\":2564:2944   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2949:3076   */\n    tag_181:\n        /* \"#utility.yul\":3010:3020   */\n      0x4e487b71\n        /* \"#utility.yul\":3005:3008   */\n      0xe0\n        /* \"#utility.yul\":3001:3021   */\n      shl\n        /* \"#utility.yul\":2998:2999   */\n      0x00\n        /* \"#utility.yul\":2991:3022   */\n      mstore\n        /* \"#utility.yul\":3041:3045   */\n      0x11\n        /* \"#utility.yul\":3038:3039   */\n      0x04\n        /* \"#utility.yul\":3031:3046   */\n      mstore\n        /* \"#utility.yul\":3065:3069   */\n      0x24\n        /* \"#utility.yul\":3062:3063   */\n      0x00\n        /* \"#utility.yul\":3055:3070   */\n      revert\n        /* \"#utility.yul\":3081:3206   */\n    tag_108:\n        /* \"#utility.yul\":3146:3155   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":3167:3177   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":3164:3200   */\n      iszero\n      tag_90\n      jumpi\n        /* \"#utility.yul\":3180:3198   */\n      tag_90\n      tag_181\n      jump\t// in\n        /* \"#utility.yul\":3211:3633   */\n    tag_182:\n        /* \"#utility.yul\":3300:3301   */\n      0x01\n        /* \"#utility.yul\":3343:3348   */\n      dup2\n        /* \"#utility.yul\":3300:3301   */\n      dup2\n        /* \"#utility.yul\":3357:3627   */\n    tag_217:\n        /* \"#utility.yul\":3378:3385   */\n      dup1\n        /* \"#utility.yul\":3368:3376   */\n      dup6\n        /* \"#utility.yul\":3365:3386   */\n      gt\n        /* \"#utility.yul\":3357:3627   */\n      iszero\n      tag_219\n      jumpi\n        /* \"#utility.yul\":3437:3441   */\n      dup2\n        /* \"#utility.yul\":3433:3434   */\n      0x00\n        /* \"#utility.yul\":3429:3435   */\n      not\n        /* \"#utility.yul\":3425:3442   */\n      div\n        /* \"#utility.yul\":3419:3423   */\n      dup3\n        /* \"#utility.yul\":3416:3443   */\n      gt\n        /* \"#utility.yul\":3413:3466   */\n      iszero\n      tag_221\n      jumpi\n        /* \"#utility.yul\":3446:3464   */\n      tag_221\n      tag_181\n      jump\t// in\n    tag_221:\n        /* \"#utility.yul\":3496:3503   */\n      dup1\n        /* \"#utility.yul\":3486:3494   */\n      dup6\n        /* \"#utility.yul\":3482:3504   */\n      and\n        /* \"#utility.yul\":3479:3534   */\n      iszero\n      tag_222\n      jumpi\n        /* \"#utility.yul\":3516:3532   */\n      swap2\n      dup2\n      mul\n      swap2\n        /* \"#utility.yul\":3479:3534   */\n    tag_222:\n        /* \"#utility.yul\":3595:3617   */\n      swap4\n      dup5\n      shr\n      swap4\n        /* \"#utility.yul\":3555:3570   */\n      swap1\n      dup1\n      mul\n      swap1\n        /* \"#utility.yul\":3357:3627   */\n      jump(tag_217)\n    tag_219:\n        /* \"#utility.yul\":3361:3364   */\n      pop\n        /* \"#utility.yul\":3211:3633   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3638:4444   */\n    tag_183:\n        /* \"#utility.yul\":3687:3692   */\n      0x00\n        /* \"#utility.yul\":3717:3725   */\n      dup3\n        /* \"#utility.yul\":3707:3787   */\n      tag_224\n      jumpi\n      pop\n        /* \"#utility.yul\":3758:3759   */\n      0x01\n        /* \"#utility.yul\":3772:3777   */\n      jump(tag_90)\n        /* \"#utility.yul\":3707:3787   */\n    tag_224:\n        /* \"#utility.yul\":3806:3810   */\n      dup2\n        /* \"#utility.yul\":3796:3872   */\n      tag_225\n      jumpi\n      pop\n        /* \"#utility.yul\":3843:3844   */\n      0x00\n        /* \"#utility.yul\":3857:3862   */\n      jump(tag_90)\n        /* \"#utility.yul\":3796:3872   */\n    tag_225:\n        /* \"#utility.yul\":3888:3892   */\n      dup2\n        /* \"#utility.yul\":3906:3907   */\n      0x01\n        /* \"#utility.yul\":3901:3960   */\n      dup2\n      eq\n      tag_227\n      jumpi\n        /* \"#utility.yul\":3974:3975   */\n      0x02\n        /* \"#utility.yul\":3969:4099   */\n      dup2\n      eq\n      tag_228\n      jumpi\n        /* \"#utility.yul\":3881:4099   */\n      jump(tag_226)\n        /* \"#utility.yul\":3901:3960   */\n    tag_227:\n        /* \"#utility.yul\":3931:3932   */\n      0x01\n        /* \"#utility.yul\":3922:3932   */\n      swap2\n      pop\n        /* \"#utility.yul\":3945:3950   */\n      pop\n      jump(tag_90)\n        /* \"#utility.yul\":3969:4099   */\n    tag_228:\n        /* \"#utility.yul\":4006:4009   */\n      0xff\n        /* \"#utility.yul\":3996:4004   */\n      dup5\n        /* \"#utility.yul\":3993:4010   */\n      gt\n        /* \"#utility.yul\":3990:4033   */\n      iszero\n      tag_230\n      jumpi\n        /* \"#utility.yul\":4013:4031   */\n      tag_230\n      tag_181\n      jump\t// in\n    tag_230:\n      pop\n      pop\n        /* \"#utility.yul\":4069:4070   */\n      0x01\n        /* \"#utility.yul\":4055:4071   */\n      dup3\n      shl\n        /* \"#utility.yul\":4084:4089   */\n      jump(tag_90)\n        /* \"#utility.yul\":3881:4099   */\n    tag_226:\n      pop\n        /* \"#utility.yul\":4183:4185   */\n      0x20\n        /* \"#utility.yul\":4173:4181   */\n      dup4\n        /* \"#utility.yul\":4170:4186   */\n      lt\n        /* \"#utility.yul\":4164:4167   */\n      0x0133\n        /* \"#utility.yul\":4158:4162   */\n      dup4\n        /* \"#utility.yul\":4155:4168   */\n      lt\n        /* \"#utility.yul\":4151:4187   */\n      and\n        /* \"#utility.yul\":4145:4147   */\n      0x4e\n        /* \"#utility.yul\":4135:4143   */\n      dup5\n        /* \"#utility.yul\":4132:4148   */\n      lt\n        /* \"#utility.yul\":4127:4129   */\n      0x0b\n        /* \"#utility.yul\":4121:4125   */\n      dup5\n        /* \"#utility.yul\":4118:4130   */\n      lt\n        /* \"#utility.yul\":4114:4149   */\n      and\n        /* \"#utility.yul\":4111:4188   */\n      or\n        /* \"#utility.yul\":4108:4267   */\n      iszero\n      tag_231\n      jumpi\n      pop\n        /* \"#utility.yul\":4220:4239   */\n      dup2\n      dup2\n      exp\n        /* \"#utility.yul\":4252:4257   */\n      jump(tag_90)\n        /* \"#utility.yul\":4108:4267   */\n    tag_231:\n        /* \"#utility.yul\":4299:4333   */\n      tag_232\n        /* \"#utility.yul\":4324:4332   */\n      dup4\n        /* \"#utility.yul\":4318:4322   */\n      dup4\n        /* \"#utility.yul\":4299:4333   */\n      tag_182\n      jump\t// in\n    tag_232:\n        /* \"#utility.yul\":4369:4375   */\n      dup1\n        /* \"#utility.yul\":4365:4366   */\n      0x00\n        /* \"#utility.yul\":4361:4367   */\n      not\n        /* \"#utility.yul\":4357:4376   */\n      div\n        /* \"#utility.yul\":4348:4355   */\n      dup3\n        /* \"#utility.yul\":4345:4377   */\n      gt\n        /* \"#utility.yul\":4342:4400   */\n      iszero\n      tag_234\n      jumpi\n        /* \"#utility.yul\":4380:4398   */\n      tag_234\n      tag_181\n      jump\t// in\n    tag_234:\n        /* \"#utility.yul\":4418:4438   */\n      mul\n      swap4\n        /* \"#utility.yul\":3638:4444   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4449:4589   */\n    tag_113:\n        /* \"#utility.yul\":4507:4512   */\n      0x00\n        /* \"#utility.yul\":4536:4583   */\n      tag_137\n        /* \"#utility.yul\":4577:4581   */\n      0xff\n        /* \"#utility.yul\":4567:4575   */\n      dup5\n        /* \"#utility.yul\":4563:4582   */\n      and\n        /* \"#utility.yul\":4557:4561   */\n      dup4\n        /* \"#utility.yul\":4536:4583   */\n      tag_183\n      jump\t// in\n        /* \"#utility.yul\":4594:4762   */\n    tag_115:\n        /* \"#utility.yul\":4667:4676   */\n      dup1\n      dup3\n      mul\n        /* \"#utility.yul\":4698:4707   */\n      dup2\n      iszero\n        /* \"#utility.yul\":4715:4730   */\n      dup3\n      dup3\n      div\n        /* \"#utility.yul\":4709:4731   */\n      dup5\n      eq\n        /* \"#utility.yul\":4695:4732   */\n      or\n        /* \"#utility.yul\":4685:4756   */\n      tag_90\n      jumpi\n        /* \"#utility.yul\":4736:4754   */\n      tag_90\n      tag_181\n      jump\t// in\n\n    auxdata: 0xa26469706673582212207551aaf1fd40ad383e26f1f0d1ef78b518f5eed848367bdb7dde76c88b0ed9e464736f6c63430008140033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_162": {
									"entryPoint": null,
									"id": 162,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_722": {
									"entryPoint": null,
									"id": 722,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"array_dataslot_string_storage": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_string_storage": {
									"entryPoint": 217,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 299,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 159,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x41": {
									"entryPoint": 139,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:2732:1",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "46:95:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "63:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "70:3:1",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "75:10:1",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "66:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "66:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "56:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "56:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "56:31:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "103:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "106:4:1",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "96:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "96:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "96:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "127:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "130:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "120:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "120:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "120:15:1"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "14:127:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "201:325:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "211:22:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "225:1:1",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "228:4:1"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "221:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "221:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "211:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "242:38:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "272:4:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "278:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "268:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "268:12:1"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "246:18:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "319:31:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "321:27:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "335:6:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "343:4:1",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "331:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "331:17:1"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "321:6:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "299:18:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "292:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "292:26:1"
															},
															"nodeType": "YulIf",
															"src": "289:61:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "409:111:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "430:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "437:3:1",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "442:10:1",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "433:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "433:20:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "423:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "423:31:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "423:31:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "474:1:1",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "477:4:1",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "467:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "467:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "467:15:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "502:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "505:4:1",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "495:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "495:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "495:15:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "365:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "388:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "396:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "385:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "385:14:1"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "362:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "362:38:1"
															},
															"nodeType": "YulIf",
															"src": "359:161:1"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "181:4:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "190:6:1",
														"type": ""
													}
												],
												"src": "146:380:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "587:65:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "604:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "607:3:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "597:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "597:14:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "597:14:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "620:26:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "638:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "641:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nodeType": "YulIdentifier",
																	"src": "628:9:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "628:18:1"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "620:4:1"
																}
															]
														}
													]
												},
												"name": "array_dataslot_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "570:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "578:4:1",
														"type": ""
													}
												],
												"src": "531:121:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "738:464:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "771:425:1",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "785:11:1",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "795:1:1",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "_1",
																				"nodeType": "YulTypedName",
																				"src": "789:2:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "816:2:1"
																				},
																				{
																					"name": "array",
																					"nodeType": "YulIdentifier",
																					"src": "820:5:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "809:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "809:17:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "809:17:1"
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "839:31:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "861:2:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "865:4:1",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "keccak256",
																				"nodeType": "YulIdentifier",
																				"src": "851:9:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "851:19:1"
																		},
																		"variables": [
																			{
																				"name": "data",
																				"nodeType": "YulTypedName",
																				"src": "843:4:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "883:57:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nodeType": "YulIdentifier",
																					"src": "906:4:1"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "916:1:1",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "startIndex",
																									"nodeType": "YulIdentifier",
																									"src": "923:10:1"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "935:2:1",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "919:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "919:19:1"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nodeType": "YulIdentifier",
																						"src": "912:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "912:27:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "902:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "902:38:1"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nodeType": "YulTypedName",
																				"src": "887:11:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "977:23:1",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "979:19:1",
																					"value": {
																						"name": "data",
																						"nodeType": "YulIdentifier",
																						"src": "994:4:1"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nodeType": "YulIdentifier",
																							"src": "979:11:1"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nodeType": "YulIdentifier",
																					"src": "959:10:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "971:4:1",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nodeType": "YulIdentifier",
																				"src": "956:2:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "956:20:1"
																		},
																		"nodeType": "YulIf",
																		"src": "953:47:1"
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "1013:41:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nodeType": "YulIdentifier",
																					"src": "1027:4:1"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1037:1:1",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nodeType": "YulIdentifier",
																									"src": "1044:3:1"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "1049:2:1",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1040:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1040:12:1"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nodeType": "YulIdentifier",
																						"src": "1033:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1033:20:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1023:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1023:31:1"
																		},
																		"variables": [
																			{
																				"name": "_2",
																				"nodeType": "YulTypedName",
																				"src": "1017:2:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "1067:24:1",
																		"value": {
																			"name": "deleteStart",
																			"nodeType": "YulIdentifier",
																			"src": "1080:11:1"
																		},
																		"variables": [
																			{
																				"name": "start",
																				"nodeType": "YulTypedName",
																				"src": "1071:5:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "1165:21:1",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"name": "start",
																								"nodeType": "YulIdentifier",
																								"src": "1174:5:1"
																							},
																							{
																								"name": "_1",
																								"nodeType": "YulIdentifier",
																								"src": "1181:2:1"
																							}
																						],
																						"functionName": {
																							"name": "sstore",
																							"nodeType": "YulIdentifier",
																							"src": "1167:6:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1167:17:1"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "1167:17:1"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "start",
																					"nodeType": "YulIdentifier",
																					"src": "1115:5:1"
																				},
																				{
																					"name": "_2",
																					"nodeType": "YulIdentifier",
																					"src": "1122:2:1"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nodeType": "YulIdentifier",
																				"src": "1112:2:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1112:13:1"
																		},
																		"nodeType": "YulForLoop",
																		"post": {
																			"nodeType": "YulBlock",
																			"src": "1126:26:1",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "1128:22:1",
																					"value": {
																						"arguments": [
																							{
																								"name": "start",
																								"nodeType": "YulIdentifier",
																								"src": "1141:5:1"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1148:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "1137:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1137:13:1"
																					},
																					"variableNames": [
																						{
																							"name": "start",
																							"nodeType": "YulIdentifier",
																							"src": "1128:5:1"
																						}
																					]
																				}
																			]
																		},
																		"pre": {
																			"nodeType": "YulBlock",
																			"src": "1108:3:1",
																			"statements": []
																		},
																		"src": "1104:82:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nodeType": "YulIdentifier",
																		"src": "754:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "759:2:1",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "751:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "751:11:1"
															},
															"nodeType": "YulIf",
															"src": "748:448:1"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "710:5:1",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "717:3:1",
														"type": ""
													},
													{
														"name": "startIndex",
														"nodeType": "YulTypedName",
														"src": "722:10:1",
														"type": ""
													}
												],
												"src": "657:545:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1292:81:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1302:65:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nodeType": "YulIdentifier",
																				"src": "1317:4:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "1335:1:1",
																										"type": "",
																										"value": "3"
																									},
																									{
																										"name": "len",
																										"nodeType": "YulIdentifier",
																										"src": "1338:3:1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "1331:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "1331:11:1"
																							},
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "1348:1:1",
																										"type": "",
																										"value": "0"
																									}
																								],
																								"functionName": {
																									"name": "not",
																									"nodeType": "YulIdentifier",
																									"src": "1344:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "1344:6:1"
																							}
																						],
																						"functionName": {
																							"name": "shr",
																							"nodeType": "YulIdentifier",
																							"src": "1327:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1327:24:1"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "1323:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1323:29:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1313:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1313:40:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1359:1:1",
																				"type": "",
																				"value": "1"
																			},
																			{
																				"name": "len",
																				"nodeType": "YulIdentifier",
																				"src": "1362:3:1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "1355:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1355:11:1"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "1310:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1310:57:1"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nodeType": "YulIdentifier",
																	"src": "1302:4:1"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "1269:4:1",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "1275:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nodeType": "YulTypedName",
														"src": "1283:4:1",
														"type": ""
													}
												],
												"src": "1207:166:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1474:1256:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1484:24:1",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "1504:3:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1498:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1498:10:1"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nodeType": "YulTypedName",
																	"src": "1488:6:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1551:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "1553:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1553:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1553:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "1523:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1539:2:1",
																						"type": "",
																						"value": "64"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1543:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "1535:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1535:10:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1547:1:1",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1531:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1531:18:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1520:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1520:30:1"
															},
															"nodeType": "YulIf",
															"src": "1517:56:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "1626:4:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nodeType": "YulIdentifier",
																						"src": "1664:4:1"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nodeType": "YulIdentifier",
																					"src": "1658:5:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1658:11:1"
																			}
																		],
																		"functionName": {
																			"name": "extract_byte_array_length",
																			"nodeType": "YulIdentifier",
																			"src": "1632:25:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1632:38:1"
																	},
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "1672:6:1"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_string_storage",
																	"nodeType": "YulIdentifier",
																	"src": "1582:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1582:97:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1582:97:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1688:18:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1705:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulTypedName",
																	"src": "1692:9:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1715:23:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1734:4:1",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "srcOffset_1",
																	"nodeType": "YulTypedName",
																	"src": "1719:11:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1747:24:1",
															"value": {
																"name": "srcOffset_1",
																"nodeType": "YulIdentifier",
																"src": "1760:11:1"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulIdentifier",
																	"src": "1747:9:1"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "1817:656:1",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "1831:35:1",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "1850:6:1"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "1862:2:1",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nodeType": "YulIdentifier",
																								"src": "1858:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1858:7:1"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nodeType": "YulIdentifier",
																						"src": "1846:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1846:20:1"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nodeType": "YulTypedName",
																						"src": "1835:7:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "1879:49:1",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "1923:4:1"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_string_storage",
																						"nodeType": "YulIdentifier",
																						"src": "1893:29:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1893:35:1"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nodeType": "YulTypedName",
																						"src": "1883:6:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "1941:10:1",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1950:1:1",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nodeType": "YulTypedName",
																						"src": "1945:1:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "2028:172:1",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "2053:6:1"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nodeType": "YulIdentifier",
																														"src": "2071:3:1"
																													},
																													{
																														"name": "srcOffset",
																														"nodeType": "YulIdentifier",
																														"src": "2076:9:1"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nodeType": "YulIdentifier",
																													"src": "2067:3:1"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "2067:19:1"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nodeType": "YulIdentifier",
																											"src": "2061:5:1"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "2061:26:1"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "2046:6:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2046:42:1"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "2046:42:1"
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "2105:24:1",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "2119:6:1"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "2127:1:1",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "2115:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2115:14:1"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nodeType": "YulIdentifier",
																									"src": "2105:6:1"
																								}
																							]
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "2146:40:1",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nodeType": "YulIdentifier",
																										"src": "2163:9:1"
																									},
																									{
																										"name": "srcOffset_1",
																										"nodeType": "YulIdentifier",
																										"src": "2174:11:1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "2159:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2159:27:1"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nodeType": "YulIdentifier",
																									"src": "2146:9:1"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "1975:1:1"
																						},
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "1978:7:1"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "1972:2:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1972:14:1"
																				},
																				"nodeType": "YulForLoop",
																				"post": {
																					"nodeType": "YulBlock",
																					"src": "1987:28:1",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "1989:24:1",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nodeType": "YulIdentifier",
																										"src": "1998:1:1"
																									},
																									{
																										"name": "srcOffset_1",
																										"nodeType": "YulIdentifier",
																										"src": "2001:11:1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "1994:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "1994:19:1"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "1989:1:1"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nodeType": "YulBlock",
																					"src": "1968:3:1",
																					"statements": []
																				},
																				"src": "1964:236:1"
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "2248:166:1",
																					"statements": [
																						{
																							"nodeType": "YulVariableDeclaration",
																							"src": "2266:43:1",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "2293:3:1"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "2298:9:1"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "2289:3:1"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "2289:19:1"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "2283:5:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2283:26:1"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nodeType": "YulTypedName",
																									"src": "2270:9:1",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "2333:6:1"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nodeType": "YulIdentifier",
																												"src": "2345:9:1"
																											},
																											{
																												"arguments": [
																													{
																														"arguments": [
																															{
																																"arguments": [
																																	{
																																		"arguments": [
																																			{
																																				"kind": "number",
																																				"nodeType": "YulLiteral",
																																				"src": "2372:1:1",
																																				"type": "",
																																				"value": "3"
																																			},
																																			{
																																				"name": "newLen",
																																				"nodeType": "YulIdentifier",
																																				"src": "2375:6:1"
																																			}
																																		],
																																		"functionName": {
																																			"name": "shl",
																																			"nodeType": "YulIdentifier",
																																			"src": "2368:3:1"
																																		},
																																		"nodeType": "YulFunctionCall",
																																		"src": "2368:14:1"
																																	},
																																	{
																																		"kind": "number",
																																		"nodeType": "YulLiteral",
																																		"src": "2384:3:1",
																																		"type": "",
																																		"value": "248"
																																	}
																																],
																																"functionName": {
																																	"name": "and",
																																	"nodeType": "YulIdentifier",
																																	"src": "2364:3:1"
																																},
																																"nodeType": "YulFunctionCall",
																																"src": "2364:24:1"
																															},
																															{
																																"arguments": [
																																	{
																																		"kind": "number",
																																		"nodeType": "YulLiteral",
																																		"src": "2394:1:1",
																																		"type": "",
																																		"value": "0"
																																	}
																																],
																																"functionName": {
																																	"name": "not",
																																	"nodeType": "YulIdentifier",
																																	"src": "2390:3:1"
																																},
																																"nodeType": "YulFunctionCall",
																																"src": "2390:6:1"
																															}
																														],
																														"functionName": {
																															"name": "shr",
																															"nodeType": "YulIdentifier",
																															"src": "2360:3:1"
																														},
																														"nodeType": "YulFunctionCall",
																														"src": "2360:37:1"
																													}
																												],
																												"functionName": {
																													"name": "not",
																													"nodeType": "YulIdentifier",
																													"src": "2356:3:1"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "2356:42:1"
																											}
																										],
																										"functionName": {
																											"name": "and",
																											"nodeType": "YulIdentifier",
																											"src": "2341:3:1"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "2341:58:1"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "2326:6:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2326:74:1"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "2326:74:1"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "2219:7:1"
																						},
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "2228:6:1"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "2216:2:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2216:19:1"
																				},
																				"nodeType": "YulIf",
																				"src": "2213:201:1"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "2434:4:1"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "2448:1:1",
																											"type": "",
																											"value": "1"
																										},
																										{
																											"name": "newLen",
																											"nodeType": "YulIdentifier",
																											"src": "2451:6:1"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nodeType": "YulIdentifier",
																										"src": "2444:3:1"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "2444:14:1"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "2460:1:1",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "2440:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "2440:22:1"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "2427:6:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2427:36:1"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "2427:36:1"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "1810:663:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1815:1:1",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "2490:234:1",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "2504:14:1",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2517:1:1",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nodeType": "YulTypedName",
																						"src": "2508:5:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "2553:67:1",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "2571:35:1",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "2590:3:1"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "2595:9:1"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "2586:3:1"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "2586:19:1"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "2580:5:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2580:26:1"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "2571:5:1"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nodeType": "YulIdentifier",
																					"src": "2534:6:1"
																				},
																				"nodeType": "YulIf",
																				"src": "2531:89:1"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "2640:4:1"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "2699:5:1"
																								},
																								{
																									"name": "newLen",
																									"nodeType": "YulIdentifier",
																									"src": "2706:6:1"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nodeType": "YulIdentifier",
																								"src": "2646:52:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "2646:67:1"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "2633:6:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2633:81:1"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "2633:81:1"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "2482:242:1",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "1790:6:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1798:2:1",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1787:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1787:14:1"
															},
															"nodeType": "YulSwitch",
															"src": "1780:944:1"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "1459:4:1",
														"type": ""
													},
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "1465:3:1",
														"type": ""
													}
												],
												"src": "1378:1352:1"
											}
										]
									},
									"contents": "{\n    { }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            let _1 := 0\n            mstore(_1, array)\n            let data := keccak256(_1, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _2 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _2) { start := add(start, 1) }\n            { sstore(start, _1) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := srcOffset_1\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801562000010575f80fd5b506040518060400160405280600881526020016743555252454e435960c01b815250604051806040016040528060058152602001644d4154494360d81b81525081600390816200006191906200012b565b5060046200007082826200012b565b5050600580546001600160a01b0319163317905550620001f3565b634e487b7160e01b5f52604160045260245ffd5b600181811c90821680620000b457607f821691505b602082108103620000d357634e487b7160e01b5f52602260045260245ffd5b50919050565b601f82111562000126575f81815260208120601f850160051c81016020861015620001015750805b601f850160051c820191505b8181101562000122578281556001016200010d565b5050505b505050565b81516001600160401b038111156200014757620001476200008b565b6200015f816200015884546200009f565b84620000d9565b602080601f83116001811462000195575f84156200017d5750858301515b5f19600386901b1c1916600185901b17855562000122565b5f85815260208120601f198616915b82811015620001c557888601518255948401946001909101908401620001a4565b5085821015620001e357878501515f19600388901b60f8161c191681555b5050505050600190811b01905550565b610afa80620002015f395ff3fe608060405234801561000f575f80fd5b50600436106100f0575f3560e01c806370a0823111610093578063a9059cbb11610063578063a9059cbb146101ff578063beabacc814610212578063cfba4fe014610225578063dd62ed3e14610238575f80fd5b806370a082311461019157806395d89b41146101b9578063a457c2d7146101c1578063a5de3619146101d4575f80fd5b806323b872dd116100ce57806323b872dd14610147578063313ce5671461015a57806339509351146101695780636a6278421461017c575f80fd5b806306fdde03146100f4578063095ea7b31461011257806318160ddd14610135575b5f80fd5b6100fc61024b565b604051610109919061084f565b60405180910390f35b6101256101203660046108b5565b6102db565b6040519015158152602001610109565b6002545b604051908152602001610109565b6101256101553660046108dd565b6102f4565b60405160128152602001610109565b6101256101773660046108b5565b610317565b61018f61018a366004610916565b610338565b005b61013961019f366004610916565b6001600160a01b03165f9081526020819052604090205490565b6100fc61035e565b6101256101cf3660046108b5565b61036d565b6005546101e7906001600160a01b031681565b6040516001600160a01b039091168152602001610109565b61012561020d3660046108b5565b6103ec565b61018f6102203660046108dd565b6103f9565b610139610233366004610916565b610409565b61013961024636600461092f565b61042b565b60606003805461025a90610960565b80601f016020809104026020016040519081016040528092919081815260200182805461028690610960565b80156102d15780601f106102a8576101008083540402835291602001916102d1565b820191905f5260205f20905b8154815290600101906020018083116102b457829003601f168201915b5050505050905090565b5f336102e8818585610455565b60019150505b92915050565b5f33610301858285610578565b61030c8585856105f0565b506001949350505050565b5f336102e8818585610329838361042b565b61033391906109ac565b610455565b61035b816103486012600a610a9f565b6103569063042c1d80610aad565b610792565b50565b60606004805461025a90610960565b5f338161037a828661042b565b9050838110156103df5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b61030c8286868403610455565b5f336102e88185856105f0565b6104048383836105f0565b505050565b6001600160a01b0381165f9081526020819052604081205481905b9392505050565b6001600160a01b039182165f90815260016020908152604080832093909416825291909152205490565b6001600160a01b0383166104b75760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016103d6565b6001600160a01b0382166105185760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016103d6565b6001600160a01b038381165f8181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b5f610583848461042b565b90505f1981146105ea57818110156105dd5760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e636500000060448201526064016103d6565b6105ea8484848403610455565b50505050565b6001600160a01b0383166106545760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016103d6565b6001600160a01b0382166106b65760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016103d6565b6001600160a01b0383165f908152602081905260409020548181101561072d5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016103d6565b6001600160a01b038481165f81815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a36105ea565b6001600160a01b0382166107e85760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064016103d6565b8060025f8282546107f991906109ac565b90915550506001600160a01b0382165f81815260208181526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b5f6020808352835180828501525f5b8181101561087a5785810183015185820160400152820161085e565b505f604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b03811681146108b0575f80fd5b919050565b5f80604083850312156108c6575f80fd5b6108cf8361089a565b946020939093013593505050565b5f805f606084860312156108ef575f80fd5b6108f88461089a565b92506109066020850161089a565b9150604084013590509250925092565b5f60208284031215610926575f80fd5b6104248261089a565b5f8060408385031215610940575f80fd5b6109498361089a565b91506109576020840161089a565b90509250929050565b600181811c9082168061097457607f821691505b60208210810361099257634e487b7160e01b5f52602260045260245ffd5b50919050565b634e487b7160e01b5f52601160045260245ffd5b808201808211156102ee576102ee610998565b600181815b808511156109f957815f19048211156109df576109df610998565b808516156109ec57918102915b93841c93908002906109c4565b509250929050565b5f82610a0f575060016102ee565b81610a1b57505f6102ee565b8160018114610a315760028114610a3b57610a57565b60019150506102ee565b60ff841115610a4c57610a4c610998565b50506001821b6102ee565b5060208310610133831016604e8410600b8410161715610a7a575081810a6102ee565b610a8483836109bf565b805f1904821115610a9757610a97610998565b029392505050565b5f61042460ff841683610a01565b80820281158282048414176102ee576102ee61099856fea26469706673582212207551aaf1fd40ad383e26f1f0d1ef78b518f5eed848367bdb7dde76c88b0ed9e464736f6c63430008140033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x10 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x8 DUP2 MSTORE PUSH1 0x20 ADD PUSH8 0x43555252454E4359 PUSH1 0xC0 SHL DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH5 0x4D41544943 PUSH1 0xD8 SHL DUP2 MSTORE POP DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH3 0x61 SWAP2 SWAP1 PUSH3 0x12B JUMP JUMPDEST POP PUSH1 0x4 PUSH3 0x70 DUP3 DUP3 PUSH3 0x12B JUMP JUMPDEST POP POP PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER OR SWAP1 SSTORE POP PUSH3 0x1F3 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0xB4 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0xD3 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x126 JUMPI PUSH0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH3 0x101 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x122 JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x10D JUMP JUMPDEST POP POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH3 0x147 JUMPI PUSH3 0x147 PUSH3 0x8B JUMP JUMPDEST PUSH3 0x15F DUP2 PUSH3 0x158 DUP5 SLOAD PUSH3 0x9F JUMP JUMPDEST DUP5 PUSH3 0xD9 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x195 JUMPI PUSH0 DUP5 ISZERO PUSH3 0x17D JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH3 0x122 JUMP JUMPDEST PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x1C5 JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH3 0x1A4 JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH3 0x1E3 JUMPI DUP8 DUP6 ADD MLOAD PUSH0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0xAFA DUP1 PUSH3 0x201 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xF0 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x93 JUMPI DUP1 PUSH4 0xA9059CBB GT PUSH2 0x63 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x1FF JUMPI DUP1 PUSH4 0xBEABACC8 EQ PUSH2 0x212 JUMPI DUP1 PUSH4 0xCFBA4FE0 EQ PUSH2 0x225 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x238 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x191 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1B9 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x1C1 JUMPI DUP1 PUSH4 0xA5DE3619 EQ PUSH2 0x1D4 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0xCE JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x147 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x15A JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x169 JUMPI DUP1 PUSH4 0x6A627842 EQ PUSH2 0x17C JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xF4 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x112 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x135 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xFC PUSH2 0x24B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x109 SWAP2 SWAP1 PUSH2 0x84F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x125 PUSH2 0x120 CALLDATASIZE PUSH1 0x4 PUSH2 0x8B5 JUMP JUMPDEST PUSH2 0x2DB JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x109 JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x109 JUMP JUMPDEST PUSH2 0x125 PUSH2 0x155 CALLDATASIZE PUSH1 0x4 PUSH2 0x8DD JUMP JUMPDEST PUSH2 0x2F4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x109 JUMP JUMPDEST PUSH2 0x125 PUSH2 0x177 CALLDATASIZE PUSH1 0x4 PUSH2 0x8B5 JUMP JUMPDEST PUSH2 0x317 JUMP JUMPDEST PUSH2 0x18F PUSH2 0x18A CALLDATASIZE PUSH1 0x4 PUSH2 0x916 JUMP JUMPDEST PUSH2 0x338 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x139 PUSH2 0x19F CALLDATASIZE PUSH1 0x4 PUSH2 0x916 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xFC PUSH2 0x35E JUMP JUMPDEST PUSH2 0x125 PUSH2 0x1CF CALLDATASIZE PUSH1 0x4 PUSH2 0x8B5 JUMP JUMPDEST PUSH2 0x36D JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH2 0x1E7 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x109 JUMP JUMPDEST PUSH2 0x125 PUSH2 0x20D CALLDATASIZE PUSH1 0x4 PUSH2 0x8B5 JUMP JUMPDEST PUSH2 0x3EC JUMP JUMPDEST PUSH2 0x18F PUSH2 0x220 CALLDATASIZE PUSH1 0x4 PUSH2 0x8DD JUMP JUMPDEST PUSH2 0x3F9 JUMP JUMPDEST PUSH2 0x139 PUSH2 0x233 CALLDATASIZE PUSH1 0x4 PUSH2 0x916 JUMP JUMPDEST PUSH2 0x409 JUMP JUMPDEST PUSH2 0x139 PUSH2 0x246 CALLDATASIZE PUSH1 0x4 PUSH2 0x92F JUMP JUMPDEST PUSH2 0x42B JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x25A SWAP1 PUSH2 0x960 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x286 SWAP1 PUSH2 0x960 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2D1 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2A8 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2D1 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2B4 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 CALLER PUSH2 0x2E8 DUP2 DUP6 DUP6 PUSH2 0x455 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER PUSH2 0x301 DUP6 DUP3 DUP6 PUSH2 0x578 JUMP JUMPDEST PUSH2 0x30C DUP6 DUP6 DUP6 PUSH2 0x5F0 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 CALLER PUSH2 0x2E8 DUP2 DUP6 DUP6 PUSH2 0x329 DUP4 DUP4 PUSH2 0x42B JUMP JUMPDEST PUSH2 0x333 SWAP2 SWAP1 PUSH2 0x9AC JUMP JUMPDEST PUSH2 0x455 JUMP JUMPDEST PUSH2 0x35B DUP2 PUSH2 0x348 PUSH1 0x12 PUSH1 0xA PUSH2 0xA9F JUMP JUMPDEST PUSH2 0x356 SWAP1 PUSH4 0x42C1D80 PUSH2 0xAAD JUMP JUMPDEST PUSH2 0x792 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x25A SWAP1 PUSH2 0x960 JUMP JUMPDEST PUSH0 CALLER DUP2 PUSH2 0x37A DUP3 DUP7 PUSH2 0x42B JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x3DF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x30C DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x455 JUMP JUMPDEST PUSH0 CALLER PUSH2 0x2E8 DUP2 DUP6 DUP6 PUSH2 0x5F0 JUMP JUMPDEST PUSH2 0x404 DUP4 DUP4 DUP4 PUSH2 0x5F0 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP2 SWAP1 JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x4B7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3D6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x518 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3D6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x583 DUP5 DUP5 PUSH2 0x42B JUMP JUMPDEST SWAP1 POP PUSH0 NOT DUP2 EQ PUSH2 0x5EA JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x5DD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3D6 JUMP JUMPDEST PUSH2 0x5EA DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x455 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x654 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3D6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x6B6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3D6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x72D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3D6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP8 DUP8 SUB SWAP1 SSTORE SWAP4 DUP8 AND DUP1 DUP4 MSTORE SWAP2 DUP5 SWAP1 KECCAK256 DUP1 SLOAD DUP8 ADD SWAP1 SSTORE SWAP3 MLOAD DUP6 DUP2 MSTORE SWAP1 SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x5EA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x7E8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3D6 JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x7F9 SWAP2 SWAP1 PUSH2 0x9AC JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD DUP7 ADD SWAP1 SSTORE MLOAD DUP5 DUP2 MSTORE PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x87A JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x85E JUMP JUMPDEST POP PUSH0 PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x8B0 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x8C6 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x8CF DUP4 PUSH2 0x89A JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x8EF JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x8F8 DUP5 PUSH2 0x89A JUMP JUMPDEST SWAP3 POP PUSH2 0x906 PUSH1 0x20 DUP6 ADD PUSH2 0x89A JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x926 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x424 DUP3 PUSH2 0x89A JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x940 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x949 DUP4 PUSH2 0x89A JUMP JUMPDEST SWAP2 POP PUSH2 0x957 PUSH1 0x20 DUP5 ADD PUSH2 0x89A JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x974 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x992 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x2EE JUMPI PUSH2 0x2EE PUSH2 0x998 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 JUMPDEST DUP1 DUP6 GT ISZERO PUSH2 0x9F9 JUMPI DUP2 PUSH0 NOT DIV DUP3 GT ISZERO PUSH2 0x9DF JUMPI PUSH2 0x9DF PUSH2 0x998 JUMP JUMPDEST DUP1 DUP6 AND ISZERO PUSH2 0x9EC JUMPI SWAP2 DUP2 MUL SWAP2 JUMPDEST SWAP4 DUP5 SHR SWAP4 SWAP1 DUP1 MUL SWAP1 PUSH2 0x9C4 JUMP JUMPDEST POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 PUSH2 0xA0F JUMPI POP PUSH1 0x1 PUSH2 0x2EE JUMP JUMPDEST DUP2 PUSH2 0xA1B JUMPI POP PUSH0 PUSH2 0x2EE JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0xA31 JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0xA3B JUMPI PUSH2 0xA57 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x2EE JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0xA4C JUMPI PUSH2 0xA4C PUSH2 0x998 JUMP JUMPDEST POP POP PUSH1 0x1 DUP3 SHL PUSH2 0x2EE JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0xA7A JUMPI POP DUP2 DUP2 EXP PUSH2 0x2EE JUMP JUMPDEST PUSH2 0xA84 DUP4 DUP4 PUSH2 0x9BF JUMP JUMPDEST DUP1 PUSH0 NOT DIV DUP3 GT ISZERO PUSH2 0xA97 JUMPI PUSH2 0xA97 PUSH2 0x998 JUMP JUMPDEST MUL SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x424 PUSH1 0xFF DUP5 AND DUP4 PUSH2 0xA01 JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x2EE JUMPI PUSH2 0x2EE PUSH2 0x998 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH22 0x51AAF1FD40AD383E26F1F0D1EF78B518F5EED848367B 0xDB PUSH30 0xDE76C88B0ED9E464736F6C63430008140033000000000000000000000000 ",
							"sourceMap": "17291:507:0:-:0;;;17358:77;;;;;;;;;;6361:113;;;;;;;;;;;;;-1:-1:-1;;;6361:113:0;;;;;;;;;;;;;;;;-1:-1:-1;;;6361:113:0;;;6435:5;6427;:13;;;;;;:::i;:::-;-1:-1:-1;6450:7:0;:17;6460:7;6450;:17;:::i;:::-;-1:-1:-1;;17409:6:0::1;:19:::0;;-1:-1:-1;;;;;;17409:19:0::1;17418:10;17409:19;::::0;;-1:-1:-1;17291:507:0;;14:127:1;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:380;225:1;221:12;;;;268;;;289:61;;343:4;335:6;331:17;321:27;;289:61;396:2;388:6;385:14;365:18;362:38;359:161;;442:10;437:3;433:20;430:1;423:31;477:4;474:1;467:15;505:4;502:1;495:15;359:161;;146:380;;;:::o;657:545::-;759:2;754:3;751:11;748:448;;;795:1;820:5;816:2;809:17;865:4;861:2;851:19;935:2;923:10;919:19;916:1;912:27;906:4;902:38;971:4;959:10;956:20;953:47;;;-1:-1:-1;994:4:1;953:47;1049:2;1044:3;1040:12;1037:1;1033:20;1027:4;1023:31;1013:41;;1104:82;1122:2;1115:5;1112:13;1104:82;;;1167:17;;;1148:1;1137:13;1104:82;;;1108:3;;;748:448;657:545;;;:::o;1378:1352::-;1498:10;;-1:-1:-1;;;;;1520:30:1;;1517:56;;;1553:18;;:::i;:::-;1582:97;1672:6;1632:38;1664:4;1658:11;1632:38;:::i;:::-;1626:4;1582:97;:::i;:::-;1734:4;;1798:2;1787:14;;1815:1;1810:663;;;;2517:1;2534:6;2531:89;;;-1:-1:-1;2586:19:1;;;2580:26;2531:89;-1:-1:-1;;1335:1:1;1331:11;;;1327:24;1323:29;1313:40;1359:1;1355:11;;;1310:57;2633:81;;1780:944;;1810:663;604:1;597:14;;;641:4;628:18;;-1:-1:-1;;1846:20:1;;;1964:236;1978:7;1975:1;1972:14;1964:236;;;2067:19;;;2061:26;2046:42;;2159:27;;;;2127:1;2115:14;;;;1994:19;;1964:236;;;1968:3;2228:6;2219:7;2216:19;2213:201;;;2289:19;;;2283:26;-1:-1:-1;;2372:1:1;2368:14;;;2384:3;2364:24;2360:37;2356:42;2341:58;2326:74;;2213:201;-1:-1:-1;;;;;2460:1:1;2444:14;;;2440:22;2427:36;;-1:-1:-1;1378:1352:1:o;:::-;17291:507:0;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_afterTokenTransfer_703": {
									"entryPoint": null,
									"id": 703,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_638": {
									"entryPoint": 1109,
									"id": 638,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_beforeTokenTransfer_692": {
									"entryPoint": null,
									"id": 692,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_mint_521": {
									"entryPoint": 1938,
									"id": 521,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_111": {
									"entryPoint": null,
									"id": 111,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_spendAllowance_681": {
									"entryPoint": 1400,
									"id": 681,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transfer_464": {
									"entryPoint": 1520,
									"id": 464,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@admins_709": {
									"entryPoint": null,
									"id": 709,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@allowance_259": {
									"entryPoint": 1067,
									"id": 259,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_284": {
									"entryPoint": 731,
									"id": 284,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_216": {
									"entryPoint": null,
									"id": 216,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@decimals_192": {
									"entryPoint": null,
									"id": 192,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@decreaseAllowance_387": {
									"entryPoint": 877,
									"id": 387,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@findBalance_755": {
									"entryPoint": 1033,
									"id": 755,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@increaseAllowance_346": {
									"entryPoint": 791,
									"id": 346,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@mint_739": {
									"entryPoint": 824,
									"id": 739,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@name_172": {
									"entryPoint": 587,
									"id": 172,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@symbol_182": {
									"entryPoint": 862,
									"id": 182,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_202": {
									"entryPoint": null,
									"id": 202,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_317": {
									"entryPoint": 756,
									"id": 317,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transfer_241": {
									"entryPoint": 1004,
									"id": 241,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@transfer_771": {
									"entryPoint": 1017,
									"id": 771,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"abi_decode_address": {
									"entryPoint": 2202,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 2326,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 2351,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 2269,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 2229,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2127,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 2476,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_helper": {
									"entryPoint": 2495,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"checked_exp_t_uint256_t_uint8": {
									"entryPoint": 2719,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_unsigned": {
									"entryPoint": 2561,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 2733,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 2400,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 2456,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:7913:1",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "135:427:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "145:12:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "155:2:1",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "149:2:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "173:9:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "184:2:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "166:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "166:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "166:21:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "196:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "216:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "210:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "210:13:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "200:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "243:9:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "254:2:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "239:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "239:18:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "259:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "232:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "232:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "232:34:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "275:10:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "284:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "279:1:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "344:90:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "headStart",
																									"nodeType": "YulIdentifier",
																									"src": "373:9:1"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "384:1:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "369:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "369:17:1"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "388:2:1",
																							"type": "",
																							"value": "64"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "365:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "365:26:1"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value0",
																											"nodeType": "YulIdentifier",
																											"src": "407:6:1"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "415:1:1"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "403:3:1"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "403:14:1"
																								},
																								{
																									"name": "_1",
																									"nodeType": "YulIdentifier",
																									"src": "419:2:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "399:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "399:23:1"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "393:5:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "393:30:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "358:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "358:66:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "358:66:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "305:1:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "308:6:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "302:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "302:13:1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "316:19:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "318:15:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "327:1:1"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "330:2:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "323:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "323:10:1"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "318:1:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "298:3:1",
																"statements": []
															},
															"src": "294:140:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "458:9:1"
																					},
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "469:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "454:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "454:22:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "478:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "450:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "450:31:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "483:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "443:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "443:42:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "443:42:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "494:62:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "510:9:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "529:6:1"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "537:2:1",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "525:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "525:15:1"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "546:2:1",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "542:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "542:7:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "521:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "521:29:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "506:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "506:45:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "553:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "502:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "502:54:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "494:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "104:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "115:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "126:4:1",
														"type": ""
													}
												],
												"src": "14:548:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "616:124:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "626:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "648:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "635:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "635:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "626:5:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "718:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "727:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "730:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "720:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "720:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "720:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "677:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "688:5:1"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "703:3:1",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "708:1:1",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "699:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "699:11:1"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "712:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "695:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "695:19:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "684:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "684:31:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "674:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "674:42:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "667:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "667:50:1"
															},
															"nodeType": "YulIf",
															"src": "664:70:1"
														}
													]
												},
												"name": "abi_decode_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "595:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "606:5:1",
														"type": ""
													}
												],
												"src": "567:173:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "832:167:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "878:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "887:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "890:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "880:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "880:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "880:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "853:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "862:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "849:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "849:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "874:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "845:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "845:32:1"
															},
															"nodeType": "YulIf",
															"src": "842:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "903:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "932:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "913:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "913:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "903:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "951:42:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "978:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "989:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "974:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "974:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "961:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "961:32:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "951:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "790:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "801:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "813:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "821:6:1",
														"type": ""
													}
												],
												"src": "745:254:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1099:92:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1109:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1121:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1132:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1117:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1117:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1109:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1151:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "1176:6:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "1169:6:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1169:14:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1162:6:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1162:22:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1144:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1144:41:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1144:41:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1068:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1079:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1090:4:1",
														"type": ""
													}
												],
												"src": "1004:187:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1297:76:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1307:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1319:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1330:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1315:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1315:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1307:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1349:9:1"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1360:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1342:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1342:25:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1342:25:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1266:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1277:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1288:4:1",
														"type": ""
													}
												],
												"src": "1196:177:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1482:224:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1528:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1537:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1540:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1530:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1530:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1530:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1503:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1512:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1499:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1499:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1524:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1495:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1495:32:1"
															},
															"nodeType": "YulIf",
															"src": "1492:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1553:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1582:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1563:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1563:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1553:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1601:48:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1634:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1645:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1630:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1630:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1611:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1611:38:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1601:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1658:42:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1685:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1696:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1681:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1681:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1668:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1668:32:1"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "1658:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1432:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1443:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1455:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1463:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "1471:6:1",
														"type": ""
													}
												],
												"src": "1378:328:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1808:87:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1818:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1830:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1841:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1826:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1826:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1818:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1860:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "1875:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1883:4:1",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1871:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1871:17:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1853:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1853:36:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1853:36:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1777:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1788:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1799:4:1",
														"type": ""
													}
												],
												"src": "1711:184:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1970:116:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2016:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2025:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2028:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2018:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2018:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2018:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1991:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2000:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1987:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1987:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2012:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1983:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1983:32:1"
															},
															"nodeType": "YulIf",
															"src": "1980:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2041:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2070:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2051:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2051:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2041:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1936:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1947:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1959:6:1",
														"type": ""
													}
												],
												"src": "1900:186:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2192:102:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2202:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2214:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2225:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2210:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2210:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2202:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2244:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "2259:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2275:3:1",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2280:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "2271:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2271:11:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2284:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "2267:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2267:19:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2255:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2255:32:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2237:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2237:51:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2237:51:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2161:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2172:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2183:4:1",
														"type": ""
													}
												],
												"src": "2091:203:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2386:173:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2432:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2441:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2444:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2434:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2434:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2434:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2407:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2416:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2403:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2403:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2428:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2399:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2399:32:1"
															},
															"nodeType": "YulIf",
															"src": "2396:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2457:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2486:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2467:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2467:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2457:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2505:48:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2538:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2549:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2534:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2534:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2515:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2515:38:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "2505:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2344:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2355:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2367:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2375:6:1",
														"type": ""
													}
												],
												"src": "2299:260:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2619:325:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2629:22:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2643:1:1",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "2646:4:1"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "2639:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2639:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "2629:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2660:38:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "2690:4:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2696:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "2686:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2686:12:1"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "2664:18:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2737:31:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "2739:27:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "2753:6:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2761:4:1",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "2749:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2749:17:1"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2739:6:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "2717:18:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2710:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2710:26:1"
															},
															"nodeType": "YulIf",
															"src": "2707:61:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2827:111:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2848:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2855:3:1",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2860:10:1",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "2851:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2851:20:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2841:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2841:31:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2841:31:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2892:1:1",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2895:4:1",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2885:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2885:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2885:15:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2920:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2923:4:1",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2913:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2913:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2913:15:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "2783:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2806:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2814:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "2803:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2803:14:1"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "2780:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2780:38:1"
															},
															"nodeType": "YulIf",
															"src": "2777:161:1"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "2599:4:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "2608:6:1",
														"type": ""
													}
												],
												"src": "2564:380:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2981:95:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2998:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3005:3:1",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3010:10:1",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "3001:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3001:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2991:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2991:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2991:31:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3038:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3041:4:1",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3031:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3031:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3031:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3062:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3065:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3055:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3055:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3055:15:1"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "2949:127:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3129:77:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3139:16:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3150:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "3153:1:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3146:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3146:9:1"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "3139:3:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3178:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "3180:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3180:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3180:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3170:1:1"
																	},
																	{
																		"name": "sum",
																		"nodeType": "YulIdentifier",
																		"src": "3173:3:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3167:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3167:10:1"
															},
															"nodeType": "YulIf",
															"src": "3164:36:1"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "3112:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "3115:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "3121:3:1",
														"type": ""
													}
												],
												"src": "3081:125:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3275:358:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3285:16:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "3300:1:1",
																"type": "",
																"value": "1"
															},
															"variables": [
																{
																	"name": "power_1",
																	"nodeType": "YulTypedName",
																	"src": "3289:7:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3310:16:1",
															"value": {
																"name": "power_1",
																"nodeType": "YulIdentifier",
																"src": "3319:7:1"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nodeType": "YulIdentifier",
																	"src": "3310:5:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3335:13:1",
															"value": {
																"name": "_base",
																"nodeType": "YulIdentifier",
																"src": "3343:5:1"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nodeType": "YulIdentifier",
																	"src": "3335:4:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3399:228:1",
																"statements": [
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "3444:22:1",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nodeType": "YulIdentifier",
																							"src": "3446:16:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3446:18:1"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "3446:18:1"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "base",
																					"nodeType": "YulIdentifier",
																					"src": "3419:4:1"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "3433:1:1",
																									"type": "",
																									"value": "0"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nodeType": "YulIdentifier",
																								"src": "3429:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "3429:6:1"
																						},
																						{
																							"name": "base",
																							"nodeType": "YulIdentifier",
																							"src": "3437:4:1"
																						}
																					],
																					"functionName": {
																						"name": "div",
																						"nodeType": "YulIdentifier",
																						"src": "3425:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3425:17:1"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nodeType": "YulIdentifier",
																				"src": "3416:2:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3416:27:1"
																		},
																		"nodeType": "YulIf",
																		"src": "3413:53:1"
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "3505:29:1",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "3507:25:1",
																					"value": {
																						"arguments": [
																							{
																								"name": "power",
																								"nodeType": "YulIdentifier",
																								"src": "3520:5:1"
																							},
																							{
																								"name": "base",
																								"nodeType": "YulIdentifier",
																								"src": "3527:4:1"
																							}
																						],
																						"functionName": {
																							"name": "mul",
																							"nodeType": "YulIdentifier",
																							"src": "3516:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3516:16:1"
																					},
																					"variableNames": [
																						{
																							"name": "power",
																							"nodeType": "YulIdentifier",
																							"src": "3507:5:1"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nodeType": "YulIdentifier",
																					"src": "3486:8:1"
																				},
																				{
																					"name": "power_1",
																					"nodeType": "YulIdentifier",
																					"src": "3496:7:1"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "3482:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3482:22:1"
																		},
																		"nodeType": "YulIf",
																		"src": "3479:55:1"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "3547:23:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nodeType": "YulIdentifier",
																					"src": "3559:4:1"
																				},
																				{
																					"name": "base",
																					"nodeType": "YulIdentifier",
																					"src": "3565:4:1"
																				}
																			],
																			"functionName": {
																				"name": "mul",
																				"nodeType": "YulIdentifier",
																				"src": "3555:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3555:15:1"
																		},
																		"variableNames": [
																			{
																				"name": "base",
																				"nodeType": "YulIdentifier",
																				"src": "3547:4:1"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "3583:34:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "power_1",
																					"nodeType": "YulIdentifier",
																					"src": "3599:7:1"
																				},
																				{
																					"name": "exponent",
																					"nodeType": "YulIdentifier",
																					"src": "3608:8:1"
																				}
																			],
																			"functionName": {
																				"name": "shr",
																				"nodeType": "YulIdentifier",
																				"src": "3595:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3595:22:1"
																		},
																		"variableNames": [
																			{
																				"name": "exponent",
																				"nodeType": "YulIdentifier",
																				"src": "3583:8:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nodeType": "YulIdentifier",
																		"src": "3368:8:1"
																	},
																	{
																		"name": "power_1",
																		"nodeType": "YulIdentifier",
																		"src": "3378:7:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3365:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3365:21:1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "3387:3:1",
																"statements": []
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "3361:3:1",
																"statements": []
															},
															"src": "3357:270:1"
														}
													]
												},
												"name": "checked_exp_helper",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "_base",
														"nodeType": "YulTypedName",
														"src": "3239:5:1",
														"type": ""
													},
													{
														"name": "exponent",
														"nodeType": "YulTypedName",
														"src": "3246:8:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nodeType": "YulTypedName",
														"src": "3259:5:1",
														"type": ""
													},
													{
														"name": "base",
														"nodeType": "YulTypedName",
														"src": "3266:4:1",
														"type": ""
													}
												],
												"src": "3211:422:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3697:747:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3735:52:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "3749:10:1",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "3758:1:1",
																			"type": "",
																			"value": "1"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nodeType": "YulIdentifier",
																				"src": "3749:5:1"
																			}
																		]
																	},
																	{
																		"nodeType": "YulLeave",
																		"src": "3772:5:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nodeType": "YulIdentifier",
																		"src": "3717:8:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3710:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3710:16:1"
															},
															"nodeType": "YulIf",
															"src": "3707:80:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3820:52:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "3834:10:1",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "3843:1:1",
																			"type": "",
																			"value": "0"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nodeType": "YulIdentifier",
																				"src": "3834:5:1"
																			}
																		]
																	},
																	{
																		"nodeType": "YulLeave",
																		"src": "3857:5:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "base",
																		"nodeType": "YulIdentifier",
																		"src": "3806:4:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3799:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3799:12:1"
															},
															"nodeType": "YulIf",
															"src": "3796:76:1"
														},
														{
															"cases": [
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "3908:52:1",
																		"statements": [
																			{
																				"nodeType": "YulAssignment",
																				"src": "3922:10:1",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3931:1:1",
																					"type": "",
																					"value": "1"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nodeType": "YulIdentifier",
																						"src": "3922:5:1"
																					}
																				]
																			},
																			{
																				"nodeType": "YulLeave",
																				"src": "3945:5:1"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "3901:59:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3906:1:1",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "3976:123:1",
																		"statements": [
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "4011:22:1",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nodeType": "YulIdentifier",
																									"src": "4013:16:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "4013:18:1"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "4013:18:1"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "exponent",
																							"nodeType": "YulIdentifier",
																							"src": "3996:8:1"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "4006:3:1",
																							"type": "",
																							"value": "255"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nodeType": "YulIdentifier",
																						"src": "3993:2:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3993:17:1"
																				},
																				"nodeType": "YulIf",
																				"src": "3990:43:1"
																			},
																			{
																				"nodeType": "YulAssignment",
																				"src": "4046:25:1",
																				"value": {
																					"arguments": [
																						{
																							"name": "exponent",
																							"nodeType": "YulIdentifier",
																							"src": "4059:8:1"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "4069:1:1",
																							"type": "",
																							"value": "1"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "4055:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4055:16:1"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nodeType": "YulIdentifier",
																						"src": "4046:5:1"
																					}
																				]
																			},
																			{
																				"nodeType": "YulLeave",
																				"src": "4084:5:1"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "3969:130:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3974:1:1",
																		"type": "",
																		"value": "2"
																	}
																}
															],
															"expression": {
																"name": "base",
																"nodeType": "YulIdentifier",
																"src": "3888:4:1"
															},
															"nodeType": "YulSwitch",
															"src": "3881:218:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4197:70:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "4211:28:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nodeType": "YulIdentifier",
																					"src": "4224:4:1"
																				},
																				{
																					"name": "exponent",
																					"nodeType": "YulIdentifier",
																					"src": "4230:8:1"
																				}
																			],
																			"functionName": {
																				"name": "exp",
																				"nodeType": "YulIdentifier",
																				"src": "4220:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4220:19:1"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nodeType": "YulIdentifier",
																				"src": "4211:5:1"
																			}
																		]
																	},
																	{
																		"nodeType": "YulLeave",
																		"src": "4252:5:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nodeType": "YulIdentifier",
																						"src": "4121:4:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4127:2:1",
																						"type": "",
																						"value": "11"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "4118:2:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4118:12:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nodeType": "YulIdentifier",
																						"src": "4135:8:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4145:2:1",
																						"type": "",
																						"value": "78"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "4132:2:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4132:16:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "4114:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4114:35:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nodeType": "YulIdentifier",
																						"src": "4158:4:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4164:3:1",
																						"type": "",
																						"value": "307"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "4155:2:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4155:13:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nodeType": "YulIdentifier",
																						"src": "4173:8:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4183:2:1",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "4170:2:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4170:16:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "4151:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4151:36:1"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "4111:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4111:77:1"
															},
															"nodeType": "YulIf",
															"src": "4108:159:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4276:57:1",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nodeType": "YulIdentifier",
																		"src": "4318:4:1"
																	},
																	{
																		"name": "exponent",
																		"nodeType": "YulIdentifier",
																		"src": "4324:8:1"
																	}
																],
																"functionName": {
																	"name": "checked_exp_helper",
																	"nodeType": "YulIdentifier",
																	"src": "4299:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4299:34:1"
															},
															"variables": [
																{
																	"name": "power_1",
																	"nodeType": "YulTypedName",
																	"src": "4280:7:1",
																	"type": ""
																},
																{
																	"name": "base_1",
																	"nodeType": "YulTypedName",
																	"src": "4289:6:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4378:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "4380:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4380:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4380:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "power_1",
																		"nodeType": "YulIdentifier",
																		"src": "4348:7:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4365:1:1",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "4361:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4361:6:1"
																			},
																			{
																				"name": "base_1",
																				"nodeType": "YulIdentifier",
																				"src": "4369:6:1"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nodeType": "YulIdentifier",
																			"src": "4357:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4357:19:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4345:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4345:32:1"
															},
															"nodeType": "YulIf",
															"src": "4342:58:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4409:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "power_1",
																		"nodeType": "YulIdentifier",
																		"src": "4422:7:1"
																	},
																	{
																		"name": "base_1",
																		"nodeType": "YulIdentifier",
																		"src": "4431:6:1"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "4418:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4418:20:1"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nodeType": "YulIdentifier",
																	"src": "4409:5:1"
																}
															]
														}
													]
												},
												"name": "checked_exp_unsigned",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nodeType": "YulTypedName",
														"src": "3668:4:1",
														"type": ""
													},
													{
														"name": "exponent",
														"nodeType": "YulTypedName",
														"src": "3674:8:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nodeType": "YulTypedName",
														"src": "3687:5:1",
														"type": ""
													}
												],
												"src": "3638:806:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4517:72:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4527:56:1",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nodeType": "YulIdentifier",
																		"src": "4557:4:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "exponent",
																				"nodeType": "YulIdentifier",
																				"src": "4567:8:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4577:4:1",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "4563:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4563:19:1"
																	}
																],
																"functionName": {
																	"name": "checked_exp_unsigned",
																	"nodeType": "YulIdentifier",
																	"src": "4536:20:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4536:47:1"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nodeType": "YulIdentifier",
																	"src": "4527:5:1"
																}
															]
														}
													]
												},
												"name": "checked_exp_t_uint256_t_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nodeType": "YulTypedName",
														"src": "4488:4:1",
														"type": ""
													},
													{
														"name": "exponent",
														"nodeType": "YulTypedName",
														"src": "4494:8:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nodeType": "YulTypedName",
														"src": "4507:5:1",
														"type": ""
													}
												],
												"src": "4449:140:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4646:116:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4656:20:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "4671:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "4674:1:1"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "4667:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4667:9:1"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "4656:7:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4734:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "4736:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4736:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4736:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "4705:1:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "4698:6:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4698:9:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nodeType": "YulIdentifier",
																						"src": "4712:1:1"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nodeType": "YulIdentifier",
																								"src": "4719:7:1"
																							},
																							{
																								"name": "x",
																								"nodeType": "YulIdentifier",
																								"src": "4728:1:1"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nodeType": "YulIdentifier",
																							"src": "4715:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "4715:15:1"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nodeType": "YulIdentifier",
																					"src": "4709:2:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4709:22:1"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nodeType": "YulIdentifier",
																			"src": "4695:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4695:37:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4688:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4688:45:1"
															},
															"nodeType": "YulIf",
															"src": "4685:71:1"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "4625:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "4628:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "4634:7:1",
														"type": ""
													}
												],
												"src": "4594:168:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4941:227:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4958:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4969:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4951:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4951:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4951:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4992:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5003:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4988:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4988:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5008:2:1",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4981:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4981:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4981:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5031:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5042:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5027:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5027:18:1"
																	},
																	{
																		"hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5047:34:1",
																		"type": "",
																		"value": "ERC20: decreased allowance below"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5020:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5020:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5020:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5102:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5113:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5098:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5098:18:1"
																	},
																	{
																		"hexValue": "207a65726f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5118:7:1",
																		"type": "",
																		"value": " zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5091:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5091:35:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5091:35:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5135:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5147:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5158:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5143:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5143:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5135:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4918:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4932:4:1",
														"type": ""
													}
												],
												"src": "4767:401:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5347:226:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5364:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5375:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5357:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5357:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5357:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5398:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5409:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5394:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5394:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5414:2:1",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5387:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5387:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5387:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5437:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5448:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5433:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5433:18:1"
																	},
																	{
																		"hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f20616464",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5453:34:1",
																		"type": "",
																		"value": "ERC20: approve from the zero add"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5426:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5426:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5426:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5508:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5519:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5504:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5504:18:1"
																	},
																	{
																		"hexValue": "72657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5524:6:1",
																		"type": "",
																		"value": "ress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5497:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5497:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5497:34:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5540:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5552:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5563:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5548:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5548:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5540:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5324:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5338:4:1",
														"type": ""
													}
												],
												"src": "5173:400:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5752:224:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5769:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5780:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5762:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5762:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5762:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5803:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5814:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5799:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5799:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5819:2:1",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5792:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5792:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5792:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5842:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5853:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5838:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5838:18:1"
																	},
																	{
																		"hexValue": "45524332303a20617070726f766520746f20746865207a65726f206164647265",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5858:34:1",
																		"type": "",
																		"value": "ERC20: approve to the zero addre"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5831:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5831:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5831:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5913:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5924:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5909:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5909:18:1"
																	},
																	{
																		"hexValue": "7373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5929:4:1",
																		"type": "",
																		"value": "ss"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5902:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5902:32:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5902:32:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5943:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5955:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5966:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5951:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5951:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5943:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5729:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5743:4:1",
														"type": ""
													}
												],
												"src": "5578:398:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6155:179:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6172:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6183:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6165:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6165:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6165:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6206:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6217:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6202:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6202:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6222:2:1",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6195:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6195:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6195:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6245:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6256:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6241:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6241:18:1"
																	},
																	{
																		"hexValue": "45524332303a20696e73756666696369656e7420616c6c6f77616e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6261:31:1",
																		"type": "",
																		"value": "ERC20: insufficient allowance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6234:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6234:59:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6234:59:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6302:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6314:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6325:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6310:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6310:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6302:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6132:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6146:4:1",
														"type": ""
													}
												],
												"src": "5981:353:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6513:227:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6530:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6541:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6523:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6523:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6523:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6564:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6575:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6560:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6560:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6580:2:1",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6553:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6553:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6553:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6603:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6614:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6599:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6599:18:1"
																	},
																	{
																		"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f206164",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6619:34:1",
																		"type": "",
																		"value": "ERC20: transfer from the zero ad"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6592:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6592:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6592:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6674:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6685:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6670:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6670:18:1"
																	},
																	{
																		"hexValue": "6472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6690:7:1",
																		"type": "",
																		"value": "dress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6663:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6663:35:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6663:35:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6707:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6719:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6730:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6715:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6715:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6707:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6490:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6504:4:1",
														"type": ""
													}
												],
												"src": "6339:401:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6919:225:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6936:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6947:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6929:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6929:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6929:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6970:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6981:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6966:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6966:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6986:2:1",
																		"type": "",
																		"value": "35"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6959:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6959:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6959:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7009:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7020:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7005:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7005:18:1"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7025:34:1",
																		"type": "",
																		"value": "ERC20: transfer to the zero addr"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6998:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6998:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6998:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7080:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7091:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7076:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7076:18:1"
																	},
																	{
																		"hexValue": "657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7096:5:1",
																		"type": "",
																		"value": "ess"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7069:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7069:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7069:33:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7111:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7123:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7134:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7119:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7119:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7111:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6896:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6910:4:1",
														"type": ""
													}
												],
												"src": "6745:399:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7323:228:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7340:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7351:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7333:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7333:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7333:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7374:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7385:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7370:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7370:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7390:2:1",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7363:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7363:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7363:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7413:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7424:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7409:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7409:18:1"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7429:34:1",
																		"type": "",
																		"value": "ERC20: transfer amount exceeds b"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7402:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7402:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7402:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7484:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7495:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7480:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7480:18:1"
																	},
																	{
																		"hexValue": "616c616e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7500:8:1",
																		"type": "",
																		"value": "alance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7473:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7473:36:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7473:36:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7518:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7530:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7541:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7526:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7526:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7518:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7300:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7314:4:1",
														"type": ""
													}
												],
												"src": "7149:402:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7730:181:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7747:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7758:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7740:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7740:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7740:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7781:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7792:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7777:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7777:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7797:2:1",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7770:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7770:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7770:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7820:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7831:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7816:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7816:18:1"
																	},
																	{
																		"hexValue": "45524332303a206d696e7420746f20746865207a65726f2061646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7836:33:1",
																		"type": "",
																		"value": "ERC20: mint to the zero address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7809:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7809:61:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7809:61:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7879:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7891:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7902:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7887:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7887:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7879:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7707:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7721:4:1",
														"type": ""
													}
												],
												"src": "7556:355:1"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, _1)\n        let length := mload(value0)\n        mstore(add(headStart, _1), length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n        }\n        mstore(add(add(headStart, length), 64), 0)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function checked_exp_helper(_base, exponent) -> power, base\n    {\n        let power_1 := 1\n        power := power_1\n        base := _base\n        for { } gt(exponent, power_1) { }\n        {\n            if gt(base, div(not(0), base)) { panic_error_0x11() }\n            if and(exponent, power_1) { power := mul(power, base) }\n            base := mul(base, base)\n            exponent := shr(power_1, exponent)\n        }\n    }\n    function checked_exp_unsigned(base, exponent) -> power\n    {\n        if iszero(exponent)\n        {\n            power := 1\n            leave\n        }\n        if iszero(base)\n        {\n            power := 0\n            leave\n        }\n        switch base\n        case 1 {\n            power := 1\n            leave\n        }\n        case 2 {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := shl(exponent, 1)\n            leave\n        }\n        if or(and(lt(base, 11), lt(exponent, 78)), and(lt(base, 307), lt(exponent, 32)))\n        {\n            power := exp(base, exponent)\n            leave\n        }\n        let power_1, base_1 := checked_exp_helper(base, exponent)\n        if gt(power_1, div(not(0), base_1)) { panic_error_0x11() }\n        power := mul(power_1, base_1)\n    }\n    function checked_exp_t_uint256_t_uint8(base, exponent) -> power\n    {\n        power := checked_exp_unsigned(base, and(exponent, 0xff))\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        product := mul(x, y)\n        if iszero(or(iszero(x), eq(y, div(product, x)))) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: decreased allowance below\")\n        mstore(add(headStart, 96), \" zero\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"ERC20: approve from the zero add\")\n        mstore(add(headStart, 96), \"ress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ERC20: approve to the zero addre\")\n        mstore(add(headStart, 96), \"ss\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"ERC20: insufficient allowance\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: transfer from the zero ad\")\n        mstore(add(headStart, 96), \"dress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"ERC20: transfer to the zero addr\")\n        mstore(add(headStart, 96), \"ess\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"ERC20: transfer amount exceeds b\")\n        mstore(add(headStart, 96), \"alance\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"ERC20: mint to the zero address\")\n        tail := add(headStart, 96)\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b50600436106100f0575f3560e01c806370a0823111610093578063a9059cbb11610063578063a9059cbb146101ff578063beabacc814610212578063cfba4fe014610225578063dd62ed3e14610238575f80fd5b806370a082311461019157806395d89b41146101b9578063a457c2d7146101c1578063a5de3619146101d4575f80fd5b806323b872dd116100ce57806323b872dd14610147578063313ce5671461015a57806339509351146101695780636a6278421461017c575f80fd5b806306fdde03146100f4578063095ea7b31461011257806318160ddd14610135575b5f80fd5b6100fc61024b565b604051610109919061084f565b60405180910390f35b6101256101203660046108b5565b6102db565b6040519015158152602001610109565b6002545b604051908152602001610109565b6101256101553660046108dd565b6102f4565b60405160128152602001610109565b6101256101773660046108b5565b610317565b61018f61018a366004610916565b610338565b005b61013961019f366004610916565b6001600160a01b03165f9081526020819052604090205490565b6100fc61035e565b6101256101cf3660046108b5565b61036d565b6005546101e7906001600160a01b031681565b6040516001600160a01b039091168152602001610109565b61012561020d3660046108b5565b6103ec565b61018f6102203660046108dd565b6103f9565b610139610233366004610916565b610409565b61013961024636600461092f565b61042b565b60606003805461025a90610960565b80601f016020809104026020016040519081016040528092919081815260200182805461028690610960565b80156102d15780601f106102a8576101008083540402835291602001916102d1565b820191905f5260205f20905b8154815290600101906020018083116102b457829003601f168201915b5050505050905090565b5f336102e8818585610455565b60019150505b92915050565b5f33610301858285610578565b61030c8585856105f0565b506001949350505050565b5f336102e8818585610329838361042b565b61033391906109ac565b610455565b61035b816103486012600a610a9f565b6103569063042c1d80610aad565b610792565b50565b60606004805461025a90610960565b5f338161037a828661042b565b9050838110156103df5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b61030c8286868403610455565b5f336102e88185856105f0565b6104048383836105f0565b505050565b6001600160a01b0381165f9081526020819052604081205481905b9392505050565b6001600160a01b039182165f90815260016020908152604080832093909416825291909152205490565b6001600160a01b0383166104b75760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016103d6565b6001600160a01b0382166105185760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016103d6565b6001600160a01b038381165f8181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b5f610583848461042b565b90505f1981146105ea57818110156105dd5760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e636500000060448201526064016103d6565b6105ea8484848403610455565b50505050565b6001600160a01b0383166106545760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016103d6565b6001600160a01b0382166106b65760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016103d6565b6001600160a01b0383165f908152602081905260409020548181101561072d5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016103d6565b6001600160a01b038481165f81815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a36105ea565b6001600160a01b0382166107e85760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064016103d6565b8060025f8282546107f991906109ac565b90915550506001600160a01b0382165f81815260208181526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b5f6020808352835180828501525f5b8181101561087a5785810183015185820160400152820161085e565b505f604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b03811681146108b0575f80fd5b919050565b5f80604083850312156108c6575f80fd5b6108cf8361089a565b946020939093013593505050565b5f805f606084860312156108ef575f80fd5b6108f88461089a565b92506109066020850161089a565b9150604084013590509250925092565b5f60208284031215610926575f80fd5b6104248261089a565b5f8060408385031215610940575f80fd5b6109498361089a565b91506109576020840161089a565b90509250929050565b600181811c9082168061097457607f821691505b60208210810361099257634e487b7160e01b5f52602260045260245ffd5b50919050565b634e487b7160e01b5f52601160045260245ffd5b808201808211156102ee576102ee610998565b600181815b808511156109f957815f19048211156109df576109df610998565b808516156109ec57918102915b93841c93908002906109c4565b509250929050565b5f82610a0f575060016102ee565b81610a1b57505f6102ee565b8160018114610a315760028114610a3b57610a57565b60019150506102ee565b60ff841115610a4c57610a4c610998565b50506001821b6102ee565b5060208310610133831016604e8410600b8410161715610a7a575081810a6102ee565b610a8483836109bf565b805f1904821115610a9757610a97610998565b029392505050565b5f61042460ff841683610a01565b80820281158282048414176102ee576102ee61099856fea26469706673582212207551aaf1fd40ad383e26f1f0d1ef78b518f5eed848367bdb7dde76c88b0ed9e464736f6c63430008140033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xF0 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x93 JUMPI DUP1 PUSH4 0xA9059CBB GT PUSH2 0x63 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x1FF JUMPI DUP1 PUSH4 0xBEABACC8 EQ PUSH2 0x212 JUMPI DUP1 PUSH4 0xCFBA4FE0 EQ PUSH2 0x225 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x238 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x191 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1B9 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x1C1 JUMPI DUP1 PUSH4 0xA5DE3619 EQ PUSH2 0x1D4 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0xCE JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x147 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x15A JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x169 JUMPI DUP1 PUSH4 0x6A627842 EQ PUSH2 0x17C JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xF4 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x112 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x135 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xFC PUSH2 0x24B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x109 SWAP2 SWAP1 PUSH2 0x84F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x125 PUSH2 0x120 CALLDATASIZE PUSH1 0x4 PUSH2 0x8B5 JUMP JUMPDEST PUSH2 0x2DB JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x109 JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x109 JUMP JUMPDEST PUSH2 0x125 PUSH2 0x155 CALLDATASIZE PUSH1 0x4 PUSH2 0x8DD JUMP JUMPDEST PUSH2 0x2F4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x109 JUMP JUMPDEST PUSH2 0x125 PUSH2 0x177 CALLDATASIZE PUSH1 0x4 PUSH2 0x8B5 JUMP JUMPDEST PUSH2 0x317 JUMP JUMPDEST PUSH2 0x18F PUSH2 0x18A CALLDATASIZE PUSH1 0x4 PUSH2 0x916 JUMP JUMPDEST PUSH2 0x338 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x139 PUSH2 0x19F CALLDATASIZE PUSH1 0x4 PUSH2 0x916 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xFC PUSH2 0x35E JUMP JUMPDEST PUSH2 0x125 PUSH2 0x1CF CALLDATASIZE PUSH1 0x4 PUSH2 0x8B5 JUMP JUMPDEST PUSH2 0x36D JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH2 0x1E7 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x109 JUMP JUMPDEST PUSH2 0x125 PUSH2 0x20D CALLDATASIZE PUSH1 0x4 PUSH2 0x8B5 JUMP JUMPDEST PUSH2 0x3EC JUMP JUMPDEST PUSH2 0x18F PUSH2 0x220 CALLDATASIZE PUSH1 0x4 PUSH2 0x8DD JUMP JUMPDEST PUSH2 0x3F9 JUMP JUMPDEST PUSH2 0x139 PUSH2 0x233 CALLDATASIZE PUSH1 0x4 PUSH2 0x916 JUMP JUMPDEST PUSH2 0x409 JUMP JUMPDEST PUSH2 0x139 PUSH2 0x246 CALLDATASIZE PUSH1 0x4 PUSH2 0x92F JUMP JUMPDEST PUSH2 0x42B JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x25A SWAP1 PUSH2 0x960 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x286 SWAP1 PUSH2 0x960 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2D1 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2A8 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2D1 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2B4 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 CALLER PUSH2 0x2E8 DUP2 DUP6 DUP6 PUSH2 0x455 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER PUSH2 0x301 DUP6 DUP3 DUP6 PUSH2 0x578 JUMP JUMPDEST PUSH2 0x30C DUP6 DUP6 DUP6 PUSH2 0x5F0 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 CALLER PUSH2 0x2E8 DUP2 DUP6 DUP6 PUSH2 0x329 DUP4 DUP4 PUSH2 0x42B JUMP JUMPDEST PUSH2 0x333 SWAP2 SWAP1 PUSH2 0x9AC JUMP JUMPDEST PUSH2 0x455 JUMP JUMPDEST PUSH2 0x35B DUP2 PUSH2 0x348 PUSH1 0x12 PUSH1 0xA PUSH2 0xA9F JUMP JUMPDEST PUSH2 0x356 SWAP1 PUSH4 0x42C1D80 PUSH2 0xAAD JUMP JUMPDEST PUSH2 0x792 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x25A SWAP1 PUSH2 0x960 JUMP JUMPDEST PUSH0 CALLER DUP2 PUSH2 0x37A DUP3 DUP7 PUSH2 0x42B JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x3DF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x30C DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x455 JUMP JUMPDEST PUSH0 CALLER PUSH2 0x2E8 DUP2 DUP6 DUP6 PUSH2 0x5F0 JUMP JUMPDEST PUSH2 0x404 DUP4 DUP4 DUP4 PUSH2 0x5F0 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP2 SWAP1 JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x4B7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3D6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x518 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3D6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x583 DUP5 DUP5 PUSH2 0x42B JUMP JUMPDEST SWAP1 POP PUSH0 NOT DUP2 EQ PUSH2 0x5EA JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x5DD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3D6 JUMP JUMPDEST PUSH2 0x5EA DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x455 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x654 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3D6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x6B6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3D6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x72D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3D6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP8 DUP8 SUB SWAP1 SSTORE SWAP4 DUP8 AND DUP1 DUP4 MSTORE SWAP2 DUP5 SWAP1 KECCAK256 DUP1 SLOAD DUP8 ADD SWAP1 SSTORE SWAP3 MLOAD DUP6 DUP2 MSTORE SWAP1 SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x5EA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x7E8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3D6 JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x7F9 SWAP2 SWAP1 PUSH2 0x9AC JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD DUP7 ADD SWAP1 SSTORE MLOAD DUP5 DUP2 MSTORE PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x87A JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x85E JUMP JUMPDEST POP PUSH0 PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x8B0 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x8C6 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x8CF DUP4 PUSH2 0x89A JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x8EF JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x8F8 DUP5 PUSH2 0x89A JUMP JUMPDEST SWAP3 POP PUSH2 0x906 PUSH1 0x20 DUP6 ADD PUSH2 0x89A JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x926 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x424 DUP3 PUSH2 0x89A JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x940 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x949 DUP4 PUSH2 0x89A JUMP JUMPDEST SWAP2 POP PUSH2 0x957 PUSH1 0x20 DUP5 ADD PUSH2 0x89A JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x974 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x992 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x2EE JUMPI PUSH2 0x2EE PUSH2 0x998 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 JUMPDEST DUP1 DUP6 GT ISZERO PUSH2 0x9F9 JUMPI DUP2 PUSH0 NOT DIV DUP3 GT ISZERO PUSH2 0x9DF JUMPI PUSH2 0x9DF PUSH2 0x998 JUMP JUMPDEST DUP1 DUP6 AND ISZERO PUSH2 0x9EC JUMPI SWAP2 DUP2 MUL SWAP2 JUMPDEST SWAP4 DUP5 SHR SWAP4 SWAP1 DUP1 MUL SWAP1 PUSH2 0x9C4 JUMP JUMPDEST POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 PUSH2 0xA0F JUMPI POP PUSH1 0x1 PUSH2 0x2EE JUMP JUMPDEST DUP2 PUSH2 0xA1B JUMPI POP PUSH0 PUSH2 0x2EE JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0xA31 JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0xA3B JUMPI PUSH2 0xA57 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x2EE JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0xA4C JUMPI PUSH2 0xA4C PUSH2 0x998 JUMP JUMPDEST POP POP PUSH1 0x1 DUP3 SHL PUSH2 0x2EE JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0xA7A JUMPI POP DUP2 DUP2 EXP PUSH2 0x2EE JUMP JUMPDEST PUSH2 0xA84 DUP4 DUP4 PUSH2 0x9BF JUMP JUMPDEST DUP1 PUSH0 NOT DIV DUP3 GT ISZERO PUSH2 0xA97 JUMPI PUSH2 0xA97 PUSH2 0x998 JUMP JUMPDEST MUL SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x424 PUSH1 0xFF DUP5 AND DUP4 PUSH2 0xA01 JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x2EE JUMPI PUSH2 0x2EE PUSH2 0x998 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH22 0x51AAF1FD40AD383E26F1F0D1EF78B518F5EED848367B 0xDB PUSH30 0xDE76C88B0ED9E464736F6C63430008140033000000000000000000000000 ",
							"sourceMap": "17291:507:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6539:98;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;8825:197;;;;;;:::i;:::-;;:::i;:::-;;;1169:14:1;;1162:22;1144:41;;1132:2;1117:18;8825:197:0;1004:187:1;7636:106:0;7723:12;;7636:106;;;1342:25:1;;;1330:2;1315:18;7636:106:0;1196:177:1;9584:256:0;;;;;;:::i;:::-;;:::i;7485:91::-;;;7567:2;1853:36:1;;1841:2;1826:18;7485:91:0;1711:184:1;10235:234:0;;;;;;:::i;:::-;;:::i;17441:98::-;;;;;;:::i;:::-;;:::i;:::-;;7800:125;;;;;;:::i;:::-;-1:-1:-1;;;;;7900:18:0;7874:7;7900:18;;;;;;;;;;;;7800:125;6750:102;;;:::i;10956:427::-;;;;;;:::i;:::-;;:::i;17330:21::-;;;;;-1:-1:-1;;;;;17330:21:0;;;;;;-1:-1:-1;;;;;2255:32:1;;;2237:51;;2225:2;2210:18;17330:21:0;2091:203:1;8121:189:0;;;;;;:::i;:::-;;:::i;17686:110::-;;;;;;:::i;:::-;;:::i;17545:135::-;;;;;;:::i;:::-;;:::i;8368:149::-;;;;;;:::i;:::-;;:::i;6539:98::-;6593:13;6625:5;6618:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6539:98;:::o;8825:197::-;8908:4;4322:10;8962:32;4322:10;8978:7;8987:6;8962:8;:32::i;:::-;9011:4;9004:11;;;8825:197;;;;;:::o;9584:256::-;9681:4;4322:10;9737:38;9753:4;4322:10;9768:6;9737:15;:38::i;:::-;9785:27;9795:4;9801:2;9805:6;9785:9;:27::i;:::-;-1:-1:-1;9829:4:0;;9584:256;-1:-1:-1;;;;9584:256:0:o;10235:234::-;10323:4;4322:10;10377:64;4322:10;10393:7;10430:10;10402:25;4322:10;10393:7;10402:9;:25::i;:::-;:38;;;;:::i;:::-;10377:8;:64::i;17441:98::-;17489:43;17495:5;17514:16;7567:2;17514;:16;:::i;:::-;17502:29;;:8;:29;:::i;:::-;17489:5;:43::i;:::-;17441:98;:::o;6750:102::-;6806:13;6838:7;6831:14;;;;;:::i;10956:427::-;11049:4;4322:10;11049:4;11130:25;4322:10;11147:7;11130:9;:25::i;:::-;11103:52;;11193:15;11173:16;:35;;11165:85;;;;-1:-1:-1;;;11165:85:0;;4969:2:1;11165:85:0;;;4951:21:1;5008:2;4988:18;;;4981:30;5047:34;5027:18;;;5020:62;-1:-1:-1;;;5098:18:1;;;5091:35;5143:19;;11165:85:0;;;;;;;;;11284:60;11293:5;11300:7;11328:15;11309:16;:34;11284:8;:60::i;8121:189::-;8200:4;4322:10;8254:28;4322:10;8271:2;8275:6;8254:9;:28::i;17686:110::-;17762:27;17772:4;17778:2;17782:6;17762:9;:27::i;:::-;17686:110;;;:::o;17545:135::-;-1:-1:-1;;;;;7900:18:0;;17603:4;7900:18;;;;;;;;;;;17603:4;;17634:15;17619:30;17545:135;-1:-1:-1;;;17545:135:0:o;8368:149::-;-1:-1:-1;;;;;8483:18:0;;;8457:7;8483:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;8368:149::o;14838:340::-;-1:-1:-1;;;;;14939:19:0;;14931:68;;;;-1:-1:-1;;;14931:68:0;;5375:2:1;14931:68:0;;;5357:21:1;5414:2;5394:18;;;5387:30;5453:34;5433:18;;;5426:62;-1:-1:-1;;;5504:18:1;;;5497:34;5548:19;;14931:68:0;5173:400:1;14931:68:0;-1:-1:-1;;;;;15017:21:0;;15009:68;;;;-1:-1:-1;;;15009:68:0;;5780:2:1;15009:68:0;;;5762:21:1;5819:2;5799:18;;;5792:30;5858:34;5838:18;;;5831:62;-1:-1:-1;;;5909:18:1;;;5902:32;5951:19;;15009:68:0;5578:398:1;15009:68:0;-1:-1:-1;;;;;15088:18:0;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;15139:32;;1342:25:1;;;15139:32:0;;1315:18:1;15139:32:0;;;;;;;14838:340;;;:::o;15459:411::-;15559:24;15586:25;15596:5;15603:7;15586:9;:25::i;:::-;15559:52;;-1:-1:-1;;15625:16:0;:37;15621:243;;15706:6;15686:16;:26;;15678:68;;;;-1:-1:-1;;;15678:68:0;;6183:2:1;15678:68:0;;;6165:21:1;6222:2;6202:18;;;6195:30;6261:31;6241:18;;;6234:59;6310:18;;15678:68:0;5981:353:1;15678:68:0;15788:51;15797:5;15804:7;15832:6;15813:16;:25;15788:8;:51::i;:::-;15549:321;15459:411;;;:::o;11837:788::-;-1:-1:-1;;;;;11933:18:0;;11925:68;;;;-1:-1:-1;;;11925:68:0;;6541:2:1;11925:68:0;;;6523:21:1;6580:2;6560:18;;;6553:30;6619:34;6599:18;;;6592:62;-1:-1:-1;;;6670:18:1;;;6663:35;6715:19;;11925:68:0;6339:401:1;11925:68:0;-1:-1:-1;;;;;12011:16:0;;12003:64;;;;-1:-1:-1;;;12003:64:0;;6947:2:1;12003:64:0;;;6929:21:1;6986:2;6966:18;;;6959:30;7025:34;7005:18;;;6998:62;-1:-1:-1;;;7076:18:1;;;7069:33;7119:19;;12003:64:0;6745:399:1;12003:64:0;-1:-1:-1;;;;;12149:15:0;;12127:19;12149:15;;;;;;;;;;;12182:21;;;;12174:72;;;;-1:-1:-1;;;12174:72:0;;7351:2:1;12174:72:0;;;7333:21:1;7390:2;7370:18;;;7363:30;7429:34;7409:18;;;7402:62;-1:-1:-1;;;7480:18:1;;;7473:36;7526:19;;12174:72:0;7149:402:1;12174:72:0;-1:-1:-1;;;;;12280:15:0;;;:9;:15;;;;;;;;;;;12298:20;;;12280:38;;12495:13;;;;;;;;;;:23;;;;;;12544:26;;1342:25:1;;;12495:13:0;;12544:26;;1315:18:1;12544:26:0;;;;;;;12581:37;17686:110;12901:535;-1:-1:-1;;;;;12984:21:0;;12976:65;;;;-1:-1:-1;;;12976:65:0;;7758:2:1;12976:65:0;;;7740:21:1;7797:2;7777:18;;;7770:30;7836:33;7816:18;;;7809:61;7887:18;;12976:65:0;7556:355:1;12976:65:0;13128:6;13112:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;13280:18:0;;:9;:18;;;;;;;;;;;:28;;;;;;13333:37;1342:25:1;;;13333:37:0;;1315:18:1;13333:37:0;;;;;;;12901:535;;:::o;14:548:1:-;126:4;155:2;184;173:9;166:21;216:6;210:13;259:6;254:2;243:9;239:18;232:34;284:1;294:140;308:6;305:1;302:13;294:140;;;403:14;;;399:23;;393:30;369:17;;;388:2;365:26;358:66;323:10;;294:140;;;298:3;483:1;478:2;469:6;458:9;454:22;450:31;443:42;553:2;546;542:7;537:2;529:6;525:15;521:29;510:9;506:45;502:54;494:62;;;;14:548;;;;:::o;567:173::-;635:20;;-1:-1:-1;;;;;684:31:1;;674:42;;664:70;;730:1;727;720:12;664:70;567:173;;;:::o;745:254::-;813:6;821;874:2;862:9;853:7;849:23;845:32;842:52;;;890:1;887;880:12;842:52;913:29;932:9;913:29;:::i;:::-;903:39;989:2;974:18;;;;961:32;;-1:-1:-1;;;745:254:1:o;1378:328::-;1455:6;1463;1471;1524:2;1512:9;1503:7;1499:23;1495:32;1492:52;;;1540:1;1537;1530:12;1492:52;1563:29;1582:9;1563:29;:::i;:::-;1553:39;;1611:38;1645:2;1634:9;1630:18;1611:38;:::i;:::-;1601:48;;1696:2;1685:9;1681:18;1668:32;1658:42;;1378:328;;;;;:::o;1900:186::-;1959:6;2012:2;2000:9;1991:7;1987:23;1983:32;1980:52;;;2028:1;2025;2018:12;1980:52;2051:29;2070:9;2051:29;:::i;2299:260::-;2367:6;2375;2428:2;2416:9;2407:7;2403:23;2399:32;2396:52;;;2444:1;2441;2434:12;2396:52;2467:29;2486:9;2467:29;:::i;:::-;2457:39;;2515:38;2549:2;2538:9;2534:18;2515:38;:::i;:::-;2505:48;;2299:260;;;;;:::o;2564:380::-;2643:1;2639:12;;;;2686;;;2707:61;;2761:4;2753:6;2749:17;2739:27;;2707:61;2814:2;2806:6;2803:14;2783:18;2780:38;2777:161;;2860:10;2855:3;2851:20;2848:1;2841:31;2895:4;2892:1;2885:15;2923:4;2920:1;2913:15;2777:161;;2564:380;;;:::o;2949:127::-;3010:10;3005:3;3001:20;2998:1;2991:31;3041:4;3038:1;3031:15;3065:4;3062:1;3055:15;3081:125;3146:9;;;3167:10;;;3164:36;;;3180:18;;:::i;3211:422::-;3300:1;3343:5;3300:1;3357:270;3378:7;3368:8;3365:21;3357:270;;;3437:4;3433:1;3429:6;3425:17;3419:4;3416:27;3413:53;;;3446:18;;:::i;:::-;3496:7;3486:8;3482:22;3479:55;;;3516:16;;;;3479:55;3595:22;;;;3555:15;;;;3357:270;;;3361:3;3211:422;;;;;:::o;3638:806::-;3687:5;3717:8;3707:80;;-1:-1:-1;3758:1:1;3772:5;;3707:80;3806:4;3796:76;;-1:-1:-1;3843:1:1;3857:5;;3796:76;3888:4;3906:1;3901:59;;;;3974:1;3969:130;;;;3881:218;;3901:59;3931:1;3922:10;;3945:5;;;3969:130;4006:3;3996:8;3993:17;3990:43;;;4013:18;;:::i;:::-;-1:-1:-1;;4069:1:1;4055:16;;4084:5;;3881:218;;4183:2;4173:8;4170:16;4164:3;4158:4;4155:13;4151:36;4145:2;4135:8;4132:16;4127:2;4121:4;4118:12;4114:35;4111:77;4108:159;;;-1:-1:-1;4220:19:1;;;4252:5;;4108:159;4299:34;4324:8;4318:4;4299:34;:::i;:::-;4369:6;4365:1;4361:6;4357:19;4348:7;4345:32;4342:58;;;4380:18;;:::i;:::-;4418:20;;3638:806;-1:-1:-1;;;3638:806:1:o;4449:140::-;4507:5;4536:47;4577:4;4567:8;4563:19;4557:4;4536:47;:::i;4594:168::-;4667:9;;;4698;;4715:15;;;4709:22;;4695:37;4685:71;;4736:18;;:::i"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "562000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"admins()": "2425",
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "24647",
								"balanceOf(address)": "2560",
								"decimals()": "221",
								"decreaseAllowance(address,uint256)": "27012",
								"findBalance(address)": "infinite",
								"increaseAllowance(address,uint256)": "infinite",
								"mint(address)": "infinite",
								"name()": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "2348",
								"transfer(address,address,uint256)": "infinite",
								"transfer(address,uint256)": "51067",
								"transferFrom(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 17291,
									"end": 17798,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 17291,
									"end": 17798,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 17291,
									"end": 17798,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 17358,
									"end": 17435,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 17358,
									"end": 17435,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 17358,
									"end": 17435,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 17358,
									"end": 17435,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 17358,
									"end": 17435,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 17358,
									"end": 17435,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 17358,
									"end": 17435,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 17358,
									"end": 17435,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 17358,
									"end": 17435,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 17358,
									"end": 17435,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 17358,
									"end": 17435,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6361,
									"end": 6474,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 6361,
									"end": 6474,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 6361,
									"end": 6474,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 6361,
									"end": 6474,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 6361,
									"end": 6474,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 6361,
									"end": 6474,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 6361,
									"end": 6474,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6361,
									"end": 6474,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 6361,
									"end": 6474,
									"name": "PUSH",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 6361,
									"end": 6474,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6361,
									"end": 6474,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6361,
									"end": 6474,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6361,
									"end": 6474,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "43555252454E4359"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "C0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 6361,
									"end": 6474,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6361,
									"end": 6474,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6361,
									"end": 6474,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6361,
									"end": 6474,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 6361,
									"end": 6474,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 6361,
									"end": 6474,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 6361,
									"end": 6474,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 6361,
									"end": 6474,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 6361,
									"end": 6474,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 6361,
									"end": 6474,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6361,
									"end": 6474,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 6361,
									"end": 6474,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 6361,
									"end": 6474,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6361,
									"end": 6474,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6361,
									"end": 6474,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6361,
									"end": 6474,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4D41544943"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "D8"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 6361,
									"end": 6474,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6361,
									"end": 6474,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6361,
									"end": 6474,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6435,
									"end": 6440,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6427,
									"end": 6432,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 6427,
									"end": 6440,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6427,
									"end": 6440,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6427,
									"end": 6440,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 6427,
									"end": 6440,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 6427,
									"end": 6440,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6427,
									"end": 6440,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 6427,
									"end": 6440,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 6427,
									"end": 6440,
									"name": "tag",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 6427,
									"end": 6440,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 6450,
									"end": 6457,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 6450,
									"end": 6467,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 6460,
									"end": 6467,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 6450,
									"end": 6457,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 6450,
									"end": 6467,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 6450,
									"end": 6467,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 6450,
									"end": 6467,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 6450,
									"end": 6467,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 17409,
									"end": 17415,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 17409,
									"end": 17428,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 17409,
									"end": 17428,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 17409,
									"end": 17428,
									"modifierDepth": 1,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 17418,
									"end": 17428,
									"modifierDepth": 1,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 17409,
									"end": 17428,
									"modifierDepth": 1,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 17409,
									"end": 17428,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 17409,
									"end": 17428,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 17291,
									"end": 17798,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 17291,
									"end": 17798,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 14,
									"end": 141,
									"name": "tag",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 14,
									"end": 141,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 75,
									"end": 85,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B71"
								},
								{
									"begin": 70,
									"end": 73,
									"name": "PUSH",
									"source": 1,
									"value": "E0"
								},
								{
									"begin": 66,
									"end": 86,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 63,
									"end": 64,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 56,
									"end": 87,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 106,
									"end": 110,
									"name": "PUSH",
									"source": 1,
									"value": "41"
								},
								{
									"begin": 103,
									"end": 104,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 96,
									"end": 111,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 130,
									"end": 134,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 127,
									"end": 128,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 120,
									"end": 135,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 146,
									"end": 526,
									"name": "tag",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 146,
									"end": 526,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 225,
									"end": 226,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 221,
									"end": 233,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 221,
									"end": 233,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 221,
									"end": 233,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 221,
									"end": 233,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 268,
									"end": 280,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 268,
									"end": 280,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 268,
									"end": 280,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 289,
									"end": 350,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "18"
								},
								{
									"begin": 289,
									"end": 350,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 343,
									"end": 347,
									"name": "PUSH",
									"source": 1,
									"value": "7F"
								},
								{
									"begin": 335,
									"end": 341,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 331,
									"end": 348,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 321,
									"end": 348,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 321,
									"end": 348,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 289,
									"end": 350,
									"name": "tag",
									"source": 1,
									"value": "18"
								},
								{
									"begin": 289,
									"end": 350,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 396,
									"end": 398,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 388,
									"end": 394,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 385,
									"end": 399,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 365,
									"end": 383,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 362,
									"end": 400,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 359,
									"end": 520,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "19"
								},
								{
									"begin": 359,
									"end": 520,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 442,
									"end": 452,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B71"
								},
								{
									"begin": 437,
									"end": 440,
									"name": "PUSH",
									"source": 1,
									"value": "E0"
								},
								{
									"begin": 433,
									"end": 453,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 430,
									"end": 431,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 423,
									"end": 454,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 477,
									"end": 481,
									"name": "PUSH",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 474,
									"end": 475,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 467,
									"end": 482,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 505,
									"end": 509,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 502,
									"end": 503,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 495,
									"end": 510,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 359,
									"end": 520,
									"name": "tag",
									"source": 1,
									"value": "19"
								},
								{
									"begin": 359,
									"end": 520,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 359,
									"end": 520,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 146,
									"end": 526,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 146,
									"end": 526,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 146,
									"end": 526,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 146,
									"end": 526,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 657,
									"end": 1202,
									"name": "tag",
									"source": 1,
									"value": "13"
								},
								{
									"begin": 657,
									"end": 1202,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 759,
									"end": 761,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 754,
									"end": 757,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 751,
									"end": 762,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 748,
									"end": 1196,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 748,
									"end": 1196,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 748,
									"end": 1196,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 795,
									"end": 796,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 820,
									"end": 825,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 816,
									"end": 818,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 809,
									"end": 826,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 865,
									"end": 869,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 861,
									"end": 863,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 851,
									"end": 870,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": 935,
									"end": 937,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 923,
									"end": 933,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 919,
									"end": 938,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 916,
									"end": 917,
									"name": "PUSH",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 912,
									"end": 939,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 906,
									"end": 910,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 902,
									"end": 940,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 971,
									"end": 975,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 959,
									"end": 969,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 956,
									"end": 976,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 953,
									"end": 1000,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 953,
									"end": 1000,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "23"
								},
								{
									"begin": 953,
									"end": 1000,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 994,
									"end": 998,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 953,
									"end": 1000,
									"name": "tag",
									"source": 1,
									"value": "23"
								},
								{
									"begin": 953,
									"end": 1000,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1049,
									"end": 1051,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 1044,
									"end": 1047,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 1040,
									"end": 1052,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1037,
									"end": 1038,
									"name": "PUSH",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 1033,
									"end": 1053,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 1027,
									"end": 1031,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1023,
									"end": 1054,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1013,
									"end": 1054,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1013,
									"end": 1054,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1104,
									"end": 1186,
									"name": "tag",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 1104,
									"end": 1186,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1122,
									"end": 1124,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1115,
									"end": 1120,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1112,
									"end": 1125,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 1104,
									"end": 1186,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1104,
									"end": 1186,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "26"
								},
								{
									"begin": 1104,
									"end": 1186,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1167,
									"end": 1184,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1167,
									"end": 1184,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1167,
									"end": 1184,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 1148,
									"end": 1149,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1137,
									"end": 1150,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1104,
									"end": 1186,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 1104,
									"end": 1186,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1104,
									"end": 1186,
									"name": "tag",
									"source": 1,
									"value": "26"
								},
								{
									"begin": 1104,
									"end": 1186,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1108,
									"end": 1111,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1108,
									"end": 1111,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1108,
									"end": 1111,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 748,
									"end": 1196,
									"name": "tag",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 748,
									"end": 1196,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 657,
									"end": 1202,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 657,
									"end": 1202,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 657,
									"end": 1202,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 657,
									"end": 1202,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1378,
									"end": 2730,
									"name": "tag",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 1378,
									"end": 2730,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1498,
									"end": 1508,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1498,
									"end": 1508,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1520,
									"end": 1550,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1520,
									"end": 1550,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 1517,
									"end": 1573,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1517,
									"end": 1573,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "30"
								},
								{
									"begin": 1517,
									"end": 1573,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1553,
									"end": 1571,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "30"
								},
								{
									"begin": 1553,
									"end": 1571,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 1553,
									"end": 1571,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1553,
									"end": 1571,
									"name": "tag",
									"source": 1,
									"value": "30"
								},
								{
									"begin": 1553,
									"end": 1571,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1582,
									"end": 1679,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "31"
								},
								{
									"begin": 1672,
									"end": 1678,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1632,
									"end": 1670,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "32"
								},
								{
									"begin": 1664,
									"end": 1668,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 1658,
									"end": 1669,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 1632,
									"end": 1670,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 1632,
									"end": 1670,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1632,
									"end": 1670,
									"name": "tag",
									"source": 1,
									"value": "32"
								},
								{
									"begin": 1632,
									"end": 1670,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1626,
									"end": 1630,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 1582,
									"end": 1679,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "13"
								},
								{
									"begin": 1582,
									"end": 1679,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1582,
									"end": 1679,
									"name": "tag",
									"source": 1,
									"value": "31"
								},
								{
									"begin": 1582,
									"end": 1679,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1734,
									"end": 1738,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1734,
									"end": 1738,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1798,
									"end": 1800,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 1787,
									"end": 1801,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1787,
									"end": 1801,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 1815,
									"end": 1816,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1810,
									"end": 2473,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1810,
									"end": 2473,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 1810,
									"end": 2473,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "34"
								},
								{
									"begin": 1810,
									"end": 2473,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 2517,
									"end": 2518,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2534,
									"end": 2540,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 2531,
									"end": 2620,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 2531,
									"end": 2620,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "35"
								},
								{
									"begin": 2531,
									"end": 2620,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2586,
									"end": 2605,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 2586,
									"end": 2605,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 2586,
									"end": 2605,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2580,
									"end": 2606,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 2531,
									"end": 2620,
									"name": "tag",
									"source": 1,
									"value": "35"
								},
								{
									"begin": 2531,
									"end": 2620,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1335,
									"end": 1336,
									"name": "PUSH",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 1331,
									"end": 1342,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 1331,
									"end": 1342,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1331,
									"end": 1342,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 1327,
									"end": 1351,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 1323,
									"end": 1352,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 1313,
									"end": 1353,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1359,
									"end": 1360,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1355,
									"end": 1366,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 1355,
									"end": 1366,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1355,
									"end": 1366,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 1310,
									"end": 1367,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 2633,
									"end": 2714,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 2633,
									"end": 2714,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 1780,
									"end": 2724,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "26"
								},
								{
									"begin": 1780,
									"end": 2724,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1810,
									"end": 2473,
									"name": "tag",
									"source": 1,
									"value": "34"
								},
								{
									"begin": 1810,
									"end": 2473,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 604,
									"end": 605,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 597,
									"end": 611,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 597,
									"end": 611,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 597,
									"end": 611,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 641,
									"end": 645,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 628,
									"end": 646,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 628,
									"end": 646,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1846,
									"end": 1866,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 1846,
									"end": 1866,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1846,
									"end": 1866,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1964,
									"end": 2200,
									"name": "tag",
									"source": 1,
									"value": "38"
								},
								{
									"begin": 1964,
									"end": 2200,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1978,
									"end": 1985,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1975,
									"end": 1976,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1972,
									"end": 1986,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 1964,
									"end": 2200,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1964,
									"end": 2200,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1964,
									"end": 2200,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 2067,
									"end": 2086,
									"name": "DUP9",
									"source": 1
								},
								{
									"begin": 2067,
									"end": 2086,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 2067,
									"end": 2086,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2061,
									"end": 2087,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 2046,
									"end": 2088,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2046,
									"end": 2088,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 2159,
									"end": 2186,
									"name": "SWAP5",
									"source": 1
								},
								{
									"begin": 2159,
									"end": 2186,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 2159,
									"end": 2186,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2159,
									"end": 2186,
									"name": "SWAP5",
									"source": 1
								},
								{
									"begin": 2127,
									"end": 2128,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 2115,
									"end": 2129,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2115,
									"end": 2129,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2115,
									"end": 2129,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2115,
									"end": 2129,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1994,
									"end": 2013,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 1994,
									"end": 2013,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1964,
									"end": 2200,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "38"
								},
								{
									"begin": 1964,
									"end": 2200,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1964,
									"end": 2200,
									"name": "tag",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1964,
									"end": 2200,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1968,
									"end": 1971,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2228,
									"end": 2234,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 2219,
									"end": 2226,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2216,
									"end": 2235,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 2213,
									"end": 2414,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 2213,
									"end": 2414,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "41"
								},
								{
									"begin": 2213,
									"end": 2414,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 2289,
									"end": 2308,
									"name": "DUP8",
									"source": 1
								},
								{
									"begin": 2289,
									"end": 2308,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 2289,
									"end": 2308,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2283,
									"end": 2309,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2372,
									"end": 2373,
									"name": "PUSH",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 2368,
									"end": 2382,
									"name": "DUP9",
									"source": 1
								},
								{
									"begin": 2368,
									"end": 2382,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2368,
									"end": 2382,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 2384,
									"end": 2387,
									"name": "PUSH",
									"source": 1,
									"value": "F8"
								},
								{
									"begin": 2364,
									"end": 2388,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2360,
									"end": 2397,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 2356,
									"end": 2398,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 2341,
									"end": 2399,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2326,
									"end": 2400,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2326,
									"end": 2400,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 2213,
									"end": 2414,
									"name": "tag",
									"source": 1,
									"value": "41"
								},
								{
									"begin": 2213,
									"end": 2414,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2460,
									"end": 2461,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 2444,
									"end": 2458,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2444,
									"end": 2458,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2444,
									"end": 2458,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 2440,
									"end": 2462,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2427,
									"end": 2463,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2427,
									"end": 2463,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1378,
									"end": 2730,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1378,
									"end": 2730,
									"name": "tag",
									"source": 1,
									"value": "15"
								},
								{
									"begin": 1378,
									"end": 2730,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 17291,
									"end": 17798,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 17291,
									"end": 17798,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 17291,
									"end": 17798,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 17291,
									"end": 17798,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 17291,
									"end": 17798,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 17291,
									"end": 17798,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 17291,
									"end": 17798,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212207551aaf1fd40ad383e26f1f0d1ef78b518f5eed848367bdb7dde76c88b0ed9e464736f6c63430008140033",
									".code": [
										{
											"begin": 17291,
											"end": 17798,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 17291,
											"end": 17798,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17291,
											"end": 17798,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17291,
											"end": 17798,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 17291,
											"end": 17798,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17291,
											"end": 17798,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 17291,
											"end": 17798,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 17291,
											"end": 17798,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17291,
											"end": 17798,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17291,
											"end": 17798,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17291,
											"end": 17798,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 17291,
											"end": 17798,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 17291,
											"end": 17798,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17291,
											"end": 17798,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17291,
											"end": 17798,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 17291,
											"end": 17798,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 17291,
											"end": 17798,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 17291,
											"end": 17798,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 17291,
											"end": 17798,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17291,
											"end": 17798,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17291,
											"end": 17798,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 17291,
											"end": 17798,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 17291,
											"end": 17798,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 17291,
											"end": 17798,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17291,
											"end": 17798,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 17291,
											"end": 17798,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 17291,
											"end": 17798,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 17291,
											"end": 17798,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17291,
											"end": 17798,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17291,
											"end": 17798,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 17291,
											"end": 17798,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 17291,
											"end": 17798,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 17291,
											"end": 17798,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17291,
											"end": 17798,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17291,
											"end": 17798,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 17291,
											"end": 17798,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 17291,
											"end": 17798,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 17291,
											"end": 17798,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17291,
											"end": 17798,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17291,
											"end": 17798,
											"name": "PUSH",
											"source": 0,
											"value": "BEABACC8"
										},
										{
											"begin": 17291,
											"end": 17798,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 17291,
											"end": 17798,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 17291,
											"end": 17798,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17291,
											"end": 17798,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17291,
											"end": 17798,
											"name": "PUSH",
											"source": 0,
											"value": "CFBA4FE0"
										},
										{
											"begin": 17291,
											"end": 17798,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 17291,
											"end": 17798,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 17291,
											"end": 17798,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17291,
											"end": 17798,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17291,
											"end": 17798,
											"name": "PUSH",
											"source": 0,
											"value": "DD62ED3E"
										},
										{
											"begin": 17291,
											"end": 17798,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 17291,
											"end": 17798,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 17291,
											"end": 17798,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17291,
											"end": 17798,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17291,
											"end": 17798,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17291,
											"end": 17798,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 17291,
											"end": 17798,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 17291,
											"end": 17798,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17291,
											"end": 17798,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17291,
											"end": 17798,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 17291,
											"end": 17798,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 17291,
											"end": 17798,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 17291,
											"end": 17798,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17291,
											"end": 17798,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17291,
											"end": 17798,
											"name": "PUSH",
											"source": 0,
											"value": "95D89B41"
										},
										{
											"begin": 17291,
											"end": 17798,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 17291,
											"end": 17798,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 17291,
											"end": 17798,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17291,
											"end": 17798,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17291,
											"end": 17798,
											"name": "PUSH",
											"source": 0,
											"value": "A457C2D7"
										},
										{
											"begin": 17291,
											"end": 17798,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 17291,
											"end": 17798,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 17291,
											"end": 17798,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17291,
											"end": 17798,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17291,
											"end": 17798,
											"name": "PUSH",
											"source": 0,
											"value": "A5DE3619"
										},
										{
											"begin": 17291,
											"end": 17798,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 17291,
											"end": 17798,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 17291,
											"end": 17798,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17291,
											"end": 17798,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17291,
											"end": 17798,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17291,
											"end": 17798,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 17291,
											"end": 17798,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 17291,
											"end": 17798,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17291,
											"end": 17798,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17291,
											"end": 17798,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 17291,
											"end": 17798,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 17291,
											"end": 17798,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17291,
											"end": 17798,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17291,
											"end": 17798,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17291,
											"end": 17798,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 17291,
											"end": 17798,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 17291,
											"end": 17798,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 17291,
											"end": 17798,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17291,
											"end": 17798,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17291,
											"end": 17798,
											"name": "PUSH",
											"source": 0,
											"value": "313CE567"
										},
										{
											"begin": 17291,
											"end": 17798,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 17291,
											"end": 17798,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 17291,
											"end": 17798,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17291,
											"end": 17798,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17291,
											"end": 17798,
											"name": "PUSH",
											"source": 0,
											"value": "39509351"
										},
										{
											"begin": 17291,
											"end": 17798,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 17291,
											"end": 17798,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 17291,
											"end": 17798,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17291,
											"end": 17798,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17291,
											"end": 17798,
											"name": "PUSH",
											"source": 0,
											"value": "6A627842"
										},
										{
											"begin": 17291,
											"end": 17798,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 17291,
											"end": 17798,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 17291,
											"end": 17798,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17291,
											"end": 17798,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17291,
											"end": 17798,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17291,
											"end": 17798,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 17291,
											"end": 17798,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17291,
											"end": 17798,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17291,
											"end": 17798,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17291,
											"end": 17798,
											"name": "PUSH",
											"source": 0,
											"value": "6FDDE03"
										},
										{
											"begin": 17291,
											"end": 17798,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 17291,
											"end": 17798,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 17291,
											"end": 17798,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17291,
											"end": 17798,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17291,
											"end": 17798,
											"name": "PUSH",
											"source": 0,
											"value": "95EA7B3"
										},
										{
											"begin": 17291,
											"end": 17798,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 17291,
											"end": 17798,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 17291,
											"end": 17798,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17291,
											"end": 17798,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17291,
											"end": 17798,
											"name": "PUSH",
											"source": 0,
											"value": "18160DDD"
										},
										{
											"begin": 17291,
											"end": 17798,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 17291,
											"end": 17798,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 17291,
											"end": 17798,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17291,
											"end": 17798,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 17291,
											"end": 17798,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17291,
											"end": 17798,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17291,
											"end": 17798,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17291,
											"end": 17798,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 6539,
											"end": 6637,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 6539,
											"end": 6637,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6539,
											"end": 6637,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 6539,
											"end": 6637,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 6539,
											"end": 6637,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6539,
											"end": 6637,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 6539,
											"end": 6637,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6539,
											"end": 6637,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6539,
											"end": 6637,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6539,
											"end": 6637,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 6539,
											"end": 6637,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6539,
											"end": 6637,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6539,
											"end": 6637,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 6539,
											"end": 6637,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6539,
											"end": 6637,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 6539,
											"end": 6637,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6539,
											"end": 6637,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6539,
											"end": 6637,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6539,
											"end": 6637,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6539,
											"end": 6637,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6539,
											"end": 6637,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6539,
											"end": 6637,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6539,
											"end": 6637,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 8825,
											"end": 9022,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8825,
											"end": 9022,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8825,
											"end": 9022,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 8825,
											"end": 9022,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 8825,
											"end": 9022,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 8825,
											"end": 9022,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8825,
											"end": 9022,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 8825,
											"end": 9022,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8825,
											"end": 9022,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 8825,
											"end": 9022,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8825,
											"end": 9022,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 8825,
											"end": 9022,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8825,
											"end": 9022,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 8825,
											"end": 9022,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8825,
											"end": 9022,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8825,
											"end": 9022,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1169,
											"end": 1183,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1169,
											"end": 1183,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1162,
											"end": 1184,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1144,
											"end": 1185,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1144,
											"end": 1185,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1132,
											"end": 1134,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1117,
											"end": 1135,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8825,
											"end": 9022,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 1004,
											"end": 1191,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7636,
											"end": 7742,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 7636,
											"end": 7742,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7723,
											"end": 7735,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 7723,
											"end": 7735,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7636,
											"end": 7742,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 7636,
											"end": 7742,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7636,
											"end": 7742,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7636,
											"end": 7742,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1330,
											"end": 1332,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1315,
											"end": 1333,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7636,
											"end": 7742,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 1196,
											"end": 1373,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9584,
											"end": 9840,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 9584,
											"end": 9840,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9584,
											"end": 9840,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 9584,
											"end": 9840,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 9584,
											"end": 9840,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 9584,
											"end": 9840,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9584,
											"end": 9840,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 9584,
											"end": 9840,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9584,
											"end": 9840,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 9584,
											"end": 9840,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9584,
											"end": 9840,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 9584,
											"end": 9840,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7485,
											"end": 7576,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 7485,
											"end": 7576,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7485,
											"end": 7576,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7485,
											"end": 7576,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7567,
											"end": 7569,
											"name": "PUSH",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 1853,
											"end": 1889,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1853,
											"end": 1889,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1841,
											"end": 1843,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1826,
											"end": 1844,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7485,
											"end": 7576,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 1711,
											"end": 1895,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10235,
											"end": 10469,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 10235,
											"end": 10469,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10235,
											"end": 10469,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 10235,
											"end": 10469,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 10235,
											"end": 10469,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 10235,
											"end": 10469,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 10235,
											"end": 10469,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 10235,
											"end": 10469,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10235,
											"end": 10469,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 10235,
											"end": 10469,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10235,
											"end": 10469,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 10235,
											"end": 10469,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17441,
											"end": 17539,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 17441,
											"end": 17539,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17441,
											"end": 17539,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 17441,
											"end": 17539,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 17441,
											"end": 17539,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 17441,
											"end": 17539,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 17441,
											"end": 17539,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 17441,
											"end": 17539,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17441,
											"end": 17539,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 17441,
											"end": 17539,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17441,
											"end": 17539,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 17441,
											"end": 17539,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17441,
											"end": 17539,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 17441,
											"end": 17539,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17441,
											"end": 17539,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 7800,
											"end": 7925,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 7800,
											"end": 7925,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7800,
											"end": 7925,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 7800,
											"end": 7925,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 7800,
											"end": 7925,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 7800,
											"end": 7925,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7800,
											"end": 7925,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 7800,
											"end": 7925,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7800,
											"end": 7925,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 7800,
											"end": 7925,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7900,
											"end": 7918,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7874,
											"end": 7881,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7900,
											"end": 7918,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7900,
											"end": 7918,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7900,
											"end": 7918,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7900,
											"end": 7918,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7900,
											"end": 7918,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7900,
											"end": 7918,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7900,
											"end": 7918,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7900,
											"end": 7918,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7900,
											"end": 7918,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7900,
											"end": 7918,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 7900,
											"end": 7918,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7900,
											"end": 7918,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7800,
											"end": 7925,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6750,
											"end": 6852,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 6750,
											"end": 6852,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6750,
											"end": 6852,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 6750,
											"end": 6852,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 6750,
											"end": 6852,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10956,
											"end": 11383,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 10956,
											"end": 11383,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10956,
											"end": 11383,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 10956,
											"end": 11383,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 10956,
											"end": 11383,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 10956,
											"end": 11383,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 10956,
											"end": 11383,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 10956,
											"end": 11383,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10956,
											"end": 11383,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 10956,
											"end": 11383,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10956,
											"end": 11383,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 10956,
											"end": 11383,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17330,
											"end": 17351,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 17330,
											"end": 17351,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17330,
											"end": 17351,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 17330,
											"end": 17351,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 17330,
											"end": 17351,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 17330,
											"end": 17351,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17330,
											"end": 17351,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17330,
											"end": 17351,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17330,
											"end": 17351,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17330,
											"end": 17351,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 17330,
											"end": 17351,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17330,
											"end": 17351,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17330,
											"end": 17351,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2255,
											"end": 2287,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2255,
											"end": 2287,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2255,
											"end": 2287,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2288,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2288,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2225,
											"end": 2227,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2210,
											"end": 2228,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17330,
											"end": 17351,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 2091,
											"end": 2294,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8121,
											"end": 8310,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 8121,
											"end": 8310,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8121,
											"end": 8310,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 8121,
											"end": 8310,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 8121,
											"end": 8310,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 8121,
											"end": 8310,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8121,
											"end": 8310,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 8121,
											"end": 8310,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8121,
											"end": 8310,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 8121,
											"end": 8310,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8121,
											"end": 8310,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 8121,
											"end": 8310,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17686,
											"end": 17796,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 17686,
											"end": 17796,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17686,
											"end": 17796,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 17686,
											"end": 17796,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 17686,
											"end": 17796,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 17686,
											"end": 17796,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 17686,
											"end": 17796,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 17686,
											"end": 17796,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17686,
											"end": 17796,
											"name": "tag",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 17686,
											"end": 17796,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17686,
											"end": 17796,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 17686,
											"end": 17796,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17545,
											"end": 17680,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 17545,
											"end": 17680,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17545,
											"end": 17680,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 17545,
											"end": 17680,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 17545,
											"end": 17680,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 17545,
											"end": 17680,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 17545,
											"end": 17680,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 17545,
											"end": 17680,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17545,
											"end": 17680,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 17545,
											"end": 17680,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17545,
											"end": 17680,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 17545,
											"end": 17680,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8368,
											"end": 8517,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 8368,
											"end": 8517,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8368,
											"end": 8517,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 8368,
											"end": 8517,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 8368,
											"end": 8517,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 8368,
											"end": 8517,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8368,
											"end": 8517,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 8368,
											"end": 8517,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8368,
											"end": 8517,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 8368,
											"end": 8517,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8368,
											"end": 8517,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 8368,
											"end": 8517,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6539,
											"end": 6637,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 6539,
											"end": 6637,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6593,
											"end": 6606,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 6625,
											"end": 6630,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 6618,
											"end": 6630,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6618,
											"end": 6630,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6618,
											"end": 6630,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 6618,
											"end": 6630,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6618,
											"end": 6630,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 6618,
											"end": 6630,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6618,
											"end": 6630,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 6618,
											"end": 6630,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6618,
											"end": 6630,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6618,
											"end": 6630,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 6618,
											"end": 6630,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6618,
											"end": 6630,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6618,
											"end": 6630,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6618,
											"end": 6630,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6618,
											"end": 6630,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 6618,
											"end": 6630,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 6618,
											"end": 6630,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6618,
											"end": 6630,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6618,
											"end": 6630,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6618,
											"end": 6630,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6618,
											"end": 6630,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6618,
											"end": 6630,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6618,
											"end": 6630,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6618,
											"end": 6630,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6618,
											"end": 6630,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6618,
											"end": 6630,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6618,
											"end": 6630,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 6618,
											"end": 6630,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6618,
											"end": 6630,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6618,
											"end": 6630,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6618,
											"end": 6630,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6618,
											"end": 6630,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6618,
											"end": 6630,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6618,
											"end": 6630,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6618,
											"end": 6630,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6618,
											"end": 6630,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6618,
											"end": 6630,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6618,
											"end": 6630,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 6618,
											"end": 6630,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6618,
											"end": 6630,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 6618,
											"end": 6630,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6618,
											"end": 6630,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 6618,
											"end": 6630,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6618,
											"end": 6630,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6618,
											"end": 6630,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6618,
											"end": 6630,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 6618,
											"end": 6630,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6618,
											"end": 6630,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6618,
											"end": 6630,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 6618,
											"end": 6630,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 6618,
											"end": 6630,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 6618,
											"end": 6630,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6618,
											"end": 6630,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 6618,
											"end": 6630,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6618,
											"end": 6630,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6618,
											"end": 6630,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6618,
											"end": 6630,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 6618,
											"end": 6630,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 6618,
											"end": 6630,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6618,
											"end": 6630,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6618,
											"end": 6630,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6618,
											"end": 6630,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6618,
											"end": 6630,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6618,
											"end": 6630,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6618,
											"end": 6630,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 6618,
											"end": 6630,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6618,
											"end": 6630,
											"name": "tag",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 6618,
											"end": 6630,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6618,
											"end": 6630,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6618,
											"end": 6630,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6618,
											"end": 6630,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6618,
											"end": 6630,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6618,
											"end": 6630,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6618,
											"end": 6630,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6618,
											"end": 6630,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6618,
											"end": 6630,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6618,
											"end": 6630,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6618,
											"end": 6630,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6618,
											"end": 6630,
											"name": "tag",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 6618,
											"end": 6630,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6618,
											"end": 6630,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6618,
											"end": 6630,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6618,
											"end": 6630,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6618,
											"end": 6630,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6618,
											"end": 6630,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6618,
											"end": 6630,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6618,
											"end": 6630,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6618,
											"end": 6630,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6618,
											"end": 6630,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6618,
											"end": 6630,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6618,
											"end": 6630,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6618,
											"end": 6630,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6618,
											"end": 6630,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 6618,
											"end": 6630,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 6618,
											"end": 6630,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6618,
											"end": 6630,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6618,
											"end": 6630,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6618,
											"end": 6630,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6618,
											"end": 6630,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 6618,
											"end": 6630,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6618,
											"end": 6630,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6618,
											"end": 6630,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6618,
											"end": 6630,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6618,
											"end": 6630,
											"name": "tag",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 6618,
											"end": 6630,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6618,
											"end": 6630,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6618,
											"end": 6630,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6618,
											"end": 6630,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6618,
											"end": 6630,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6618,
											"end": 6630,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6618,
											"end": 6630,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6618,
											"end": 6630,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6539,
											"end": 6637,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6539,
											"end": 6637,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8825,
											"end": 9022,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 8825,
											"end": 9022,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8908,
											"end": 8912,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4322,
											"end": 4332,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 8962,
											"end": 8994,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 4322,
											"end": 4332,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8978,
											"end": 8985,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 8987,
											"end": 8993,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 8962,
											"end": 8970,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 8962,
											"end": 8994,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8962,
											"end": 8994,
											"name": "tag",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 8962,
											"end": 8994,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9011,
											"end": 9015,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 9004,
											"end": 9015,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9004,
											"end": 9015,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9004,
											"end": 9015,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8825,
											"end": 9022,
											"name": "tag",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 8825,
											"end": 9022,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8825,
											"end": 9022,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 8825,
											"end": 9022,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8825,
											"end": 9022,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8825,
											"end": 9022,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8825,
											"end": 9022,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9584,
											"end": 9840,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 9584,
											"end": 9840,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9681,
											"end": 9685,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4322,
											"end": 4332,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 9737,
											"end": 9775,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 9753,
											"end": 9757,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 4322,
											"end": 4332,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9768,
											"end": 9774,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 9737,
											"end": 9752,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 9737,
											"end": 9775,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9737,
											"end": 9775,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 9737,
											"end": 9775,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9785,
											"end": 9812,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 9795,
											"end": 9799,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 9801,
											"end": 9803,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 9805,
											"end": 9811,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 9785,
											"end": 9794,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 9785,
											"end": 9812,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9785,
											"end": 9812,
											"name": "tag",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 9785,
											"end": 9812,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9829,
											"end": 9833,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 9829,
											"end": 9833,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 9584,
											"end": 9840,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9584,
											"end": 9840,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10235,
											"end": 10469,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 10235,
											"end": 10469,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10323,
											"end": 10327,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4322,
											"end": 4332,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 10377,
											"end": 10441,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 4322,
											"end": 4332,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10393,
											"end": 10400,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 10430,
											"end": 10440,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 10402,
											"end": 10427,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 4322,
											"end": 4332,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10393,
											"end": 10400,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10402,
											"end": 10411,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 10402,
											"end": 10427,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10402,
											"end": 10427,
											"name": "tag",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 10402,
											"end": 10427,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10402,
											"end": 10440,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 10402,
											"end": 10440,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10402,
											"end": 10440,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10402,
											"end": 10440,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 10402,
											"end": 10440,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10402,
											"end": 10440,
											"name": "tag",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 10402,
											"end": 10440,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10377,
											"end": 10385,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 10377,
											"end": 10441,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17441,
											"end": 17539,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 17441,
											"end": 17539,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17489,
											"end": 17532,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 17495,
											"end": 17500,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17514,
											"end": 17530,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 7567,
											"end": 7569,
											"name": "PUSH",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 17514,
											"end": 17516,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 17514,
											"end": 17530,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 17514,
											"end": 17530,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17514,
											"end": 17530,
											"name": "tag",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 17514,
											"end": 17530,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17502,
											"end": 17531,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 17502,
											"end": 17531,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17502,
											"end": 17510,
											"name": "PUSH",
											"source": 0,
											"value": "42C1D80"
										},
										{
											"begin": 17502,
											"end": 17531,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 17502,
											"end": 17531,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17502,
											"end": 17531,
											"name": "tag",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 17502,
											"end": 17531,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17489,
											"end": 17494,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 17489,
											"end": 17532,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17489,
											"end": 17532,
											"name": "tag",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 17489,
											"end": 17532,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17441,
											"end": 17539,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17441,
											"end": 17539,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6750,
											"end": 6852,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 6750,
											"end": 6852,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6806,
											"end": 6819,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 6838,
											"end": 6845,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6831,
											"end": 6845,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6831,
											"end": 6845,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6831,
											"end": 6845,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 6831,
											"end": 6845,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6831,
											"end": 6845,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 6831,
											"end": 6845,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10956,
											"end": 11383,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 10956,
											"end": 11383,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11049,
											"end": 11053,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4322,
											"end": 4332,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 11049,
											"end": 11053,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11130,
											"end": 11155,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 4322,
											"end": 4332,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11147,
											"end": 11154,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 11130,
											"end": 11139,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 11130,
											"end": 11155,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11130,
											"end": 11155,
											"name": "tag",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 11130,
											"end": 11155,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11103,
											"end": 11155,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11103,
											"end": 11155,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11193,
											"end": 11208,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 11173,
											"end": 11189,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11173,
											"end": 11208,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 11173,
											"end": 11208,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 11165,
											"end": 11250,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 11165,
											"end": 11250,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11165,
											"end": 11250,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11165,
											"end": 11250,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11165,
											"end": 11250,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11165,
											"end": 11250,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4969,
											"end": 4971,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11165,
											"end": 11250,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 11165,
											"end": 11250,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11165,
											"end": 11250,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4951,
											"end": 4972,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5008,
											"end": 5010,
											"name": "PUSH",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 4988,
											"end": 5006,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 4988,
											"end": 5006,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4988,
											"end": 5006,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4981,
											"end": 5011,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5047,
											"end": 5081,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77"
										},
										{
											"begin": 5027,
											"end": 5045,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 5027,
											"end": 5045,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5027,
											"end": 5045,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5020,
											"end": 5082,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "207A65726F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5098,
											"end": 5116,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 5098,
											"end": 5116,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5098,
											"end": 5116,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5091,
											"end": 5126,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5143,
											"end": 5162,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 5143,
											"end": 5162,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11165,
											"end": 11250,
											"name": "tag",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 11165,
											"end": 11250,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11165,
											"end": 11250,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11165,
											"end": 11250,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 11165,
											"end": 11250,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11165,
											"end": 11250,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11165,
											"end": 11250,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 11165,
											"end": 11250,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11165,
											"end": 11250,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 11165,
											"end": 11250,
											"name": "tag",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 11165,
											"end": 11250,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11284,
											"end": 11344,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 11293,
											"end": 11298,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11300,
											"end": 11307,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 11328,
											"end": 11343,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 11309,
											"end": 11325,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 11309,
											"end": 11343,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 11284,
											"end": 11292,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 11284,
											"end": 11344,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8121,
											"end": 8310,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 8121,
											"end": 8310,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8200,
											"end": 8204,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4322,
											"end": 4332,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 8254,
											"end": 8282,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 4322,
											"end": 4332,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8271,
											"end": 8273,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 8275,
											"end": 8281,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 8254,
											"end": 8263,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 8254,
											"end": 8282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17686,
											"end": 17796,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 17686,
											"end": 17796,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17762,
											"end": 17789,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 17772,
											"end": 17776,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17778,
											"end": 17780,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17782,
											"end": 17788,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17762,
											"end": 17771,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 17762,
											"end": 17789,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17762,
											"end": 17789,
											"name": "tag",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 17762,
											"end": 17789,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17686,
											"end": 17796,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17686,
											"end": 17796,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17686,
											"end": 17796,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17686,
											"end": 17796,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17545,
											"end": 17680,
											"name": "tag",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 17545,
											"end": 17680,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7900,
											"end": 7918,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7900,
											"end": 7918,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17603,
											"end": 17607,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7900,
											"end": 7918,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7900,
											"end": 7918,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7900,
											"end": 7918,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7900,
											"end": 7918,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7900,
											"end": 7918,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7900,
											"end": 7918,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7900,
											"end": 7918,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7900,
											"end": 7918,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7900,
											"end": 7918,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7900,
											"end": 7918,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 7900,
											"end": 7918,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 17603,
											"end": 17607,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17603,
											"end": 17607,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17634,
											"end": 17649,
											"name": "tag",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 17634,
											"end": 17649,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17619,
											"end": 17649,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 17545,
											"end": 17680,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 17545,
											"end": 17680,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8368,
											"end": 8517,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 8368,
											"end": 8517,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8483,
											"end": 8501,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8483,
											"end": 8501,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8483,
											"end": 8501,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8457,
											"end": 8464,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8483,
											"end": 8501,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8483,
											"end": 8501,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8483,
											"end": 8501,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8483,
											"end": 8494,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 8483,
											"end": 8501,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8483,
											"end": 8501,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8483,
											"end": 8501,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8483,
											"end": 8501,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8483,
											"end": 8501,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8483,
											"end": 8501,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8483,
											"end": 8501,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8483,
											"end": 8501,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 8483,
											"end": 8510,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 8483,
											"end": 8510,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8483,
											"end": 8510,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 8483,
											"end": 8510,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8483,
											"end": 8510,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8483,
											"end": 8510,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8483,
											"end": 8510,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8483,
											"end": 8510,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8483,
											"end": 8510,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8483,
											"end": 8510,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8483,
											"end": 8510,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 8483,
											"end": 8510,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8483,
											"end": 8510,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8368,
											"end": 8517,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14838,
											"end": 15178,
											"name": "tag",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 14838,
											"end": 15178,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14939,
											"end": 14958,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14939,
											"end": 14958,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14931,
											"end": 14999,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 14931,
											"end": 14999,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14931,
											"end": 14999,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14931,
											"end": 14999,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14931,
											"end": 14999,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14931,
											"end": 14999,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5375,
											"end": 5377,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 14931,
											"end": 14999,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 14931,
											"end": 14999,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14931,
											"end": 14999,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5357,
											"end": 5378,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5414,
											"end": 5416,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 5394,
											"end": 5412,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5394,
											"end": 5412,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5394,
											"end": 5412,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5387,
											"end": 5417,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5453,
											"end": 5487,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A20617070726F76652066726F6D20746865207A65726F20616464"
										},
										{
											"begin": 5433,
											"end": 5451,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 5433,
											"end": 5451,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5433,
											"end": 5451,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5426,
											"end": 5488,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "72657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5504,
											"end": 5522,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 5504,
											"end": 5522,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5504,
											"end": 5522,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5497,
											"end": 5531,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5548,
											"end": 5567,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 5548,
											"end": 5567,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14931,
											"end": 14999,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 5173,
											"end": 5573,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14931,
											"end": 14999,
											"name": "tag",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 14931,
											"end": 14999,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15017,
											"end": 15038,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15017,
											"end": 15038,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15009,
											"end": 15077,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 15009,
											"end": 15077,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15009,
											"end": 15077,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15009,
											"end": 15077,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 15009,
											"end": 15077,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15009,
											"end": 15077,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5780,
											"end": 5782,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 15009,
											"end": 15077,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 15009,
											"end": 15077,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15009,
											"end": 15077,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5762,
											"end": 5783,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5819,
											"end": 5821,
											"name": "PUSH",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 5799,
											"end": 5817,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 5799,
											"end": 5817,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5799,
											"end": 5817,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5792,
											"end": 5822,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5858,
											"end": 5892,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A20617070726F766520746F20746865207A65726F206164647265"
										},
										{
											"begin": 5838,
											"end": 5856,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 5838,
											"end": 5856,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5838,
											"end": 5856,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5831,
											"end": 5893,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5909,
											"end": 5927,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 5909,
											"end": 5927,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5909,
											"end": 5927,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5902,
											"end": 5934,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5951,
											"end": 5970,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 5951,
											"end": 5970,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15009,
											"end": 15077,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 5578,
											"end": 5976,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15009,
											"end": 15077,
											"name": "tag",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 15009,
											"end": 15077,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15088,
											"end": 15106,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 15088,
											"end": 15106,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15088,
											"end": 15106,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15088,
											"end": 15106,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15088,
											"end": 15106,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15088,
											"end": 15106,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15088,
											"end": 15106,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15088,
											"end": 15099,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 15088,
											"end": 15106,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 15088,
											"end": 15106,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15088,
											"end": 15106,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15088,
											"end": 15106,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15088,
											"end": 15106,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15088,
											"end": 15106,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15088,
											"end": 15106,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 15088,
											"end": 15106,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 15088,
											"end": 15115,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 15088,
											"end": 15115,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 15088,
											"end": 15115,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15088,
											"end": 15115,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15088,
											"end": 15115,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 15088,
											"end": 15115,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15088,
											"end": 15115,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 15088,
											"end": 15115,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15088,
											"end": 15115,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15088,
											"end": 15115,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15088,
											"end": 15115,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15088,
											"end": 15115,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15088,
											"end": 15115,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 15088,
											"end": 15124,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 15088,
											"end": 15124,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15088,
											"end": 15124,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 15139,
											"end": 15171,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15139,
											"end": 15171,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15139,
											"end": 15171,
											"name": "PUSH",
											"source": 0,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 15139,
											"end": 15171,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1315,
											"end": 1333,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15139,
											"end": 15171,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15139,
											"end": 15171,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 15139,
											"end": 15171,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15139,
											"end": 15171,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15139,
											"end": 15171,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 15139,
											"end": 15171,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15139,
											"end": 15171,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 14838,
											"end": 15178,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14838,
											"end": 15178,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14838,
											"end": 15178,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14838,
											"end": 15178,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15459,
											"end": 15870,
											"name": "tag",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 15459,
											"end": 15870,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15559,
											"end": 15583,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15586,
											"end": 15611,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 15596,
											"end": 15601,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 15603,
											"end": 15610,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 15586,
											"end": 15595,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 15586,
											"end": 15611,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15586,
											"end": 15611,
											"name": "tag",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 15586,
											"end": 15611,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15559,
											"end": 15611,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15559,
											"end": 15611,
											"name": "POP",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 15625,
											"end": 15641,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15625,
											"end": 15662,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 15621,
											"end": 15864,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 15621,
											"end": 15864,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15706,
											"end": 15712,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15686,
											"end": 15702,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15686,
											"end": 15712,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 15686,
											"end": 15712,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 15678,
											"end": 15746,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 15678,
											"end": 15746,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15678,
											"end": 15746,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15678,
											"end": 15746,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 15678,
											"end": 15746,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15678,
											"end": 15746,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6183,
											"end": 6185,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 15678,
											"end": 15746,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 15678,
											"end": 15746,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15678,
											"end": 15746,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6165,
											"end": 6186,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6222,
											"end": 6224,
											"name": "PUSH",
											"source": 1,
											"value": "1D"
										},
										{
											"begin": 6202,
											"end": 6220,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 6202,
											"end": 6220,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6202,
											"end": 6220,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6195,
											"end": 6225,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6261,
											"end": 6292,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000"
										},
										{
											"begin": 6241,
											"end": 6259,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 6241,
											"end": 6259,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6241,
											"end": 6259,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6234,
											"end": 6293,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6310,
											"end": 6328,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 6310,
											"end": 6328,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15678,
											"end": 15746,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 5981,
											"end": 6334,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15678,
											"end": 15746,
											"name": "tag",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 15678,
											"end": 15746,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15788,
											"end": 15839,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 15797,
											"end": 15802,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 15804,
											"end": 15811,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 15832,
											"end": 15838,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 15813,
											"end": 15829,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 15813,
											"end": 15838,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 15788,
											"end": 15796,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 15788,
											"end": 15839,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15788,
											"end": 15839,
											"name": "tag",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 15788,
											"end": 15839,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15549,
											"end": 15870,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15459,
											"end": 15870,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15459,
											"end": 15870,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15459,
											"end": 15870,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15459,
											"end": 15870,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11837,
											"end": 12625,
											"name": "tag",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 11837,
											"end": 12625,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11933,
											"end": 11951,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 11933,
											"end": 11951,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11925,
											"end": 11993,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 11925,
											"end": 11993,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11925,
											"end": 11993,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11925,
											"end": 11993,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11925,
											"end": 11993,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11925,
											"end": 11993,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6541,
											"end": 6543,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11925,
											"end": 11993,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 11925,
											"end": 11993,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11925,
											"end": 11993,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6523,
											"end": 6544,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6580,
											"end": 6582,
											"name": "PUSH",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 6560,
											"end": 6578,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 6560,
											"end": 6578,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6560,
											"end": 6578,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6553,
											"end": 6583,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6619,
											"end": 6653,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A207472616E736665722066726F6D20746865207A65726F206164"
										},
										{
											"begin": 6599,
											"end": 6617,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 6599,
											"end": 6617,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6599,
											"end": 6617,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6592,
											"end": 6654,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6670,
											"end": 6688,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 6670,
											"end": 6688,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6670,
											"end": 6688,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6663,
											"end": 6698,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6715,
											"end": 6734,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 6715,
											"end": 6734,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11925,
											"end": 11993,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 6339,
											"end": 6740,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11925,
											"end": 11993,
											"name": "tag",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 11925,
											"end": 11993,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12011,
											"end": 12027,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12011,
											"end": 12027,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12003,
											"end": 12067,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 12003,
											"end": 12067,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12003,
											"end": 12067,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12003,
											"end": 12067,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12003,
											"end": 12067,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12003,
											"end": 12067,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6947,
											"end": 6949,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 12003,
											"end": 12067,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 12003,
											"end": 12067,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12003,
											"end": 12067,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6929,
											"end": 6950,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6986,
											"end": 6988,
											"name": "PUSH",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 6966,
											"end": 6984,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 6966,
											"end": 6984,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6966,
											"end": 6984,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6959,
											"end": 6989,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7025,
											"end": 7059,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A207472616E7366657220746F20746865207A65726F2061646472"
										},
										{
											"begin": 7005,
											"end": 7023,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 7005,
											"end": 7023,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7005,
											"end": 7023,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6998,
											"end": 7060,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7076,
											"end": 7094,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 7076,
											"end": 7094,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7076,
											"end": 7094,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7069,
											"end": 7102,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7119,
											"end": 7138,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 7119,
											"end": 7138,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12003,
											"end": 12067,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 6745,
											"end": 7144,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12003,
											"end": 12067,
											"name": "tag",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 12003,
											"end": 12067,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12149,
											"end": 12164,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12149,
											"end": 12164,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12127,
											"end": 12146,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12149,
											"end": 12164,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12149,
											"end": 12164,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12149,
											"end": 12164,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12149,
											"end": 12164,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12149,
											"end": 12164,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12149,
											"end": 12164,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12149,
											"end": 12164,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12149,
											"end": 12164,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12149,
											"end": 12164,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12149,
											"end": 12164,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 12149,
											"end": 12164,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12182,
											"end": 12203,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12182,
											"end": 12203,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12182,
											"end": 12203,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 12182,
											"end": 12203,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 12174,
											"end": 12246,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 12174,
											"end": 12246,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12174,
											"end": 12246,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12174,
											"end": 12246,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12174,
											"end": 12246,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12174,
											"end": 12246,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7351,
											"end": 7353,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 12174,
											"end": 12246,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 12174,
											"end": 12246,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12174,
											"end": 12246,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7333,
											"end": 7354,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7390,
											"end": 7392,
											"name": "PUSH",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 7370,
											"end": 7388,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 7370,
											"end": 7388,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7370,
											"end": 7388,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7363,
											"end": 7393,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7429,
											"end": 7463,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A207472616E7366657220616D6F756E7420657863656564732062"
										},
										{
											"begin": 7409,
											"end": 7427,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 7409,
											"end": 7427,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7409,
											"end": 7427,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7402,
											"end": 7464,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "616C616E6365"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7480,
											"end": 7498,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 7480,
											"end": 7498,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7480,
											"end": 7498,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7473,
											"end": 7509,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7526,
											"end": 7545,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 7526,
											"end": 7545,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12174,
											"end": 12246,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 7149,
											"end": 7551,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12174,
											"end": 12246,
											"name": "tag",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 12174,
											"end": 12246,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12280,
											"end": 12295,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 12280,
											"end": 12295,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12280,
											"end": 12295,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12280,
											"end": 12289,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12280,
											"end": 12295,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12280,
											"end": 12295,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12280,
											"end": 12295,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12280,
											"end": 12295,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12280,
											"end": 12295,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12280,
											"end": 12295,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12280,
											"end": 12295,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12280,
											"end": 12295,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12280,
											"end": 12295,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12280,
											"end": 12295,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12280,
											"end": 12295,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 12298,
											"end": 12318,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 12298,
											"end": 12318,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 12298,
											"end": 12318,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 12280,
											"end": 12318,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12280,
											"end": 12318,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 12495,
											"end": 12508,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 12495,
											"end": 12508,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 12495,
											"end": 12508,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12495,
											"end": 12508,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12495,
											"end": 12508,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12495,
											"end": 12508,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12495,
											"end": 12508,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12495,
											"end": 12508,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 12495,
											"end": 12508,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12495,
											"end": 12508,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 12495,
											"end": 12518,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12495,
											"end": 12518,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12495,
											"end": 12518,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 12495,
											"end": 12518,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12495,
											"end": 12518,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12495,
											"end": 12518,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 12544,
											"end": 12570,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 12544,
											"end": 12570,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12495,
											"end": 12508,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12495,
											"end": 12508,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 12544,
											"end": 12570,
											"name": "PUSH",
											"source": 0,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 12544,
											"end": 12570,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1315,
											"end": 1333,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12544,
											"end": 12570,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12544,
											"end": 12570,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12544,
											"end": 12570,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12544,
											"end": 12570,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12544,
											"end": 12570,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 12544,
											"end": 12570,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12544,
											"end": 12570,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 12581,
											"end": 12618,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 17686,
											"end": 17796,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12901,
											"end": 13436,
											"name": "tag",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 12901,
											"end": 13436,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12984,
											"end": 13005,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12984,
											"end": 13005,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12976,
											"end": 13041,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 12976,
											"end": 13041,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12976,
											"end": 13041,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12976,
											"end": 13041,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12976,
											"end": 13041,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12976,
											"end": 13041,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7758,
											"end": 7760,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 12976,
											"end": 13041,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 12976,
											"end": 13041,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12976,
											"end": 13041,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7740,
											"end": 7761,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7797,
											"end": 7799,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 7777,
											"end": 7795,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 7777,
											"end": 7795,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7777,
											"end": 7795,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7770,
											"end": 7800,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7836,
											"end": 7869,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A206D696E7420746F20746865207A65726F206164647265737300"
										},
										{
											"begin": 7816,
											"end": 7834,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 7816,
											"end": 7834,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7816,
											"end": 7834,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7809,
											"end": 7870,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7887,
											"end": 7905,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 7887,
											"end": 7905,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12976,
											"end": 13041,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 7556,
											"end": 7911,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12976,
											"end": 13041,
											"name": "tag",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 12976,
											"end": 13041,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13128,
											"end": 13134,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13112,
											"end": 13124,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 13112,
											"end": 13124,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13112,
											"end": 13134,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13112,
											"end": 13134,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13112,
											"end": 13134,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 13112,
											"end": 13134,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 13112,
											"end": 13134,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13112,
											"end": 13134,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13112,
											"end": 13134,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 13112,
											"end": 13134,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13112,
											"end": 13134,
											"name": "tag",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 13112,
											"end": 13134,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13112,
											"end": 13134,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13112,
											"end": 13134,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13112,
											"end": 13134,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13280,
											"end": 13298,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13280,
											"end": 13298,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13280,
											"end": 13289,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13280,
											"end": 13298,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13280,
											"end": 13298,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13280,
											"end": 13298,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13280,
											"end": 13298,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13280,
											"end": 13298,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13280,
											"end": 13298,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13280,
											"end": 13298,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13280,
											"end": 13298,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13280,
											"end": 13298,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13280,
											"end": 13298,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13280,
											"end": 13298,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 13280,
											"end": 13308,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13280,
											"end": 13308,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 13280,
											"end": 13308,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 13280,
											"end": 13308,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13280,
											"end": 13308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13280,
											"end": 13308,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 13333,
											"end": 13370,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13333,
											"end": 13370,
											"name": "PUSH",
											"source": 0,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 13333,
											"end": 13370,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1315,
											"end": 1333,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13333,
											"end": 13370,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13333,
											"end": 13370,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13333,
											"end": 13370,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13333,
											"end": 13370,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13333,
											"end": 13370,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 13333,
											"end": 13370,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13333,
											"end": 13370,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 12901,
											"end": 13436,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12901,
											"end": 13436,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12901,
											"end": 13436,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14,
											"end": 562,
											"name": "tag",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 14,
											"end": 562,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 126,
											"end": 130,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 155,
											"end": 157,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 184,
											"end": 186,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 173,
											"end": 182,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 166,
											"end": 187,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 216,
											"end": 222,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 210,
											"end": 223,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 259,
											"end": 265,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 254,
											"end": 256,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 243,
											"end": 252,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 239,
											"end": 257,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 232,
											"end": 266,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 284,
											"end": 285,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "tag",
											"source": 1,
											"value": "186"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 308,
											"end": 314,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 305,
											"end": 306,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 302,
											"end": 315,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 294,
											"end": 434,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 294,
											"end": 434,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "188"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 403,
											"end": 417,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 403,
											"end": 417,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 403,
											"end": 417,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 399,
											"end": 422,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 399,
											"end": 422,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 393,
											"end": 423,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 369,
											"end": 386,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 369,
											"end": 386,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 369,
											"end": 386,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 388,
											"end": 390,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 365,
											"end": 391,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 358,
											"end": 424,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 323,
											"end": 333,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 323,
											"end": 333,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 294,
											"end": 434,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "186"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 294,
											"end": 434,
											"name": "tag",
											"source": 1,
											"value": "188"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 298,
											"end": 301,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 483,
											"end": 484,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 478,
											"end": 480,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 469,
											"end": 475,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 458,
											"end": 467,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 454,
											"end": 476,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 450,
											"end": 481,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 443,
											"end": 485,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 553,
											"end": 555,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 546,
											"end": 548,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 542,
											"end": 549,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 537,
											"end": 539,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 529,
											"end": 535,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 525,
											"end": 540,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 521,
											"end": 550,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 510,
											"end": 519,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 506,
											"end": 551,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 502,
											"end": 556,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 494,
											"end": 556,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 494,
											"end": 556,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 494,
											"end": 556,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 494,
											"end": 556,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14,
											"end": 562,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 14,
											"end": 562,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 14,
											"end": 562,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14,
											"end": 562,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14,
											"end": 562,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 567,
											"end": 740,
											"name": "tag",
											"source": 1,
											"value": "180"
										},
										{
											"begin": 567,
											"end": 740,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 635,
											"end": 655,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 635,
											"end": 655,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 684,
											"end": 715,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 684,
											"end": 715,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 674,
											"end": 716,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 674,
											"end": 716,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 664,
											"end": 734,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "190"
										},
										{
											"begin": 664,
											"end": 734,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 730,
											"end": 731,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 727,
											"end": 728,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 720,
											"end": 732,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 664,
											"end": 734,
											"name": "tag",
											"source": 1,
											"value": "190"
										},
										{
											"begin": 664,
											"end": 734,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 567,
											"end": 740,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 567,
											"end": 740,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 567,
											"end": 740,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 567,
											"end": 740,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 745,
											"end": 999,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 745,
											"end": 999,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 813,
											"end": 819,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 821,
											"end": 827,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 874,
											"end": 876,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 862,
											"end": 871,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 853,
											"end": 860,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 849,
											"end": 872,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 845,
											"end": 877,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 842,
											"end": 894,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 842,
											"end": 894,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "192"
										},
										{
											"begin": 842,
											"end": 894,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 890,
											"end": 891,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 887,
											"end": 888,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 880,
											"end": 892,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 842,
											"end": 894,
											"name": "tag",
											"source": 1,
											"value": "192"
										},
										{
											"begin": 842,
											"end": 894,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 913,
											"end": 942,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "193"
										},
										{
											"begin": 932,
											"end": 941,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 913,
											"end": 942,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "180"
										},
										{
											"begin": 913,
											"end": 942,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 913,
											"end": 942,
											"name": "tag",
											"source": 1,
											"value": "193"
										},
										{
											"begin": 913,
											"end": 942,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 903,
											"end": 942,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 989,
											"end": 991,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 974,
											"end": 992,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 974,
											"end": 992,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 974,
											"end": 992,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 974,
											"end": 992,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 961,
											"end": 993,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 961,
											"end": 993,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 745,
											"end": 999,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "tag",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1455,
											"end": 1461,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1463,
											"end": 1469,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1471,
											"end": 1477,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1524,
											"end": 1526,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 1512,
											"end": 1521,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1503,
											"end": 1510,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 1499,
											"end": 1522,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1495,
											"end": 1527,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 1492,
											"end": 1544,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1492,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "197"
										},
										{
											"begin": 1492,
											"end": 1544,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1540,
											"end": 1541,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1537,
											"end": 1538,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1530,
											"end": 1542,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1492,
											"end": 1544,
											"name": "tag",
											"source": 1,
											"value": "197"
										},
										{
											"begin": 1492,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1563,
											"end": 1592,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "198"
										},
										{
											"begin": 1582,
											"end": 1591,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1563,
											"end": 1592,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "180"
										},
										{
											"begin": 1563,
											"end": 1592,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1563,
											"end": 1592,
											"name": "tag",
											"source": 1,
											"value": "198"
										},
										{
											"begin": 1563,
											"end": 1592,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1553,
											"end": 1592,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1553,
											"end": 1592,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1611,
											"end": 1649,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "199"
										},
										{
											"begin": 1645,
											"end": 1647,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1634,
											"end": 1643,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1630,
											"end": 1648,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1611,
											"end": 1649,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "180"
										},
										{
											"begin": 1611,
											"end": 1649,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1611,
											"end": 1649,
											"name": "tag",
											"source": 1,
											"value": "199"
										},
										{
											"begin": 1611,
											"end": 1649,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1601,
											"end": 1649,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1601,
											"end": 1649,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1696,
											"end": 1698,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1685,
											"end": 1694,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1681,
											"end": 1699,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1668,
											"end": 1700,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1658,
											"end": 1700,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1658,
											"end": 1700,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1378,
											"end": 1706,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1900,
											"end": 2086,
											"name": "tag",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 1900,
											"end": 2086,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1959,
											"end": 1965,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2012,
											"end": 2014,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2000,
											"end": 2009,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1991,
											"end": 1998,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1987,
											"end": 2010,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1983,
											"end": 2015,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 1980,
											"end": 2032,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1980,
											"end": 2032,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "202"
										},
										{
											"begin": 1980,
											"end": 2032,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2028,
											"end": 2029,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2025,
											"end": 2026,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2018,
											"end": 2030,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1980,
											"end": 2032,
											"name": "tag",
											"source": 1,
											"value": "202"
										},
										{
											"begin": 1980,
											"end": 2032,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2051,
											"end": 2080,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "137"
										},
										{
											"begin": 2070,
											"end": 2079,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2051,
											"end": 2080,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "180"
										},
										{
											"begin": 2051,
											"end": 2080,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2299,
											"end": 2559,
											"name": "tag",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 2299,
											"end": 2559,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2367,
											"end": 2373,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2375,
											"end": 2381,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2428,
											"end": 2430,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2416,
											"end": 2425,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2407,
											"end": 2414,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2403,
											"end": 2426,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2399,
											"end": 2431,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 2396,
											"end": 2448,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2396,
											"end": 2448,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "206"
										},
										{
											"begin": 2396,
											"end": 2448,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2444,
											"end": 2445,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2441,
											"end": 2442,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2434,
											"end": 2446,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2396,
											"end": 2448,
											"name": "tag",
											"source": 1,
											"value": "206"
										},
										{
											"begin": 2396,
											"end": 2448,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2467,
											"end": 2496,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "207"
										},
										{
											"begin": 2486,
											"end": 2495,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2467,
											"end": 2496,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "180"
										},
										{
											"begin": 2467,
											"end": 2496,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2467,
											"end": 2496,
											"name": "tag",
											"source": 1,
											"value": "207"
										},
										{
											"begin": 2467,
											"end": 2496,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2457,
											"end": 2496,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2457,
											"end": 2496,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2515,
											"end": 2553,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "208"
										},
										{
											"begin": 2549,
											"end": 2551,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2538,
											"end": 2547,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2534,
											"end": 2552,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2515,
											"end": 2553,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "180"
										},
										{
											"begin": 2515,
											"end": 2553,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2515,
											"end": 2553,
											"name": "tag",
											"source": 1,
											"value": "208"
										},
										{
											"begin": 2515,
											"end": 2553,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2505,
											"end": 2553,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2505,
											"end": 2553,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2299,
											"end": 2559,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2299,
											"end": 2559,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2299,
											"end": 2559,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2299,
											"end": 2559,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2299,
											"end": 2559,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2299,
											"end": 2559,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2564,
											"end": 2944,
											"name": "tag",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 2564,
											"end": 2944,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2643,
											"end": 2644,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2639,
											"end": 2651,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2639,
											"end": 2651,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2639,
											"end": 2651,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 2639,
											"end": 2651,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2686,
											"end": 2698,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2686,
											"end": 2698,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2686,
											"end": 2698,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2707,
											"end": 2768,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "210"
										},
										{
											"begin": 2707,
											"end": 2768,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2761,
											"end": 2765,
											"name": "PUSH",
											"source": 1,
											"value": "7F"
										},
										{
											"begin": 2753,
											"end": 2759,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2749,
											"end": 2766,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2739,
											"end": 2766,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2739,
											"end": 2766,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2707,
											"end": 2768,
											"name": "tag",
											"source": 1,
											"value": "210"
										},
										{
											"begin": 2707,
											"end": 2768,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2814,
											"end": 2816,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2806,
											"end": 2812,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2803,
											"end": 2817,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2783,
											"end": 2801,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2780,
											"end": 2818,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2777,
											"end": 2938,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "211"
										},
										{
											"begin": 2777,
											"end": 2938,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2860,
											"end": 2870,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 2855,
											"end": 2858,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 2851,
											"end": 2871,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 2848,
											"end": 2849,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2841,
											"end": 2872,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2895,
											"end": 2899,
											"name": "PUSH",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 2892,
											"end": 2893,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2885,
											"end": 2900,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2923,
											"end": 2927,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2920,
											"end": 2921,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2913,
											"end": 2928,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2777,
											"end": 2938,
											"name": "tag",
											"source": 1,
											"value": "211"
										},
										{
											"begin": 2777,
											"end": 2938,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2777,
											"end": 2938,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2564,
											"end": 2944,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2564,
											"end": 2944,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2564,
											"end": 2944,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2564,
											"end": 2944,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2949,
											"end": 3076,
											"name": "tag",
											"source": 1,
											"value": "181"
										},
										{
											"begin": 2949,
											"end": 3076,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3010,
											"end": 3020,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 3005,
											"end": 3008,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 3001,
											"end": 3021,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 2998,
											"end": 2999,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2991,
											"end": 3022,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3041,
											"end": 3045,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 3038,
											"end": 3039,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3031,
											"end": 3046,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3065,
											"end": 3069,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 3062,
											"end": 3063,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3055,
											"end": 3070,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3081,
											"end": 3206,
											"name": "tag",
											"source": 1,
											"value": "108"
										},
										{
											"begin": 3081,
											"end": 3206,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3146,
											"end": 3155,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3146,
											"end": 3155,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3146,
											"end": 3155,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3167,
											"end": 3177,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3167,
											"end": 3177,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3167,
											"end": 3177,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 3164,
											"end": 3200,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3164,
											"end": 3200,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 3164,
											"end": 3200,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3180,
											"end": 3198,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 3180,
											"end": 3198,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "181"
										},
										{
											"begin": 3180,
											"end": 3198,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3211,
											"end": 3633,
											"name": "tag",
											"source": 1,
											"value": "182"
										},
										{
											"begin": 3211,
											"end": 3633,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3300,
											"end": 3301,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 3343,
											"end": 3348,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3300,
											"end": 3301,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3357,
											"end": 3627,
											"name": "tag",
											"source": 1,
											"value": "217"
										},
										{
											"begin": 3357,
											"end": 3627,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3378,
											"end": 3385,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3368,
											"end": 3376,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3365,
											"end": 3386,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 3357,
											"end": 3627,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3357,
											"end": 3627,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "219"
										},
										{
											"begin": 3357,
											"end": 3627,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3437,
											"end": 3441,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3433,
											"end": 3434,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3429,
											"end": 3435,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 3425,
											"end": 3442,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 3419,
											"end": 3423,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3416,
											"end": 3443,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 3413,
											"end": 3466,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3413,
											"end": 3466,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "221"
										},
										{
											"begin": 3413,
											"end": 3466,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3446,
											"end": 3464,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "221"
										},
										{
											"begin": 3446,
											"end": 3464,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "181"
										},
										{
											"begin": 3446,
											"end": 3464,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3446,
											"end": 3464,
											"name": "tag",
											"source": 1,
											"value": "221"
										},
										{
											"begin": 3446,
											"end": 3464,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3496,
											"end": 3503,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3486,
											"end": 3494,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3482,
											"end": 3504,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3479,
											"end": 3534,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3479,
											"end": 3534,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "222"
										},
										{
											"begin": 3479,
											"end": 3534,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3516,
											"end": 3532,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3516,
											"end": 3532,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3516,
											"end": 3532,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 3516,
											"end": 3532,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3479,
											"end": 3534,
											"name": "tag",
											"source": 1,
											"value": "222"
										},
										{
											"begin": 3479,
											"end": 3534,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3595,
											"end": 3617,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 3595,
											"end": 3617,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3595,
											"end": 3617,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 3595,
											"end": 3617,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 3555,
											"end": 3570,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3555,
											"end": 3570,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3555,
											"end": 3570,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 3555,
											"end": 3570,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3357,
											"end": 3627,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "217"
										},
										{
											"begin": 3357,
											"end": 3627,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3357,
											"end": 3627,
											"name": "tag",
											"source": 1,
											"value": "219"
										},
										{
											"begin": 3357,
											"end": 3627,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3361,
											"end": 3364,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3211,
											"end": 3633,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3211,
											"end": 3633,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3211,
											"end": 3633,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3211,
											"end": 3633,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3211,
											"end": 3633,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3211,
											"end": 3633,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 4444,
											"name": "tag",
											"source": 1,
											"value": "183"
										},
										{
											"begin": 3638,
											"end": 4444,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3687,
											"end": 3692,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3717,
											"end": 3725,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3707,
											"end": 3787,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "224"
										},
										{
											"begin": 3707,
											"end": 3787,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3758,
											"end": 3759,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 3772,
											"end": 3777,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 3772,
											"end": 3777,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3707,
											"end": 3787,
											"name": "tag",
											"source": 1,
											"value": "224"
										},
										{
											"begin": 3707,
											"end": 3787,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3806,
											"end": 3810,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3796,
											"end": 3872,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "225"
										},
										{
											"begin": 3796,
											"end": 3872,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3843,
											"end": 3844,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3857,
											"end": 3862,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 3857,
											"end": 3862,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3796,
											"end": 3872,
											"name": "tag",
											"source": 1,
											"value": "225"
										},
										{
											"begin": 3796,
											"end": 3872,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3888,
											"end": 3892,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3906,
											"end": 3907,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 3901,
											"end": 3960,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3901,
											"end": 3960,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 3901,
											"end": 3960,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "227"
										},
										{
											"begin": 3901,
											"end": 3960,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3974,
											"end": 3975,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 3969,
											"end": 4099,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3969,
											"end": 4099,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 3969,
											"end": 4099,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "228"
										},
										{
											"begin": 3969,
											"end": 4099,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3881,
											"end": 4099,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "226"
										},
										{
											"begin": 3881,
											"end": 4099,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3901,
											"end": 3960,
											"name": "tag",
											"source": 1,
											"value": "227"
										},
										{
											"begin": 3901,
											"end": 3960,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3931,
											"end": 3932,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 3922,
											"end": 3932,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3922,
											"end": 3932,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3945,
											"end": 3950,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3945,
											"end": 3950,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 3945,
											"end": 3950,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3969,
											"end": 4099,
											"name": "tag",
											"source": 1,
											"value": "228"
										},
										{
											"begin": 3969,
											"end": 4099,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4006,
											"end": 4009,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 3996,
											"end": 4004,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3993,
											"end": 4010,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 3990,
											"end": 4033,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3990,
											"end": 4033,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "230"
										},
										{
											"begin": 3990,
											"end": 4033,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4013,
											"end": 4031,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "230"
										},
										{
											"begin": 4013,
											"end": 4031,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "181"
										},
										{
											"begin": 4013,
											"end": 4031,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4013,
											"end": 4031,
											"name": "tag",
											"source": 1,
											"value": "230"
										},
										{
											"begin": 4013,
											"end": 4031,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4069,
											"end": 4070,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4055,
											"end": 4071,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4055,
											"end": 4071,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 4084,
											"end": 4089,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 4084,
											"end": 4089,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3881,
											"end": 4099,
											"name": "tag",
											"source": 1,
											"value": "226"
										},
										{
											"begin": 3881,
											"end": 4099,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3881,
											"end": 4099,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4183,
											"end": 4185,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4173,
											"end": 4181,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4170,
											"end": 4186,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 4164,
											"end": 4167,
											"name": "PUSH",
											"source": 1,
											"value": "133"
										},
										{
											"begin": 4158,
											"end": 4162,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4155,
											"end": 4168,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 4151,
											"end": 4187,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4145,
											"end": 4147,
											"name": "PUSH",
											"source": 1,
											"value": "4E"
										},
										{
											"begin": 4135,
											"end": 4143,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4132,
											"end": 4148,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 4127,
											"end": 4129,
											"name": "PUSH",
											"source": 1,
											"value": "B"
										},
										{
											"begin": 4121,
											"end": 4125,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4118,
											"end": 4130,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 4114,
											"end": 4149,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4111,
											"end": 4188,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 4108,
											"end": 4267,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4108,
											"end": 4267,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "231"
										},
										{
											"begin": 4108,
											"end": 4267,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4220,
											"end": 4239,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4220,
											"end": 4239,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4220,
											"end": 4239,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 4252,
											"end": 4257,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 4252,
											"end": 4257,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4108,
											"end": 4267,
											"name": "tag",
											"source": 1,
											"value": "231"
										},
										{
											"begin": 4108,
											"end": 4267,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4299,
											"end": 4333,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "232"
										},
										{
											"begin": 4324,
											"end": 4332,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4318,
											"end": 4322,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4299,
											"end": 4333,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "182"
										},
										{
											"begin": 4299,
											"end": 4333,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4299,
											"end": 4333,
											"name": "tag",
											"source": 1,
											"value": "232"
										},
										{
											"begin": 4299,
											"end": 4333,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4369,
											"end": 4375,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4365,
											"end": 4366,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4361,
											"end": 4367,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 4357,
											"end": 4376,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 4348,
											"end": 4355,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4345,
											"end": 4377,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 4342,
											"end": 4400,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4342,
											"end": 4400,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "234"
										},
										{
											"begin": 4342,
											"end": 4400,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4380,
											"end": 4398,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "234"
										},
										{
											"begin": 4380,
											"end": 4398,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "181"
										},
										{
											"begin": 4380,
											"end": 4398,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4380,
											"end": 4398,
											"name": "tag",
											"source": 1,
											"value": "234"
										},
										{
											"begin": 4380,
											"end": 4398,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4418,
											"end": 4438,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 4418,
											"end": 4438,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 4444,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3638,
											"end": 4444,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4449,
											"end": 4589,
											"name": "tag",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 4449,
											"end": 4589,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4507,
											"end": 4512,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4536,
											"end": 4583,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "137"
										},
										{
											"begin": 4577,
											"end": 4581,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 4567,
											"end": 4575,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4563,
											"end": 4582,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4557,
											"end": 4561,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4536,
											"end": 4583,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "183"
										},
										{
											"begin": 4536,
											"end": 4583,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4594,
											"end": 4762,
											"name": "tag",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 4594,
											"end": 4762,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4667,
											"end": 4676,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4667,
											"end": 4676,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4667,
											"end": 4676,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 4698,
											"end": 4707,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4698,
											"end": 4707,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4715,
											"end": 4730,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4715,
											"end": 4730,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4715,
											"end": 4730,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 4709,
											"end": 4731,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4709,
											"end": 4731,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 4695,
											"end": 4732,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 4685,
											"end": 4756,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 4685,
											"end": 4756,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4736,
											"end": 4754,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 4736,
											"end": 4754,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "181"
										},
										{
											"begin": 4736,
											"end": 4754,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"contracts/tokenplay.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"admins()": "a5de3619",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"findBalance(address)": "cfba4fe0",
							"increaseAllowance(address,uint256)": "39509351",
							"mint(address)": "6a627842",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,address,uint256)": "beabacc8",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"admins\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"findBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/tokenplay.sol\":\"tokenFunctions\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/tokenplay.sol\":{\"keccak256\":\"0xc51203f5a3b51abfdd040e607acf94e478345f1b943b8a21e8633c7956581e73\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://aa1bc6a0aac2c45edfd942dfd39bffba36f9ee6e3522c65c1755891267926394\",\"dweb:/ipfs/QmeJh4iBomTSqbRnFRfim6cQexjAHk57rwmDpTf5L2PawM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 133,
								"contract": "contracts/tokenplay.sol:tokenFunctions",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 139,
								"contract": "contracts/tokenplay.sol:tokenFunctions",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 141,
								"contract": "contracts/tokenplay.sol:tokenFunctions",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 143,
								"contract": "contracts/tokenplay.sol:tokenFunctions",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 145,
								"contract": "contracts/tokenplay.sol:tokenFunctions",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 709,
								"contract": "contracts/tokenplay.sol:tokenFunctions",
								"label": "admins",
								"offset": 0,
								"slot": "5",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/tokenplay.sol": {
				"ast": {
					"absolutePath": "contracts/tokenplay.sol",
					"exportedSymbols": {
						"Context": [
							121
						],
						"ERC20": [
							704
						],
						"IERC20": [
							77
						],
						"IERC20Metadata": [
							100
						],
						"InterfaceERC20": [
							795
						],
						"Tokenplay": [
							1117
						],
						"tokenFunctions": [
							772
						]
					},
					"id": 1118,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "234:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "259:70:0",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 77,
							"linearizedBaseContracts": [
								77
							],
							"name": "IERC20",
							"nameLocation": "340:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "353:158:0",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 11,
									"name": "Transfer",
									"nameLocation": "522:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "547:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "531:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "531:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "569:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "553:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 6,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "553:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 9,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "581:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "573:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 8,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "573:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "530:57:0"
									},
									"src": "516:72:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 12,
										"nodeType": "StructuredDocumentation",
										"src": "594:148:0",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 20,
									"name": "Approval",
									"nameLocation": "753:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "778:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "762:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "762:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 16,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "801:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "785:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "785:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 18,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "818:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "810:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 17,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "810:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "761:63:0"
									},
									"src": "747:78:0"
								},
								{
									"documentation": {
										"id": 21,
										"nodeType": "StructuredDocumentation",
										"src": "831:66:0",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 26,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "911:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "922:2:0"
									},
									"returnParameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 26,
												"src": "948:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 23,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "948:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "947:9:0"
									},
									"scope": 77,
									"src": "902:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 27,
										"nodeType": "StructuredDocumentation",
										"src": "963:72:0",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 34,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "1049:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 29,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1067:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "1059:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 28,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1059:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1058:17:0"
									},
									"returnParameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 32,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "1099:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 31,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1099:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1098:9:0"
									},
									"scope": 77,
									"src": "1040:68:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 35,
										"nodeType": "StructuredDocumentation",
										"src": "1114:202:0",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 44,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1330:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 37,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1347:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1339:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 36,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1339:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1359:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1351:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 38,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1351:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1338:28:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1385:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 41,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1385:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1384:6:0"
									},
									"scope": 77,
									"src": "1321:70:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 45,
										"nodeType": "StructuredDocumentation",
										"src": "1397:264:0",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 54,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1675:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 50,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1693:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1685:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 46,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1685:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 49,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1708:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1700:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 48,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1700:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1684:32:0"
									},
									"returnParameters": {
										"id": 53,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 52,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1740:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 51,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1740:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1739:9:0"
									},
									"scope": 77,
									"src": "1666:83:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "1755:642:0",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 64,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2411:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2427:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2419:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 56,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2419:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2444:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2436:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 58,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2436:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2418:33:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2470:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 61,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2470:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2469:6:0"
									},
									"scope": 77,
									"src": "2402:74:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 65,
										"nodeType": "StructuredDocumentation",
										"src": "2482:287:0",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 76,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2783:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2804:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2796:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 66,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2796:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2818:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2810:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 68,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2810:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2830:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2822:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 70,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2822:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2795:42:0"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2856:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 73,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2856:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2855:6:0"
									},
									"scope": 77,
									"src": "2774:88:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1118,
							"src": "330:2534:0",
							"usedErrors": [],
							"usedEvents": [
								11,
								20
							]
						},
						{
							"id": 78,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "3027:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 80,
										"name": "IERC20",
										"nameLocations": [
											"3197:6:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 77,
										"src": "3197:6:0"
									},
									"id": 81,
									"nodeType": "InheritanceSpecifier",
									"src": "3197:6:0"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 79,
								"nodeType": "StructuredDocumentation",
								"src": "3052:116:0",
								"text": " @dev Interface for the optional metadata functions from the ERC20 standard.\n _Available since v4.1._"
							},
							"fullyImplemented": false,
							"id": 100,
							"linearizedBaseContracts": [
								100,
								77
							],
							"name": "IERC20Metadata",
							"nameLocation": "3179:14:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 82,
										"nodeType": "StructuredDocumentation",
										"src": "3210:54:0",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 87,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "3278:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 83,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3282:2:0"
									},
									"returnParameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 85,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 87,
												"src": "3308:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 84,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3308:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3307:15:0"
									},
									"scope": 100,
									"src": "3269:54:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 88,
										"nodeType": "StructuredDocumentation",
										"src": "3329:56:0",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 93,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "3399:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3405:2:0"
									},
									"returnParameters": {
										"id": 92,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 91,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 93,
												"src": "3431:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 90,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3431:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3430:15:0"
									},
									"scope": 100,
									"src": "3390:56:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 94,
										"nodeType": "StructuredDocumentation",
										"src": "3452:65:0",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 99,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "3531:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 95,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3539:2:0"
									},
									"returnParameters": {
										"id": 98,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 97,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 99,
												"src": "3565:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 96,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3565:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3564:7:0"
									},
									"scope": 100,
									"src": "3522:50:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1118,
							"src": "3169:405:0",
							"usedErrors": [],
							"usedEvents": [
								11,
								20
							]
						},
						{
							"id": 101,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "3689:23:0"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 102,
								"nodeType": "StructuredDocumentation",
								"src": "3714:496:0",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 121,
							"linearizedBaseContracts": [
								121
							],
							"name": "Context",
							"nameLocation": "4229:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 110,
										"nodeType": "Block",
										"src": "4305:34:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 107,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "4322:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 108,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "4326:6:0",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "4322:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 106,
												"id": 109,
												"nodeType": "Return",
												"src": "4315:17:0"
											}
										]
									},
									"id": 111,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "4252:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 103,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4262:2:0"
									},
									"returnParameters": {
										"id": 106,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 105,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "4296:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 104,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4296:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4295:9:0"
									},
									"scope": 121,
									"src": "4243:96:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 119,
										"nodeType": "Block",
										"src": "4412:32:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 116,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "4429:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 117,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "4433:4:0",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "4429:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 115,
												"id": 118,
												"nodeType": "Return",
												"src": "4422:15:0"
											}
										]
									},
									"id": 120,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "4354:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 112,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4362:2:0"
									},
									"returnParameters": {
										"id": 115,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 114,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 120,
												"src": "4396:14:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 113,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4396:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4395:16:0"
									},
									"scope": 121,
									"src": "4345:99:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1118,
							"src": "4211:235:0",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"id": 122,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "4584:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 124,
										"name": "Context",
										"nameLocations": [
											"5931:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 121,
										"src": "5931:7:0"
									},
									"id": 125,
									"nodeType": "InheritanceSpecifier",
									"src": "5931:7:0"
								},
								{
									"baseName": {
										"id": 126,
										"name": "IERC20",
										"nameLocations": [
											"5940:6:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 77,
										"src": "5940:6:0"
									},
									"id": 127,
									"nodeType": "InheritanceSpecifier",
									"src": "5940:6:0"
								},
								{
									"baseName": {
										"id": 128,
										"name": "IERC20Metadata",
										"nameLocations": [
											"5948:14:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 100,
										"src": "5948:14:0"
									},
									"id": 129,
									"nodeType": "InheritanceSpecifier",
									"src": "5948:14:0"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 123,
								"nodeType": "StructuredDocumentation",
								"src": "4611:1301:0",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n For a generic mechanism see {ERC20PresetMinterPauser}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification.\n Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n functions have been added to mitigate the well-known issues around setting\n allowances. See {IERC20-approve}."
							},
							"fullyImplemented": true,
							"id": 704,
							"linearizedBaseContracts": [
								704,
								100,
								77,
								121
							],
							"name": "ERC20",
							"nameLocation": "5922:5:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 133,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "6005:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 704,
									"src": "5969:45:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 132,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 130,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "5977:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "5969:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 131,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "5988:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 139,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "6077:11:0",
									"nodeType": "VariableDeclaration",
									"scope": 704,
									"src": "6021:67:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 138,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 134,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "6029:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "6021:47:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 137,
											"keyName": "",
											"keyNameLocation": "-1:-1:-1",
											"keyType": {
												"id": 135,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "6048:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "6040:27:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 136,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "6059:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 141,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "6111:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 704,
									"src": "6095:28:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 140,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "6095:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 143,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "6145:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 704,
									"src": "6130:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 142,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "6130:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 145,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "6171:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 704,
									"src": "6156:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 144,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "6156:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 161,
										"nodeType": "Block",
										"src": "6417:57:0",
										"statements": [
											{
												"expression": {
													"id": 155,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 153,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 143,
														"src": "6427:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 154,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 148,
														"src": "6435:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "6427:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 156,
												"nodeType": "ExpressionStatement",
												"src": "6427:13:0"
											},
											{
												"expression": {
													"id": 159,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 157,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 145,
														"src": "6450:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 158,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 150,
														"src": "6460:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "6450:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 160,
												"nodeType": "ExpressionStatement",
												"src": "6450:17:0"
											}
										]
									},
									"documentation": {
										"id": 146,
										"nodeType": "StructuredDocumentation",
										"src": "6185:171:0",
										"text": " @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 162,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 151,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 148,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "6387:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 162,
												"src": "6373:19:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 147,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6373:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 150,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "6408:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 162,
												"src": "6394:21:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 149,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6394:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6372:44:0"
									},
									"returnParameters": {
										"id": 152,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6417:0:0"
									},
									"scope": 704,
									"src": "6361:113:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										87
									],
									"body": {
										"id": 171,
										"nodeType": "Block",
										"src": "6608:29:0",
										"statements": [
											{
												"expression": {
													"id": 169,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 143,
													"src": "6625:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 168,
												"id": 170,
												"nodeType": "Return",
												"src": "6618:12:0"
											}
										]
									},
									"documentation": {
										"id": 163,
										"nodeType": "StructuredDocumentation",
										"src": "6480:54:0",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 172,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "6548:4:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 165,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "6575:8:0"
									},
									"parameters": {
										"id": 164,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6552:2:0"
									},
									"returnParameters": {
										"id": 168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 167,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 172,
												"src": "6593:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 166,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6593:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6592:15:0"
									},
									"scope": 704,
									"src": "6539:98:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										93
									],
									"body": {
										"id": 181,
										"nodeType": "Block",
										"src": "6821:31:0",
										"statements": [
											{
												"expression": {
													"id": 179,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 145,
													"src": "6838:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 178,
												"id": 180,
												"nodeType": "Return",
												"src": "6831:14:0"
											}
										]
									},
									"documentation": {
										"id": 173,
										"nodeType": "StructuredDocumentation",
										"src": "6643:102:0",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 182,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "6759:6:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 175,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "6788:8:0"
									},
									"parameters": {
										"id": 174,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6765:2:0"
									},
									"returnParameters": {
										"id": 178,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 177,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 182,
												"src": "6806:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 176,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6806:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6805:15:0"
									},
									"scope": 704,
									"src": "6750:102:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										99
									],
									"body": {
										"id": 191,
										"nodeType": "Block",
										"src": "7550:26:0",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 189,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "7567:2:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 188,
												"id": 190,
												"nodeType": "Return",
												"src": "7560:9:0"
											}
										]
									},
									"documentation": {
										"id": 183,
										"nodeType": "StructuredDocumentation",
										"src": "6858:622:0",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 192,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "7494:8:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 185,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "7525:8:0"
									},
									"parameters": {
										"id": 184,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7502:2:0"
									},
									"returnParameters": {
										"id": 188,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 187,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "7543:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 186,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "7543:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7542:7:0"
									},
									"scope": 704,
									"src": "7485:91:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										26
									],
									"body": {
										"id": 201,
										"nodeType": "Block",
										"src": "7706:36:0",
										"statements": [
											{
												"expression": {
													"id": 199,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 141,
													"src": "7723:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 198,
												"id": 200,
												"nodeType": "Return",
												"src": "7716:19:0"
											}
										]
									},
									"documentation": {
										"id": 193,
										"nodeType": "StructuredDocumentation",
										"src": "7582:49:0",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 202,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "7645:11:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 195,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "7679:8:0"
									},
									"parameters": {
										"id": 194,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7656:2:0"
									},
									"returnParameters": {
										"id": 198,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 197,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 202,
												"src": "7697:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 196,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7697:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7696:9:0"
									},
									"scope": 704,
									"src": "7636:106:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										34
									],
									"body": {
										"id": 215,
										"nodeType": "Block",
										"src": "7883:42:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 211,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 133,
														"src": "7900:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 213,
													"indexExpression": {
														"id": 212,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 205,
														"src": "7910:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "7900:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 210,
												"id": 214,
												"nodeType": "Return",
												"src": "7893:25:0"
											}
										]
									},
									"documentation": {
										"id": 203,
										"nodeType": "StructuredDocumentation",
										"src": "7748:47:0",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 216,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "7809:9:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 207,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "7856:8:0"
									},
									"parameters": {
										"id": 206,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7827:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 216,
												"src": "7819:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 204,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7819:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7818:17:0"
									},
									"returnParameters": {
										"id": 210,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 209,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 216,
												"src": "7874:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 208,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7874:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7873:9:0"
									},
									"scope": 704,
									"src": "7800:125:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										44
									],
									"body": {
										"id": 240,
										"nodeType": "Block",
										"src": "8206:104:0",
										"statements": [
											{
												"assignments": [
													228
												],
												"declarations": [
													{
														"constant": false,
														"id": 228,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "8224:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 240,
														"src": "8216:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 227,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "8216:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 231,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 229,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "8232:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 230,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8232:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8216:28:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 233,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 228,
															"src": "8264:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 234,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 219,
															"src": "8271:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 235,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 221,
															"src": "8275:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 232,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 464,
														"src": "8254:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 236,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8254:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 237,
												"nodeType": "ExpressionStatement",
												"src": "8254:28:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 238,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "8299:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 226,
												"id": 239,
												"nodeType": "Return",
												"src": "8292:11:0"
											}
										]
									},
									"documentation": {
										"id": 217,
										"nodeType": "StructuredDocumentation",
										"src": "7931:185:0",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `amount`."
									},
									"functionSelector": "a9059cbb",
									"id": 241,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "8130:8:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 223,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "8182:8:0"
									},
									"parameters": {
										"id": 222,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 219,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "8147:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 241,
												"src": "8139:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 218,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8139:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 221,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "8159:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 241,
												"src": "8151:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 220,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8151:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8138:28:0"
									},
									"returnParameters": {
										"id": 226,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 225,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 241,
												"src": "8200:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 224,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8200:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8199:6:0"
									},
									"scope": 704,
									"src": "8121:189:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										54
									],
									"body": {
										"id": 258,
										"nodeType": "Block",
										"src": "8466:51:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 252,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 139,
															"src": "8483:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 254,
														"indexExpression": {
															"id": 253,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 244,
															"src": "8495:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "8483:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 256,
													"indexExpression": {
														"id": 255,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 246,
														"src": "8502:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "8483:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 251,
												"id": 257,
												"nodeType": "Return",
												"src": "8476:34:0"
											}
										]
									},
									"documentation": {
										"id": 242,
										"nodeType": "StructuredDocumentation",
										"src": "8316:47:0",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 259,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "8377:9:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 248,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "8439:8:0"
									},
									"parameters": {
										"id": 247,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 244,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "8395:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 259,
												"src": "8387:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 243,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8387:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 246,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "8410:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 259,
												"src": "8402:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 245,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8402:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8386:32:0"
									},
									"returnParameters": {
										"id": 251,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 250,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 259,
												"src": "8457:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 249,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8457:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8456:9:0"
									},
									"scope": 704,
									"src": "8368:149:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										64
									],
									"body": {
										"id": 283,
										"nodeType": "Block",
										"src": "8914:108:0",
										"statements": [
											{
												"assignments": [
													271
												],
												"declarations": [
													{
														"constant": false,
														"id": 271,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "8932:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 283,
														"src": "8924:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 270,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "8924:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 274,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 272,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "8940:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 273,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8940:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8924:28:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 276,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 271,
															"src": "8971:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 277,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 262,
															"src": "8978:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 278,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 264,
															"src": "8987:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 275,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 638,
														"src": "8962:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 279,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8962:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 280,
												"nodeType": "ExpressionStatement",
												"src": "8962:32:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 281,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "9011:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 269,
												"id": 282,
												"nodeType": "Return",
												"src": "9004:11:0"
											}
										]
									},
									"documentation": {
										"id": 260,
										"nodeType": "StructuredDocumentation",
										"src": "8523:297:0",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 284,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "8834:7:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 266,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "8890:8:0"
									},
									"parameters": {
										"id": 265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "8850:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 284,
												"src": "8842:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 261,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8842:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "8867:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 284,
												"src": "8859:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 263,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8859:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8841:33:0"
									},
									"returnParameters": {
										"id": 269,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 268,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 284,
												"src": "8908:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 267,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8908:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8907:6:0"
									},
									"scope": 704,
									"src": "8825:197:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										76
									],
									"body": {
										"id": 316,
										"nodeType": "Block",
										"src": "9687:153:0",
										"statements": [
											{
												"assignments": [
													298
												],
												"declarations": [
													{
														"constant": false,
														"id": 298,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "9705:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 316,
														"src": "9697:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 297,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "9697:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 301,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 299,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "9715:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 300,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9715:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9697:30:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 303,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 287,
															"src": "9753:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 304,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 298,
															"src": "9759:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 305,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 291,
															"src": "9768:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 302,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 681,
														"src": "9737:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 306,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9737:38:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 307,
												"nodeType": "ExpressionStatement",
												"src": "9737:38:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 309,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 287,
															"src": "9795:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 310,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 289,
															"src": "9801:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 311,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 291,
															"src": "9805:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 308,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 464,
														"src": "9785:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 312,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9785:27:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 313,
												"nodeType": "ExpressionStatement",
												"src": "9785:27:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 314,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "9829:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 296,
												"id": 315,
												"nodeType": "Return",
												"src": "9822:11:0"
											}
										]
									},
									"documentation": {
										"id": 285,
										"nodeType": "StructuredDocumentation",
										"src": "9028:551:0",
										"text": " @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `amount`.\n - the caller must have allowance for ``from``'s tokens of at least\n `amount`."
									},
									"functionSelector": "23b872dd",
									"id": 317,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "9593:12:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 293,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "9663:8:0"
									},
									"parameters": {
										"id": 292,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 287,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "9614:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 317,
												"src": "9606:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 286,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9606:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 289,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "9628:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 317,
												"src": "9620:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 288,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9620:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 291,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "9640:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 317,
												"src": "9632:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 290,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9632:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9605:42:0"
									},
									"returnParameters": {
										"id": 296,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 295,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 317,
												"src": "9681:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 294,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9681:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9680:6:0"
									},
									"scope": 704,
									"src": "9584:256:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 345,
										"nodeType": "Block",
										"src": "10329:140:0",
										"statements": [
											{
												"assignments": [
													328
												],
												"declarations": [
													{
														"constant": false,
														"id": 328,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "10347:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 345,
														"src": "10339:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 327,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "10339:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 331,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 329,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "10355:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 330,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10355:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10339:28:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 333,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 328,
															"src": "10386:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 334,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 320,
															"src": "10393:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 340,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 336,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 328,
																		"src": "10412:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 337,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 320,
																		"src": "10419:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 335,
																	"name": "allowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 259,
																	"src": "10402:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address,address) view returns (uint256)"
																	}
																},
																"id": 338,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10402:25:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 339,
																"name": "addedValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 322,
																"src": "10430:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10402:38:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 332,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 638,
														"src": "10377:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 341,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10377:64:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 342,
												"nodeType": "ExpressionStatement",
												"src": "10377:64:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 343,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "10458:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 326,
												"id": 344,
												"nodeType": "Return",
												"src": "10451:11:0"
											}
										]
									},
									"documentation": {
										"id": 318,
										"nodeType": "StructuredDocumentation",
										"src": "9846:384:0",
										"text": " @dev Atomically increases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "39509351",
									"id": 346,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "increaseAllowance",
									"nameLocation": "10244:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 323,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 320,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10270:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 346,
												"src": "10262:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 319,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10262:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 322,
												"mutability": "mutable",
												"name": "addedValue",
												"nameLocation": "10287:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 346,
												"src": "10279:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 321,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10279:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10261:37:0"
									},
									"returnParameters": {
										"id": 326,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 325,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 346,
												"src": "10323:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 324,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "10323:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10322:6:0"
									},
									"scope": 704,
									"src": "10235:234:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 386,
										"nodeType": "Block",
										"src": "11055:328:0",
										"statements": [
											{
												"assignments": [
													357
												],
												"declarations": [
													{
														"constant": false,
														"id": 357,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "11073:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 386,
														"src": "11065:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 356,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "11065:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 360,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 358,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "11081:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 359,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11081:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11065:28:0"
											},
											{
												"assignments": [
													362
												],
												"declarations": [
													{
														"constant": false,
														"id": 362,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "11111:16:0",
														"nodeType": "VariableDeclaration",
														"scope": 386,
														"src": "11103:24:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 361,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "11103:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 367,
												"initialValue": {
													"arguments": [
														{
															"id": 364,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 357,
															"src": "11140:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 365,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 349,
															"src": "11147:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 363,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 259,
														"src": "11130:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 366,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11130:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11103:52:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 371,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 369,
																"name": "currentAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 362,
																"src": "11173:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 370,
																"name": "subtractedValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 351,
																"src": "11193:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "11173:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
															"id": 372,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11210:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																"typeString": "literal_string \"ERC20: decreased allowance below zero\""
															},
															"value": "ERC20: decreased allowance below zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																"typeString": "literal_string \"ERC20: decreased allowance below zero\""
															}
														],
														"id": 368,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "11165:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 373,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11165:85:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 374,
												"nodeType": "ExpressionStatement",
												"src": "11165:85:0"
											},
											{
												"id": 383,
												"nodeType": "UncheckedBlock",
												"src": "11260:95:0",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"id": 376,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 357,
																	"src": "11293:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 377,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 349,
																	"src": "11300:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 380,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 378,
																		"name": "currentAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 362,
																		"src": "11309:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 379,
																		"name": "subtractedValue",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 351,
																		"src": "11328:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "11309:34:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 375,
																"name": "_approve",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 638,
																"src": "11284:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																	"typeString": "function (address,address,uint256)"
																}
															},
															"id": 381,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11284:60:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 382,
														"nodeType": "ExpressionStatement",
														"src": "11284:60:0"
													}
												]
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 384,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "11372:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 355,
												"id": 385,
												"nodeType": "Return",
												"src": "11365:11:0"
											}
										]
									},
									"documentation": {
										"id": 347,
										"nodeType": "StructuredDocumentation",
										"src": "10475:476:0",
										"text": " @dev Atomically decreases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address.\n - `spender` must have allowance for the caller of at least\n `subtractedValue`."
									},
									"functionSelector": "a457c2d7",
									"id": 387,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decreaseAllowance",
									"nameLocation": "10965:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 352,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 349,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10991:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 387,
												"src": "10983:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 348,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10983:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 351,
												"mutability": "mutable",
												"name": "subtractedValue",
												"nameLocation": "11008:15:0",
												"nodeType": "VariableDeclaration",
												"scope": 387,
												"src": "11000:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 350,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11000:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10982:42:0"
									},
									"returnParameters": {
										"id": 355,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 354,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 387,
												"src": "11049:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 353,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "11049:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11048:6:0"
									},
									"scope": 704,
									"src": "10956:427:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 463,
										"nodeType": "Block",
										"src": "11915:710:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 403,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 398,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 390,
																"src": "11933:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 401,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "11949:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 400,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "11941:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 399,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "11941:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 402,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11941:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "11933:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
															"id": 404,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11953:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															},
															"value": "ERC20: transfer from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															}
														],
														"id": 397,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "11925:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 405,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11925:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 406,
												"nodeType": "ExpressionStatement",
												"src": "11925:68:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 413,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 408,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 392,
																"src": "12011:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 411,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "12025:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 410,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "12017:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 409,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "12017:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 412,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12017:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "12011:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 414,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12029:37:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															},
															"value": "ERC20: transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															}
														],
														"id": 407,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "12003:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 415,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12003:64:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 416,
												"nodeType": "ExpressionStatement",
												"src": "12003:64:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 418,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 390,
															"src": "12099:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 419,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 392,
															"src": "12105:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 420,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 394,
															"src": "12109:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 417,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 692,
														"src": "12078:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 421,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12078:38:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 422,
												"nodeType": "ExpressionStatement",
												"src": "12078:38:0"
											},
											{
												"assignments": [
													424
												],
												"declarations": [
													{
														"constant": false,
														"id": 424,
														"mutability": "mutable",
														"name": "fromBalance",
														"nameLocation": "12135:11:0",
														"nodeType": "VariableDeclaration",
														"scope": 463,
														"src": "12127:19:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 423,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "12127:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 428,
												"initialValue": {
													"baseExpression": {
														"id": 425,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 133,
														"src": "12149:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 427,
													"indexExpression": {
														"id": 426,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 390,
														"src": "12159:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "12149:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12127:37:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 432,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 430,
																"name": "fromBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 424,
																"src": "12182:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 431,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 394,
																"src": "12197:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "12182:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
															"id": 433,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12205:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																"typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
															},
															"value": "ERC20: transfer amount exceeds balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																"typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
															}
														],
														"id": 429,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "12174:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 434,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12174:72:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 435,
												"nodeType": "ExpressionStatement",
												"src": "12174:72:0"
											},
											{
												"id": 450,
												"nodeType": "UncheckedBlock",
												"src": "12256:273:0",
												"statements": [
													{
														"expression": {
															"id": 442,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 436,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 133,
																	"src": "12280:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 438,
																"indexExpression": {
																	"id": 437,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 390,
																	"src": "12290:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "12280:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 441,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 439,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 424,
																	"src": "12298:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 440,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 394,
																	"src": "12312:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "12298:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "12280:38:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 443,
														"nodeType": "ExpressionStatement",
														"src": "12280:38:0"
													},
													{
														"expression": {
															"id": 448,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 444,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 133,
																	"src": "12495:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 446,
																"indexExpression": {
																	"id": 445,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 392,
																	"src": "12505:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "12495:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"id": 447,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 394,
																"src": "12512:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "12495:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 449,
														"nodeType": "ExpressionStatement",
														"src": "12495:23:0"
													}
												]
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 452,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 390,
															"src": "12553:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 453,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 392,
															"src": "12559:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 454,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 394,
															"src": "12563:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 451,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 11,
														"src": "12544:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 455,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12544:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 456,
												"nodeType": "EmitStatement",
												"src": "12539:31:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 458,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 390,
															"src": "12601:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 459,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 392,
															"src": "12607:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 460,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 394,
															"src": "12611:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 457,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 703,
														"src": "12581:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 461,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12581:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 462,
												"nodeType": "ExpressionStatement",
												"src": "12581:37:0"
											}
										]
									},
									"documentation": {
										"id": 388,
										"nodeType": "StructuredDocumentation",
										"src": "11389:443:0",
										"text": " @dev Moves `amount` of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `from` must have a balance of at least `amount`."
									},
									"id": 464,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "11846:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 395,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 390,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "11864:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 464,
												"src": "11856:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 389,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11856:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 392,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "11878:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 464,
												"src": "11870:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 391,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11870:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 394,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "11890:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 464,
												"src": "11882:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 393,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11882:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11855:42:0"
									},
									"returnParameters": {
										"id": 396,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11915:0:0"
									},
									"scope": 704,
									"src": "11837:788:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 520,
										"nodeType": "Block",
										"src": "12966:470:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 478,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 473,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 467,
																"src": "12984:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 476,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "13003:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 475,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "12995:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 474,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "12995:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 477,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12995:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "12984:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206d696e7420746f20746865207a65726f2061646472657373",
															"id": 479,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13007:33:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
																"typeString": "literal_string \"ERC20: mint to the zero address\""
															},
															"value": "ERC20: mint to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
																"typeString": "literal_string \"ERC20: mint to the zero address\""
															}
														],
														"id": 472,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "12976:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 480,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12976:65:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 481,
												"nodeType": "ExpressionStatement",
												"src": "12976:65:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 485,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13081:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 484,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "13073:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 483,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "13073:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 486,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13073:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 487,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 467,
															"src": "13085:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 488,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 469,
															"src": "13094:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 482,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 692,
														"src": "13052:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 489,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13052:49:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 490,
												"nodeType": "ExpressionStatement",
												"src": "13052:49:0"
											},
											{
												"expression": {
													"id": 493,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 491,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 141,
														"src": "13112:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 492,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 469,
														"src": "13128:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "13112:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 494,
												"nodeType": "ExpressionStatement",
												"src": "13112:22:0"
											},
											{
												"id": 501,
												"nodeType": "UncheckedBlock",
												"src": "13144:175:0",
												"statements": [
													{
														"expression": {
															"id": 499,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 495,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 133,
																	"src": "13280:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 497,
																"indexExpression": {
																	"id": 496,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 467,
																	"src": "13290:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "13280:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"id": 498,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 469,
																"src": "13302:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "13280:28:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 500,
														"nodeType": "ExpressionStatement",
														"src": "13280:28:0"
													}
												]
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 505,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13350:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 504,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "13342:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 503,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "13342:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 506,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13342:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 507,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 467,
															"src": "13354:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 508,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 469,
															"src": "13363:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 502,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 11,
														"src": "13333:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 509,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13333:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 510,
												"nodeType": "EmitStatement",
												"src": "13328:42:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 514,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13409:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 513,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "13401:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 512,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "13401:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 515,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13401:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 516,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 467,
															"src": "13413:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 517,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 469,
															"src": "13422:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 511,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 703,
														"src": "13381:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 518,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13381:48:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 519,
												"nodeType": "ExpressionStatement",
												"src": "13381:48:0"
											}
										]
									},
									"documentation": {
										"id": 465,
										"nodeType": "StructuredDocumentation",
										"src": "12631:265:0",
										"text": "@dev Creates `amount` tokens and assigns them to `account`, increasing\n the total supply.\n Emits a {Transfer} event with `from` set to the zero address.\n Requirements:\n - `account` cannot be the zero address."
									},
									"id": 521,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "12910:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 470,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 467,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "12924:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 521,
												"src": "12916:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 466,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12916:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 469,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "12941:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 521,
												"src": "12933:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 468,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12933:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12915:33:0"
									},
									"returnParameters": {
										"id": 471,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12966:0:0"
									},
									"scope": 704,
									"src": "12901:535:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 592,
										"nodeType": "Block",
										"src": "13821:594:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 535,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 530,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 524,
																"src": "13839:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 533,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "13858:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 532,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "13850:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 531,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "13850:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 534,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "13850:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "13839:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206275726e2066726f6d20746865207a65726f2061646472657373",
															"id": 536,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13862:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
																"typeString": "literal_string \"ERC20: burn from the zero address\""
															},
															"value": "ERC20: burn from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
																"typeString": "literal_string \"ERC20: burn from the zero address\""
															}
														],
														"id": 529,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "13831:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 537,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13831:67:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 538,
												"nodeType": "ExpressionStatement",
												"src": "13831:67:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 540,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 524,
															"src": "13930:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 543,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13947:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 542,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "13939:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 541,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "13939:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 544,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13939:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 545,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 526,
															"src": "13951:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 539,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 692,
														"src": "13909:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 546,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13909:49:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 547,
												"nodeType": "ExpressionStatement",
												"src": "13909:49:0"
											},
											{
												"assignments": [
													549
												],
												"declarations": [
													{
														"constant": false,
														"id": 549,
														"mutability": "mutable",
														"name": "accountBalance",
														"nameLocation": "13977:14:0",
														"nodeType": "VariableDeclaration",
														"scope": 592,
														"src": "13969:22:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 548,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "13969:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 553,
												"initialValue": {
													"baseExpression": {
														"id": 550,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 133,
														"src": "13994:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 552,
													"indexExpression": {
														"id": 551,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 524,
														"src": "14004:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "13994:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13969:43:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 557,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 555,
																"name": "accountBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 549,
																"src": "14030:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 556,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 526,
																"src": "14048:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "14030:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206275726e20616d6f756e7420657863656564732062616c616e6365",
															"id": 558,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14056:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
																"typeString": "literal_string \"ERC20: burn amount exceeds balance\""
															},
															"value": "ERC20: burn amount exceeds balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
																"typeString": "literal_string \"ERC20: burn amount exceeds balance\""
															}
														],
														"id": 554,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "14022:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 559,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14022:71:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 560,
												"nodeType": "ExpressionStatement",
												"src": "14022:71:0"
											},
											{
												"id": 573,
												"nodeType": "UncheckedBlock",
												"src": "14103:194:0",
												"statements": [
													{
														"expression": {
															"id": 567,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 561,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 133,
																	"src": "14127:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 563,
																"indexExpression": {
																	"id": 562,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 524,
																	"src": "14137:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "14127:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 566,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 564,
																	"name": "accountBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 549,
																	"src": "14148:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 565,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 526,
																	"src": "14165:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "14148:23:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "14127:44:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 568,
														"nodeType": "ExpressionStatement",
														"src": "14127:44:0"
													},
													{
														"expression": {
															"id": 571,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 569,
																"name": "_totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 141,
																"src": "14264:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "-=",
															"rightHandSide": {
																"id": 570,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 526,
																"src": "14280:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "14264:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 572,
														"nodeType": "ExpressionStatement",
														"src": "14264:22:0"
													}
												]
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 575,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 524,
															"src": "14321:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 578,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14338:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 577,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "14330:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 576,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "14330:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 579,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14330:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 580,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 526,
															"src": "14342:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 574,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 11,
														"src": "14312:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 581,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14312:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 582,
												"nodeType": "EmitStatement",
												"src": "14307:42:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 584,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 524,
															"src": "14380:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 587,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14397:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 586,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "14389:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 585,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "14389:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 588,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14389:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 589,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 526,
															"src": "14401:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 583,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 703,
														"src": "14360:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 590,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14360:48:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 591,
												"nodeType": "ExpressionStatement",
												"src": "14360:48:0"
											}
										]
									},
									"documentation": {
										"id": 522,
										"nodeType": "StructuredDocumentation",
										"src": "13442:309:0",
										"text": " @dev Destroys `amount` tokens from `account`, reducing the\n total supply.\n Emits a {Transfer} event with `to` set to the zero address.\n Requirements:\n - `account` cannot be the zero address.\n - `account` must have at least `amount` tokens."
									},
									"id": 593,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "13765:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 527,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 524,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "13779:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 593,
												"src": "13771:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 523,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13771:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 526,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "13796:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 593,
												"src": "13788:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 525,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13788:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13770:33:0"
									},
									"returnParameters": {
										"id": 528,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13821:0:0"
									},
									"scope": 704,
									"src": "13756:659:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 637,
										"nodeType": "Block",
										"src": "14921:257:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 609,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 604,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 596,
																"src": "14939:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 607,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "14956:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 606,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "14948:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 605,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "14948:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 608,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "14948:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "14939:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373",
															"id": 610,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14960:38:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															},
															"value": "ERC20: approve from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															}
														],
														"id": 603,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "14931:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 611,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14931:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 612,
												"nodeType": "ExpressionStatement",
												"src": "14931:68:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 619,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 614,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 598,
																"src": "15017:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 617,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "15036:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 616,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "15028:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 615,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "15028:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 618,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "15028:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "15017:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a20617070726f766520746f20746865207a65726f2061646472657373",
															"id": 620,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15040:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															},
															"value": "ERC20: approve to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															}
														],
														"id": 613,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "15009:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 621,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15009:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 622,
												"nodeType": "ExpressionStatement",
												"src": "15009:68:0"
											},
											{
												"expression": {
													"id": 629,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 623,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 139,
																"src": "15088:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 626,
															"indexExpression": {
																"id": 624,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 596,
																"src": "15100:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "15088:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 627,
														"indexExpression": {
															"id": 625,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 598,
															"src": "15107:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "15088:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 628,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 600,
														"src": "15118:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "15088:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 630,
												"nodeType": "ExpressionStatement",
												"src": "15088:36:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 632,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 596,
															"src": "15148:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 633,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 598,
															"src": "15155:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 634,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 600,
															"src": "15164:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 631,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 20,
														"src": "15139:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 635,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15139:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 636,
												"nodeType": "EmitStatement",
												"src": "15134:37:0"
											}
										]
									},
									"documentation": {
										"id": 594,
										"nodeType": "StructuredDocumentation",
										"src": "14421:412:0",
										"text": " @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address."
									},
									"id": 638,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "14847:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 601,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 596,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "14864:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 638,
												"src": "14856:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 595,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14856:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 598,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "14879:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 638,
												"src": "14871:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 597,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14871:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 600,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "14896:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 638,
												"src": "14888:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 599,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14888:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14855:48:0"
									},
									"returnParameters": {
										"id": 602,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14921:0:0"
									},
									"scope": 704,
									"src": "14838:340:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 680,
										"nodeType": "Block",
										"src": "15549:321:0",
										"statements": [
											{
												"assignments": [
													649
												],
												"declarations": [
													{
														"constant": false,
														"id": 649,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "15567:16:0",
														"nodeType": "VariableDeclaration",
														"scope": 680,
														"src": "15559:24:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 648,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "15559:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 654,
												"initialValue": {
													"arguments": [
														{
															"id": 651,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 641,
															"src": "15596:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 652,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 643,
															"src": "15603:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 650,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 259,
														"src": "15586:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 653,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15586:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "15559:52:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 661,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 655,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 649,
														"src": "15625:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 658,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "15650:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 657,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "15650:7:0",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 656,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "15645:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 659,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15645:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 660,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "15659:3:0",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "15645:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "15625:37:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 679,
												"nodeType": "IfStatement",
												"src": "15621:243:0",
												"trueBody": {
													"id": 678,
													"nodeType": "Block",
													"src": "15664:200:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 665,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 663,
																			"name": "currentAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 649,
																			"src": "15686:16:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"id": 664,
																			"name": "amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 645,
																			"src": "15706:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "15686:26:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "45524332303a20696e73756666696369656e7420616c6c6f77616e6365",
																		"id": 666,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "15714:31:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe",
																			"typeString": "literal_string \"ERC20: insufficient allowance\""
																		},
																		"value": "ERC20: insufficient allowance"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe",
																			"typeString": "literal_string \"ERC20: insufficient allowance\""
																		}
																	],
																	"id": 662,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "15678:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 667,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "15678:68:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 668,
															"nodeType": "ExpressionStatement",
															"src": "15678:68:0"
														},
														{
															"id": 677,
															"nodeType": "UncheckedBlock",
															"src": "15760:94:0",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 670,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 641,
																				"src": "15797:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 671,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 643,
																				"src": "15804:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 674,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 672,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 649,
																					"src": "15813:16:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 673,
																					"name": "amount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 645,
																					"src": "15832:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "15813:25:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 669,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 638,
																			"src": "15788:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																				"typeString": "function (address,address,uint256)"
																			}
																		},
																		"id": 675,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "15788:51:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 676,
																	"nodeType": "ExpressionStatement",
																	"src": "15788:51:0"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 639,
										"nodeType": "StructuredDocumentation",
										"src": "15184:270:0",
										"text": " @dev Updates `owner` s allowance for `spender` based on spent `amount`.\n Does not update the allowance amount in case of infinite allowance.\n Revert if not enough allowance is available.\n Might emit an {Approval} event."
									},
									"id": 681,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "15468:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 646,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 641,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "15492:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 681,
												"src": "15484:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 640,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15484:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 643,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "15507:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 681,
												"src": "15499:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 642,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15499:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 645,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "15524:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 681,
												"src": "15516:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 644,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15516:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15483:48:0"
									},
									"returnParameters": {
										"id": 647,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15549:0:0"
									},
									"scope": 704,
									"src": "15459:411:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 691,
										"nodeType": "Block",
										"src": "16543:2:0",
										"statements": []
									},
									"documentation": {
										"id": 682,
										"nodeType": "StructuredDocumentation",
										"src": "15876:573:0",
										"text": " @dev Hook that is called before any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n will be transferred to `to`.\n - when `from` is zero, `amount` tokens will be minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 692,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeTokenTransfer",
									"nameLocation": "16463:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 689,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 684,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "16492:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 692,
												"src": "16484:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 683,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16484:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 686,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "16506:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 692,
												"src": "16498:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 685,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16498:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 688,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "16518:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 692,
												"src": "16510:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 687,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16510:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16483:42:0"
									},
									"returnParameters": {
										"id": 690,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16543:0:0"
									},
									"scope": 704,
									"src": "16454:91:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 702,
										"nodeType": "Block",
										"src": "17221:2:0",
										"statements": []
									},
									"documentation": {
										"id": 693,
										"nodeType": "StructuredDocumentation",
										"src": "16551:577:0",
										"text": " @dev Hook that is called after any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n has been transferred to `to`.\n - when `from` is zero, `amount` tokens have been minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 703,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_afterTokenTransfer",
									"nameLocation": "17142:19:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 700,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 695,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "17170:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 703,
												"src": "17162:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 694,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17162:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 697,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "17184:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 703,
												"src": "17176:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 696,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17176:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 699,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "17196:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 703,
												"src": "17188:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 698,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17188:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17161:42:0"
									},
									"returnParameters": {
										"id": 701,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17221:0:0"
									},
									"scope": 704,
									"src": "17133:90:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1118,
							"src": "5913:11312:0",
							"usedErrors": [],
							"usedEvents": [
								11,
								20
							]
						},
						{
							"id": 705,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "17266:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 706,
										"name": "ERC20",
										"nameLocations": [
											"17318:5:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 704,
										"src": "17318:5:0"
									},
									"id": 707,
									"nodeType": "InheritanceSpecifier",
									"src": "17318:5:0"
								}
							],
							"canonicalName": "tokenFunctions",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 772,
							"linearizedBaseContracts": [
								772,
								704,
								100,
								77,
								121
							],
							"name": "tokenFunctions",
							"nameLocation": "17300:14:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "a5de3619",
									"id": 709,
									"mutability": "mutable",
									"name": "admins",
									"nameLocation": "17345:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 772,
									"src": "17330:21:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 708,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "17330:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 721,
										"nodeType": "Block",
										"src": "17399:36:0",
										"statements": [
											{
												"expression": {
													"id": 719,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 716,
														"name": "admins",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 709,
														"src": "17409:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 717,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "17418:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 718,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "17422:6:0",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "17418:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "17409:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 720,
												"nodeType": "ExpressionStatement",
												"src": "17409:19:0"
											}
										]
									},
									"id": 722,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "43555252454e4359",
													"id": 712,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "17378:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_4e8e254edb01426b6143b7bc645e83d15690c4c05223fa236535e12cb103e884",
														"typeString": "literal_string \"CURRENCY\""
													},
													"value": "CURRENCY"
												},
												{
													"hexValue": "4d41544943",
													"id": 713,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "17390:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_a6a7de01e8b7ba6a4a61c782a73188d808fc1f3cf5743fadb68a02ed884b594f",
														"typeString": "literal_string \"MATIC\""
													},
													"value": "MATIC"
												}
											],
											"id": 714,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 711,
												"name": "ERC20",
												"nameLocations": [
													"17372:5:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 704,
												"src": "17372:5:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "17372:26:0"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 710,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17369:2:0"
									},
									"returnParameters": {
										"id": 715,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17399:0:0"
									},
									"scope": 772,
									"src": "17358:77:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 738,
										"nodeType": "Block",
										"src": "17479:60:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 728,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 724,
															"src": "17495:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 735,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "3730303030303030",
																"id": 729,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "17502:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_70000000_by_1",
																	"typeString": "int_const 70000000"
																},
																"value": "70000000"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 733,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "3130",
																			"id": 730,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "17514:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10_by_1",
																				"typeString": "int_const 10"
																			},
																			"value": "10"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "**",
																		"rightExpression": {
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 731,
																				"name": "decimals",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 192,
																				"src": "17520:8:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$__$returns$_t_uint8_$",
																					"typeString": "function () view returns (uint8)"
																				}
																			},
																			"id": 732,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "17520:10:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		},
																		"src": "17514:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 734,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "17513:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "17502:29:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 727,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 521,
														"src": "17489:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 736,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17489:43:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 737,
												"nodeType": "ExpressionStatement",
												"src": "17489:43:0"
											}
										]
									},
									"functionSelector": "6a627842",
									"id": 739,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mint",
									"nameLocation": "17450:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 725,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 724,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "17463:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 739,
												"src": "17455:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 723,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17455:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17454:15:0"
									},
									"returnParameters": {
										"id": 726,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17479:0:0"
									},
									"scope": 772,
									"src": "17441:98:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 754,
										"nodeType": "Block",
										"src": "17609:71:0",
										"statements": [
											{
												"assignments": [
													747
												],
												"declarations": [
													{
														"constant": false,
														"id": 747,
														"mutability": "mutable",
														"name": "balance",
														"nameLocation": "17624:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 754,
														"src": "17619:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 746,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "17619:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 751,
												"initialValue": {
													"arguments": [
														{
															"id": 749,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 741,
															"src": "17644:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 748,
														"name": "balanceOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 216,
														"src": "17634:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view returns (uint256)"
														}
													},
													"id": 750,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17634:15:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "17619:30:0"
											},
											{
												"expression": {
													"id": 752,
													"name": "balance",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 747,
													"src": "17666:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 745,
												"id": 753,
												"nodeType": "Return",
												"src": "17659:14:0"
											}
										]
									},
									"functionSelector": "cfba4fe0",
									"id": 755,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "findBalance",
									"nameLocation": "17554:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 742,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 741,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "17574:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 755,
												"src": "17566:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 740,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17566:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17565:14:0"
									},
									"returnParameters": {
										"id": 745,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 744,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 755,
												"src": "17603:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 743,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "17603:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17602:6:0"
									},
									"scope": 772,
									"src": "17545:135:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 770,
										"nodeType": "Block",
										"src": "17752:44:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 765,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 757,
															"src": "17772:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 766,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 759,
															"src": "17778:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 767,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 761,
															"src": "17782:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 764,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 464,
														"src": "17762:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 768,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17762:27:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 769,
												"nodeType": "ExpressionStatement",
												"src": "17762:27:0"
											}
										]
									},
									"functionSelector": "beabacc8",
									"id": 771,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "17695:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 762,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 757,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "17712:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 771,
												"src": "17704:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 756,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17704:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 759,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "17726:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 771,
												"src": "17718:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 758,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17718:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 761,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "17735:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 771,
												"src": "17730:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 760,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "17730:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17703:39:0"
									},
									"returnParameters": {
										"id": 763,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17752:0:0"
									},
									"scope": 772,
									"src": "17686:110:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1118,
							"src": "17291:507:0",
							"usedErrors": [],
							"usedEvents": [
								11,
								20
							]
						},
						{
							"id": 773,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "17839:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "InterfaceERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 795,
							"linearizedBaseContracts": [
								795
							],
							"name": "InterfaceERC20",
							"nameLocation": "17874:14:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "6a627842",
									"id": 778,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "mint",
									"nameLocation": "17903:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 776,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 775,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "17916:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 778,
												"src": "17908:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 774,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17908:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17907:14:0"
									},
									"returnParameters": {
										"id": 777,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17930:0:0"
									},
									"scope": 795,
									"src": "17894:37:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "beabacc8",
									"id": 787,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "17945:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 785,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 780,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "17962:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 787,
												"src": "17954:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 779,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17954:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 782,
												"mutability": "mutable",
												"name": "referrer",
												"nameLocation": "17976:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 787,
												"src": "17968:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 781,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17968:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 784,
												"mutability": "mutable",
												"name": "tokens",
												"nameLocation": "17990:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 787,
												"src": "17985:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 783,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "17985:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17953:44:0"
									},
									"returnParameters": {
										"id": 786,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "18006:0:0"
									},
									"scope": 795,
									"src": "17936:71:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "cfba4fe0",
									"id": 794,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "findBalance",
									"nameLocation": "18021:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 790,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 789,
												"mutability": "mutable",
												"name": "tokenUser",
												"nameLocation": "18041:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 794,
												"src": "18033:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 788,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18033:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18032:19:0"
									},
									"returnParameters": {
										"id": 793,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 792,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 794,
												"src": "18069:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 791,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "18069:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18068:6:0"
									},
									"scope": 795,
									"src": "18012:63:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1118,
							"src": "17864:213:0",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"id": 796,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "18122:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Tokenplay",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1117,
							"linearizedBaseContracts": [
								1117
							],
							"name": "Tokenplay",
							"nameLocation": "18156:9:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "a5de3619",
									"id": 798,
									"mutability": "mutable",
									"name": "admins",
									"nameLocation": "18187:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 1117,
									"src": "18172:21:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 797,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "18172:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 801,
									"mutability": "mutable",
									"name": "count",
									"nameLocation": "18204:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 1117,
									"src": "18199:14:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 799,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "18199:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30",
										"id": 800,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "18212:1:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0"
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 803,
									"mutability": "mutable",
									"name": "sync",
									"nameLocation": "18232:4:0",
									"nodeType": "VariableDeclaration",
									"scope": 1117,
									"src": "18219:17:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 802,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "18219:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"functionSelector": "60f96a8f",
									"id": 805,
									"mutability": "mutable",
									"name": "parent",
									"nameLocation": "18257:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 1117,
									"src": "18242:21:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 804,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "18242:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "5ec01e4d",
									"id": 807,
									"mutability": "mutable",
									"name": "random",
									"nameLocation": "18281:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 1117,
									"src": "18269:18:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 806,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "18269:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "f13ad725",
									"id": 810,
									"mutability": "mutable",
									"name": "inter",
									"nameLocation": "18315:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 1117,
									"src": "18293:27:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_InterfaceERC20_$795",
										"typeString": "contract InterfaceERC20"
									},
									"typeName": {
										"id": 809,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 808,
											"name": "InterfaceERC20",
											"nameLocations": [
												"18293:14:0"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 795,
											"src": "18293:14:0"
										},
										"referencedDeclaration": 795,
										"src": "18293:14:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_InterfaceERC20_$795",
											"typeString": "contract InterfaceERC20"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "82e4eda4",
									"id": 815,
									"mutability": "mutable",
									"name": "staker",
									"nameLocation": "18361:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 1117,
									"src": "18327:40:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$824_storage_$",
										"typeString": "mapping(address => struct Tokenplay.Staker)"
									},
									"typeName": {
										"id": 814,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 811,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "18335:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "18327:26:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$824_storage_$",
											"typeString": "mapping(address => struct Tokenplay.Staker)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 813,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 812,
												"name": "Staker",
												"nameLocations": [
													"18346:6:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 824,
												"src": "18346:6:0"
											},
											"referencedDeclaration": 824,
											"src": "18346:6:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Staker_$824_storage_ptr",
												"typeString": "struct Tokenplay.Staker"
											}
										}
									},
									"visibility": "public"
								},
								{
									"canonicalName": "Tokenplay.Staker",
									"id": 824,
									"members": [
										{
											"constant": false,
											"id": 817,
											"mutability": "mutable",
											"name": "tokenid",
											"nameLocation": "18402:7:0",
											"nodeType": "VariableDeclaration",
											"scope": 824,
											"src": "18397:12:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 816,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "18397:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 819,
											"mutability": "mutable",
											"name": "referrer",
											"nameLocation": "18427:8:0",
											"nodeType": "VariableDeclaration",
											"scope": 824,
											"src": "18419:16:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 818,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "18419:7:0",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 821,
											"mutability": "mutable",
											"name": "setreferrer",
											"nameLocation": "18450:11:0",
											"nodeType": "VariableDeclaration",
											"scope": 824,
											"src": "18445:16:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 820,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "18445:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 823,
											"mutability": "mutable",
											"name": "activeUser",
											"nameLocation": "18476:10:0",
											"nodeType": "VariableDeclaration",
											"scope": 824,
											"src": "18471:15:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 822,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "18471:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Staker",
									"nameLocation": "18380:6:0",
									"nodeType": "StructDefinition",
									"scope": 1117,
									"src": "18373:120:0",
									"visibility": "public"
								},
								{
									"body": {
										"id": 863,
										"nodeType": "Block",
										"src": "18534:246:0",
										"statements": [
											{
												"expression": {
													"id": 833,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 829,
														"name": "inter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 810,
														"src": "18585:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_InterfaceERC20_$795",
															"typeString": "contract InterfaceERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 831,
																"name": "_ERC20address",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 826,
																"src": "18608:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 830,
															"name": "InterfaceERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 795,
															"src": "18593:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_InterfaceERC20_$795_$",
																"typeString": "type(contract InterfaceERC20)"
															}
														},
														"id": 832,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "18593:29:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_InterfaceERC20_$795",
															"typeString": "contract InterfaceERC20"
														}
													},
													"src": "18585:37:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_InterfaceERC20_$795",
														"typeString": "contract InterfaceERC20"
													}
												},
												"id": 834,
												"nodeType": "ExpressionStatement",
												"src": "18585:37:0"
											},
											{
												"expression": {
													"id": 838,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 835,
														"name": "admins",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 798,
														"src": "18632:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 836,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "18641:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 837,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "18645:6:0",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "18641:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "18632:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 839,
												"nodeType": "ExpressionStatement",
												"src": "18632:19:0"
											},
											{
												"expression": {
													"id": 846,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 840,
																"name": "staker",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 815,
																"src": "18661:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$824_storage_$",
																	"typeString": "mapping(address => struct Tokenplay.Staker storage ref)"
																}
															},
															"id": 843,
															"indexExpression": {
																"expression": {
																	"id": 841,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "18668:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 842,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "18672:6:0",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "18668:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "18661:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Staker_$824_storage",
																"typeString": "struct Tokenplay.Staker storage ref"
															}
														},
														"id": 844,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "18680:10:0",
														"memberName": "activeUser",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 823,
														"src": "18661:29:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 845,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "18693:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "18661:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 847,
												"nodeType": "ExpressionStatement",
												"src": "18661:36:0"
											},
											{
												"expression": {
													"id": 851,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 848,
														"name": "parent",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 805,
														"src": "18707:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 849,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "18716:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 850,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "18720:6:0",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "18716:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "18707:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 852,
												"nodeType": "ExpressionStatement",
												"src": "18707:19:0"
											},
											{
												"expression": {
													"id": 855,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 853,
														"name": "count",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 801,
														"src": "18736:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 854,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "18744:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "18736:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 856,
												"nodeType": "ExpressionStatement",
												"src": "18736:9:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 860,
															"name": "admins",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 798,
															"src": "18766:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 857,
															"name": "inter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 810,
															"src": "18755:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_InterfaceERC20_$795",
																"typeString": "contract InterfaceERC20"
															}
														},
														"id": 859,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "18761:4:0",
														"memberName": "mint",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 778,
														"src": "18755:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address) external"
														}
													},
													"id": 861,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18755:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 862,
												"nodeType": "ExpressionStatement",
												"src": "18755:18:0"
											}
										]
									},
									"id": 864,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 827,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 826,
												"mutability": "mutable",
												"name": "_ERC20address",
												"nameLocation": "18519:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "18511:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 825,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18511:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18510:23:0"
									},
									"returnParameters": {
										"id": 828,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "18534:0:0"
									},
									"scope": 1117,
									"src": "18499:281:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 875,
										"nodeType": "Block",
										"src": "18808:73:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 870,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 867,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "18826:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 868,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "18830:6:0",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "18826:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 869,
																"name": "admins",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 798,
																"src": "18840:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "18826:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "6e6f7420616e2061646d696e",
															"id": 871,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "18848:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5bda5c05acf463623cf6a3055122b4addea65e88452f82ecd21a6e144b0ee898",
																"typeString": "literal_string \"not an admin\""
															},
															"value": "not an admin"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5bda5c05acf463623cf6a3055122b4addea65e88452f82ecd21a6e144b0ee898",
																"typeString": "literal_string \"not an admin\""
															}
														],
														"id": 866,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "18818:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 872,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18818:45:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 873,
												"nodeType": "ExpressionStatement",
												"src": "18818:45:0"
											},
											{
												"id": 874,
												"nodeType": "PlaceholderStatement",
												"src": "18873:1:0"
											}
										]
									},
									"id": 876,
									"name": "onlyAdmins",
									"nameLocation": "18795:10:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 865,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "18805:2:0"
									},
									"src": "18786:95:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 894,
										"nodeType": "Block",
										"src": "18911:109:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 880,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "18929:5:0",
															"subExpression": {
																"id": 879,
																"name": "sync",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 803,
																"src": "18930:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "53796e63206c6f636b",
															"id": 881,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "18936:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_28154d7df0746c056677657a3fabff6d81e7502de98f08c2da6504e75b63e771",
																"typeString": "literal_string \"Sync lock\""
															},
															"value": "Sync lock"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_28154d7df0746c056677657a3fabff6d81e7502de98f08c2da6504e75b63e771",
																"typeString": "literal_string \"Sync lock\""
															}
														],
														"id": 878,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "18921:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 882,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18921:27:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 883,
												"nodeType": "ExpressionStatement",
												"src": "18921:27:0"
											},
											{
												"expression": {
													"id": 886,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 884,
														"name": "sync",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 803,
														"src": "18958:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 885,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "18965:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "18958:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 887,
												"nodeType": "ExpressionStatement",
												"src": "18958:11:0"
											},
											{
												"id": 888,
												"nodeType": "PlaceholderStatement",
												"src": "18979:1:0"
											},
											{
												"expression": {
													"id": 891,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 889,
														"name": "sync",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 803,
														"src": "18990:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 890,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "18997:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "18990:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 892,
												"nodeType": "ExpressionStatement",
												"src": "18990:12:0"
											},
											{
												"id": 893,
												"nodeType": "PlaceholderStatement",
												"src": "19012:1:0"
											}
										]
									},
									"id": 895,
									"name": "synchronized",
									"nameLocation": "18896:12:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 877,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "18908:2:0"
									},
									"src": "18887:133:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 906,
										"nodeType": "Block",
										"src": "19047:66:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"baseExpression": {
																	"id": 898,
																	"name": "staker",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 815,
																	"src": "19065:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$824_storage_$",
																		"typeString": "mapping(address => struct Tokenplay.Staker storage ref)"
																	}
																},
																"id": 901,
																"indexExpression": {
																	"expression": {
																		"id": 899,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "19072:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 900,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "19076:6:0",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "19072:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "19065:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Staker_$824_storage",
																	"typeString": "struct Tokenplay.Staker storage ref"
																}
															},
															"id": 902,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "19084:10:0",
															"memberName": "activeUser",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 823,
															"src": "19065:29:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 897,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "19057:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 903,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19057:38:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 904,
												"nodeType": "ExpressionStatement",
												"src": "19057:38:0"
											},
											{
												"id": 905,
												"nodeType": "PlaceholderStatement",
												"src": "19105:1:0"
											}
										]
									},
									"id": 907,
									"name": "activeUser",
									"nameLocation": "19034:10:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 896,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "19044:2:0"
									},
									"src": "19025:88:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 944,
										"nodeType": "Block",
										"src": "19185:234:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 916,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "19203:30:0",
															"subExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 911,
																		"name": "staker",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 815,
																		"src": "19204:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$824_storage_$",
																			"typeString": "mapping(address => struct Tokenplay.Staker storage ref)"
																		}
																	},
																	"id": 914,
																	"indexExpression": {
																		"expression": {
																			"id": 912,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "19211:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 913,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "19215:6:0",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "19211:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "19204:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Staker_$824_storage",
																		"typeString": "struct Tokenplay.Staker storage ref"
																	}
																},
																"id": 915,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "19223:10:0",
																"memberName": "activeUser",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 823,
																"src": "19204:29:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "7573657220616c7265616479206578697374",
															"id": 917,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "19235:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d2a30e0d5845e97b1b92823282b1c8f66fb85bf930b451b83a45ce7bac4460aa",
																"typeString": "literal_string \"user already exist\""
															},
															"value": "user already exist"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d2a30e0d5845e97b1b92823282b1c8f66fb85bf930b451b83a45ce7bac4460aa",
																"typeString": "literal_string \"user already exist\""
															}
														],
														"id": 910,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "19195:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 918,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19195:61:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 919,
												"nodeType": "ExpressionStatement",
												"src": "19195:61:0"
											},
											{
												"expression": {
													"id": 934,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 920,
														"name": "random",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 807,
														"src": "19266:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"arguments": [
																	{
																		"arguments": [
																			{
																				"expression": {
																					"id": 926,
																					"name": "msg",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967281,
																					"src": "19320:3:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_message",
																						"typeString": "msg"
																					}
																				},
																				"id": 927,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "19324:6:0",
																				"memberName": "sender",
																				"nodeType": "MemberAccess",
																				"src": "19320:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"expression": {
																					"id": 928,
																					"name": "block",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967292,
																					"src": "19332:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_block",
																						"typeString": "block"
																					}
																				},
																				"id": 929,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "19338:9:0",
																				"memberName": "timestamp",
																				"nodeType": "MemberAccess",
																				"src": "19332:15:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"id": 930,
																				"name": "random",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 807,
																				"src": "19349:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"id": 924,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "19303:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 925,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "19307:12:0",
																			"memberName": "encodePacked",
																			"nodeType": "MemberAccess",
																			"src": "19303:16:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																				"typeString": "function () pure returns (bytes memory)"
																			}
																		},
																		"id": 931,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "19303:53:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 923,
																	"name": "keccak256",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967288,
																	"src": "19293:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																		"typeString": "function (bytes memory) pure returns (bytes32)"
																	}
																},
																"id": 932,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "19293:64:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"id": 922,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "19275:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint256_$",
																"typeString": "type(uint256)"
															},
															"typeName": {
																"id": 921,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "19275:4:0",
																"typeDescriptions": {}
															}
														},
														"id": 933,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "19275:92:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "19266:101:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 935,
												"nodeType": "ExpressionStatement",
												"src": "19266:101:0"
											},
											{
												"expression": {
													"id": 942,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 936,
																"name": "staker",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 815,
																"src": "19377:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$824_storage_$",
																	"typeString": "mapping(address => struct Tokenplay.Staker storage ref)"
																}
															},
															"id": 939,
															"indexExpression": {
																"expression": {
																	"id": 937,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "19384:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 938,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "19388:6:0",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "19384:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "19377:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Staker_$824_storage",
																"typeString": "struct Tokenplay.Staker storage ref"
															}
														},
														"id": 940,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "19396:7:0",
														"memberName": "tokenid",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 817,
														"src": "19377:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 941,
														"name": "random",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 807,
														"src": "19406:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "19377:35:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 943,
												"nodeType": "ExpressionStatement",
												"src": "19377:35:0"
											}
										]
									},
									"functionSelector": "17d70f7c",
									"id": 945,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tokenId",
									"nameLocation": "19168:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 908,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "19175:2:0"
									},
									"returnParameters": {
										"id": 909,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "19185:0:0"
									},
									"scope": 1117,
									"src": "19159:260:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1022,
										"nodeType": "Block",
										"src": "19482:564:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 954,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "19500:30:0",
															"subExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 949,
																		"name": "staker",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 815,
																		"src": "19501:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$824_storage_$",
																			"typeString": "mapping(address => struct Tokenplay.Staker storage ref)"
																		}
																	},
																	"id": 952,
																	"indexExpression": {
																		"expression": {
																			"id": 950,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "19508:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 951,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "19512:6:0",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "19508:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "19501:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Staker_$824_storage",
																		"typeString": "struct Tokenplay.Staker storage ref"
																	}
																},
																"id": 953,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "19520:10:0",
																"memberName": "activeUser",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 823,
																"src": "19501:29:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "7573657220616c7265616479206578697374",
															"id": 955,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "19532:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d2a30e0d5845e97b1b92823282b1c8f66fb85bf930b451b83a45ce7bac4460aa",
																"typeString": "literal_string \"user already exist\""
															},
															"value": "user already exist"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d2a30e0d5845e97b1b92823282b1c8f66fb85bf930b451b83a45ce7bac4460aa",
																"typeString": "literal_string \"user already exist\""
															}
														],
														"id": 948,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "19492:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 956,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19492:61:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 957,
												"nodeType": "ExpressionStatement",
												"src": "19492:61:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 965,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 959,
																		"name": "staker",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 815,
																		"src": "19571:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$824_storage_$",
																			"typeString": "mapping(address => struct Tokenplay.Staker storage ref)"
																		}
																	},
																	"id": 962,
																	"indexExpression": {
																		"expression": {
																			"id": 960,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "19578:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 961,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "19582:6:0",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "19578:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "19571:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Staker_$824_storage",
																		"typeString": "struct Tokenplay.Staker storage ref"
																	}
																},
																"id": 963,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "19590:7:0",
																"memberName": "tokenid",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 817,
																"src": "19571:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 964,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "19601:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "19571:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f7420612076616c696420546f6b656e4944",
															"id": 966,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "19604:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_61cd3a7ce172e8143be870a803fc424cc2dc95cf837e5e148fec23edfad807b7",
																"typeString": "literal_string \"Not a valid TokenID\""
															},
															"value": "Not a valid TokenID"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_61cd3a7ce172e8143be870a803fc424cc2dc95cf837e5e148fec23edfad807b7",
																"typeString": "literal_string \"Not a valid TokenID\""
															}
														],
														"id": 958,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "19563:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 967,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19563:63:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 968,
												"nodeType": "ExpressionStatement",
												"src": "19563:63:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 976,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "19657:33:0",
															"subExpression": {
																"components": [
																	{
																		"expression": {
																			"baseExpression": {
																				"id": 970,
																				"name": "staker",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 815,
																				"src": "19659:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$824_storage_$",
																					"typeString": "mapping(address => struct Tokenplay.Staker storage ref)"
																				}
																			},
																			"id": 973,
																			"indexExpression": {
																				"expression": {
																					"id": 971,
																					"name": "msg",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967281,
																					"src": "19666:3:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_message",
																						"typeString": "msg"
																					}
																				},
																				"id": 972,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "19670:6:0",
																				"memberName": "sender",
																				"nodeType": "MemberAccess",
																				"src": "19666:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "19659:18:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Staker_$824_storage",
																				"typeString": "struct Tokenplay.Staker storage ref"
																			}
																		},
																		"id": 974,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "19678:11:0",
																		"memberName": "setreferrer",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 821,
																		"src": "19659:30:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 975,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "19658:32:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "526566657272657220416c72656164792075736564204f6e6c79203120616c6c6f776564",
															"id": 977,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "19704:38:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2547072ea1669624254ad98a29f387fdce4aca4498930b07c148c345758a3f9d",
																"typeString": "literal_string \"Referrer Already used Only 1 allowed\""
															},
															"value": "Referrer Already used Only 1 allowed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2547072ea1669624254ad98a29f387fdce4aca4498930b07c148c345758a3f9d",
																"typeString": "literal_string \"Referrer Already used Only 1 allowed\""
															}
														],
														"id": 969,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "19636:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 978,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19636:116:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 979,
												"nodeType": "ExpressionStatement",
												"src": "19636:116:0"
											},
											{
												"expression": {
													"id": 986,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 980,
																"name": "staker",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 815,
																"src": "19762:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$824_storage_$",
																	"typeString": "mapping(address => struct Tokenplay.Staker storage ref)"
																}
															},
															"id": 983,
															"indexExpression": {
																"expression": {
																	"id": 981,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "19769:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 982,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "19773:6:0",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "19769:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "19762:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Staker_$824_storage",
																"typeString": "struct Tokenplay.Staker storage ref"
															}
														},
														"id": 984,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "19781:8:0",
														"memberName": "referrer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 819,
														"src": "19762:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 985,
														"name": "parent",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 805,
														"src": "19792:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "19762:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 987,
												"nodeType": "ExpressionStatement",
												"src": "19762:36:0"
											},
											{
												"expression": {
													"id": 989,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "++",
													"prefix": false,
													"src": "19808:7:0",
													"subExpression": {
														"id": 988,
														"name": "count",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 801,
														"src": "19808:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 990,
												"nodeType": "ExpressionStatement",
												"src": "19808:7:0"
											},
											{
												"assignments": [
													992
												],
												"declarations": [
													{
														"constant": false,
														"id": 992,
														"mutability": "mutable",
														"name": "validUser",
														"nameLocation": "19830:9:0",
														"nodeType": "VariableDeclaration",
														"scope": 1022,
														"src": "19825:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 991,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "19825:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 998,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 994,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "19858:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 995,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "19862:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "19858:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 996,
															"name": "count",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 801,
															"src": "19870:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 993,
														"name": "isValidTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1091,
														"src": "19842:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) returns (bool)"
														}
													},
													"id": 997,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19842:34:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "19825:51:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1000,
															"name": "validUser",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 992,
															"src": "19894:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f7420612076616c69642075736572",
															"id": 1001,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "19905:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7e2c3d148196343ecd06c5b2a71b5ba4e09bd917096447f8a1ece3694fde0be6",
																"typeString": "literal_string \"Not a valid user\""
															},
															"value": "Not a valid user"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7e2c3d148196343ecd06c5b2a71b5ba4e09bd917096447f8a1ece3694fde0be6",
																"typeString": "literal_string \"Not a valid user\""
															}
														],
														"id": 999,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "19886:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1002,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19886:38:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1003,
												"nodeType": "ExpressionStatement",
												"src": "19886:38:0"
											},
											{
												"expression": {
													"id": 1010,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 1004,
																"name": "staker",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 815,
																"src": "19934:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$824_storage_$",
																	"typeString": "mapping(address => struct Tokenplay.Staker storage ref)"
																}
															},
															"id": 1007,
															"indexExpression": {
																"expression": {
																	"id": 1005,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "19941:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1006,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "19945:6:0",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "19941:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "19934:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Staker_$824_storage",
																"typeString": "struct Tokenplay.Staker storage ref"
															}
														},
														"id": 1008,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "19953:10:0",
														"memberName": "activeUser",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 823,
														"src": "19934:29:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1009,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "19966:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "19934:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1011,
												"nodeType": "ExpressionStatement",
												"src": "19934:36:0"
											},
											{
												"expression": {
													"id": 1017,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 1012,
																"name": "staker",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 815,
																"src": "19980:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$824_storage_$",
																	"typeString": "mapping(address => struct Tokenplay.Staker storage ref)"
																}
															},
															"id": 1014,
															"indexExpression": {
																"id": 1013,
																"name": "parent",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 805,
																"src": "19987:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "19980:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Staker_$824_storage",
																"typeString": "struct Tokenplay.Staker storage ref"
															}
														},
														"id": 1015,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "19995:11:0",
														"memberName": "setreferrer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 821,
														"src": "19980:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1016,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "20009:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "19980:33:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1018,
												"nodeType": "ExpressionStatement",
												"src": "19980:33:0"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1019,
														"name": "changingParent",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1116,
														"src": "20023:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1020,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "20023:16:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1021,
												"nodeType": "ExpressionStatement",
												"src": "20023:16:0"
											}
										]
									},
									"functionSelector": "b688a363",
									"id": 1023,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "join",
									"nameLocation": "19468:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 946,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "19472:2:0"
									},
									"returnParameters": {
										"id": 947,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "19482:0:0"
									},
									"scope": 1117,
									"src": "19459:587:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1090,
										"nodeType": "Block",
										"src": "20150:397:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1038,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 1035,
																		"name": "user",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1025,
																		"src": "20186:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"id": 1033,
																		"name": "inter",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 810,
																		"src": "20168:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_InterfaceERC20_$795",
																			"typeString": "contract InterfaceERC20"
																		}
																	},
																	"id": 1034,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "20174:11:0",
																	"memberName": "findBalance",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 794,
																	"src": "20168:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) external returns (uint256)"
																	}
																},
																"id": 1036,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "20168:23:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"hexValue": "353030",
																"id": 1037,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "20195:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_500_by_1",
																	"typeString": "int_const 500"
																},
																"value": "500"
															},
															"src": "20168:30:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "696e73756666696369656e742062616c616e6365",
															"id": 1039,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "20200:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a6d1ff1db3d0b9b8c60e12ccab5ce7431be9a2cd0518ac362f1c5c1e0b1cefee",
																"typeString": "literal_string \"insufficient balance\""
															},
															"value": "insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a6d1ff1db3d0b9b8c60e12ccab5ce7431be9a2cd0518ac362f1c5c1e0b1cefee",
																"typeString": "literal_string \"insufficient balance\""
															}
														],
														"id": 1032,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "20160:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1040,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "20160:63:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1041,
												"nodeType": "ExpressionStatement",
												"src": "20160:63:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1044,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1042,
														"name": "number",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1027,
														"src": "20237:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"hexValue": "32",
														"id": 1043,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "20247:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_2_by_1",
															"typeString": "int_const 2"
														},
														"value": "2"
													},
													"src": "20237:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1086,
													"nodeType": "Block",
													"src": "20329:191:0",
													"statements": [
														{
															"assignments": [
																1058
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1058,
																	"mutability": "mutable",
																	"name": "parent1",
																	"nameLocation": "20351:7:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 1086,
																	"src": "20343:15:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"typeName": {
																		"id": 1057,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "20343:7:0",
																		"stateMutability": "nonpayable",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1063,
															"initialValue": {
																"expression": {
																	"baseExpression": {
																		"id": 1059,
																		"name": "staker",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 815,
																		"src": "20361:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$824_storage_$",
																			"typeString": "mapping(address => struct Tokenplay.Staker storage ref)"
																		}
																	},
																	"id": 1061,
																	"indexExpression": {
																		"id": 1060,
																		"name": "user",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1025,
																		"src": "20368:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "20361:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Staker_$824_storage",
																		"typeString": "struct Tokenplay.Staker storage ref"
																	}
																},
																"id": 1062,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "20374:8:0",
																"memberName": "referrer",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 819,
																"src": "20361:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "20343:39:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1067,
																		"name": "user",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1025,
																		"src": "20411:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"expression": {
																			"baseExpression": {
																				"id": 1068,
																				"name": "staker",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 815,
																				"src": "20417:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$824_storage_$",
																					"typeString": "mapping(address => struct Tokenplay.Staker storage ref)"
																				}
																			},
																			"id": 1070,
																			"indexExpression": {
																				"id": 1069,
																				"name": "user",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1025,
																				"src": "20424:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "20417:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Staker_$824_storage",
																				"typeString": "struct Tokenplay.Staker storage ref"
																			}
																		},
																		"id": 1071,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "20430:8:0",
																		"memberName": "referrer",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 819,
																		"src": "20417:21:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"hexValue": "333030",
																		"id": 1072,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "20440:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_300_by_1",
																			"typeString": "int_const 300"
																		},
																		"value": "300"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_rational_300_by_1",
																			"typeString": "int_const 300"
																		}
																	],
																	"expression": {
																		"id": 1064,
																		"name": "inter",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 810,
																		"src": "20396:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_InterfaceERC20_$795",
																			"typeString": "contract InterfaceERC20"
																		}
																	},
																	"id": 1066,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "20402:8:0",
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 787,
																	"src": "20396:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256) external"
																	}
																},
																"id": 1073,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "20396:48:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1074,
															"nodeType": "ExpressionStatement",
															"src": "20396:48:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1078,
																		"name": "user",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1025,
																		"src": "20473:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"expression": {
																			"baseExpression": {
																				"id": 1079,
																				"name": "staker",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 815,
																				"src": "20479:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$824_storage_$",
																					"typeString": "mapping(address => struct Tokenplay.Staker storage ref)"
																				}
																			},
																			"id": 1081,
																			"indexExpression": {
																				"id": 1080,
																				"name": "parent1",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1058,
																				"src": "20486:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "20479:15:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Staker_$824_storage",
																				"typeString": "struct Tokenplay.Staker storage ref"
																			}
																		},
																		"id": 1082,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "20495:8:0",
																		"memberName": "referrer",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 819,
																		"src": "20479:24:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"hexValue": "323030",
																		"id": 1083,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "20505:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_200_by_1",
																			"typeString": "int_const 200"
																		},
																		"value": "200"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_rational_200_by_1",
																			"typeString": "int_const 200"
																		}
																	],
																	"expression": {
																		"id": 1075,
																		"name": "inter",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 810,
																		"src": "20458:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_InterfaceERC20_$795",
																			"typeString": "contract InterfaceERC20"
																		}
																	},
																	"id": 1077,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "20464:8:0",
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 787,
																	"src": "20458:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256) external"
																	}
																},
																"id": 1084,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "20458:51:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1085,
															"nodeType": "ExpressionStatement",
															"src": "20458:51:0"
														}
													]
												},
												"id": 1087,
												"nodeType": "IfStatement",
												"src": "20233:287:0",
												"trueBody": {
													"id": 1056,
													"nodeType": "Block",
													"src": "20250:73:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1048,
																		"name": "user",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1025,
																		"src": "20279:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"expression": {
																			"baseExpression": {
																				"id": 1049,
																				"name": "staker",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 815,
																				"src": "20285:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$824_storage_$",
																					"typeString": "mapping(address => struct Tokenplay.Staker storage ref)"
																				}
																			},
																			"id": 1051,
																			"indexExpression": {
																				"id": 1050,
																				"name": "user",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1025,
																				"src": "20292:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "20285:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Staker_$824_storage",
																				"typeString": "struct Tokenplay.Staker storage ref"
																			}
																		},
																		"id": 1052,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "20298:8:0",
																		"memberName": "referrer",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 819,
																		"src": "20285:21:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"hexValue": "353030",
																		"id": 1053,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "20308:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_500_by_1",
																			"typeString": "int_const 500"
																		},
																		"value": "500"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_rational_500_by_1",
																			"typeString": "int_const 500"
																		}
																	],
																	"expression": {
																		"id": 1045,
																		"name": "inter",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 810,
																		"src": "20264:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_InterfaceERC20_$795",
																			"typeString": "contract InterfaceERC20"
																		}
																	},
																	"id": 1047,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "20270:8:0",
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 787,
																	"src": "20264:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256) external"
																	}
																},
																"id": 1054,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "20264:48:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1055,
															"nodeType": "ExpressionStatement",
															"src": "20264:48:0"
														}
													]
												}
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 1088,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "20536:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 1031,
												"id": 1089,
												"nodeType": "Return",
												"src": "20529:11:0"
											}
										]
									},
									"id": 1091,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isValidTransfer",
									"nameLocation": "20061:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1028,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1025,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "20094:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1091,
												"src": "20086:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1024,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "20086:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1027,
												"mutability": "mutable",
												"name": "number",
												"nameLocation": "20113:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1091,
												"src": "20108:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1026,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "20108:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20076:49:0"
									},
									"returnParameters": {
										"id": 1031,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1030,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1091,
												"src": "20144:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1029,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "20144:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20143:6:0"
									},
									"scope": 1117,
									"src": "20052:495:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1104,
										"nodeType": "Block",
										"src": "20615:51:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"baseExpression": {
															"id": 1098,
															"name": "staker",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 815,
															"src": "20632:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$824_storage_$",
																"typeString": "mapping(address => struct Tokenplay.Staker storage ref)"
															}
														},
														"id": 1101,
														"indexExpression": {
															"expression": {
																"id": 1099,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "20639:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1100,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "20643:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "20639:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "20632:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Staker_$824_storage",
															"typeString": "struct Tokenplay.Staker storage ref"
														}
													},
													"id": 1102,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "20651:8:0",
													"memberName": "referrer",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 819,
													"src": "20632:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1097,
												"id": 1103,
												"nodeType": "Return",
												"src": "20625:34:0"
											}
										]
									},
									"functionSelector": "255d45d8",
									"id": 1105,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1094,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1093,
												"name": "activeUser",
												"nameLocations": [
													"20586:10:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 907,
												"src": "20586:10:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "20586:10:0"
										}
									],
									"name": "getparent",
									"nameLocation": "20562:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1092,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "20571:2:0"
									},
									"returnParameters": {
										"id": 1097,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1096,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1105,
												"src": "20606:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1095,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "20606:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20605:9:0"
									},
									"scope": 1117,
									"src": "20553:113:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1115,
										"nodeType": "Block",
										"src": "20765:36:0",
										"statements": [
											{
												"expression": {
													"id": 1113,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1110,
														"name": "parent",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 805,
														"src": "20775:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1111,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "20784:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1112,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "20788:6:0",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "20784:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "20775:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1114,
												"nodeType": "ExpressionStatement",
												"src": "20775:19:0"
											}
										]
									},
									"id": 1116,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1108,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1107,
												"name": "activeUser",
												"nameLocations": [
													"20754:10:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 907,
												"src": "20754:10:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "20754:10:0"
										}
									],
									"name": "changingParent",
									"nameLocation": "20728:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1106,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "20742:2:0"
									},
									"returnParameters": {
										"id": 1109,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "20765:0:0"
									},
									"scope": 1117,
									"src": "20719:82:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1118,
							"src": "18147:2656:0",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "234:20570:0"
				},
				"id": 0
			}
		}
	}
}