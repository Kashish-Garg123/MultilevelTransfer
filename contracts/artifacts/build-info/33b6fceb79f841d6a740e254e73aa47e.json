{
	"id": "33b6fceb79f841d6a740e254e73aa47e",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.20",
	"solcLongVersion": "0.8.20+commit.a1b79de6",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/MultilevelTransfer.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\nimport \"./InterfaceERC20.sol\";\n\ncontract Tokenplay {\n    address public admins;\n    uint count = 0;\n    bool private sync;\n    address public parent;\n    uint public random;\n    InterfaceERC20 public inter;\n\n    mapping(address => Staker) public staker;\n    struct Staker {\n        uint tokenid;\n        address referrer;\n        bool setreferrer;\n        bool activeUser;\n    }\n\n    constructor(address _ERC20address) {\n        //  ERC20(\"CURRENCY\", \"MATIC\") {\n        inter = InterfaceERC20(_ERC20address);\n        admins = msg.sender;\n        staker[msg.sender].activeUser = true;\n        parent = msg.sender;\n        count = 1;\n        inter.mint(admins);\n    }\n\n    modifier onlyAdmins() {\n        require(msg.sender == admins, \"not an admin\");\n        _;\n    }\n\n    modifier synchronized() {\n        require(!sync, \"Sync lock\");\n        sync = true;\n        _;\n        sync = false;\n        _;\n    }\n    modifier activeUser() {\n        require(staker[msg.sender].activeUser);\n        _;\n    }\n\n    //functon to give random id to user\n    function tokenId() public {\n        require(!staker[msg.sender].activeUser, \"user already exist\");\n        random = uint(\n            keccak256(abi.encodePacked(msg.sender, block.timestamp, random))\n        );\n        staker[msg.sender].tokenid = random;\n    }\n\n    //function to set active user\n    function join() public {\n        require(!staker[msg.sender].activeUser, \"user already exist\");\n        require(staker[msg.sender].tokenid != 0, \"Not a valid TokenID\");\n        require(\n            !(staker[msg.sender].setreferrer),\n            \"Referrer Already used Only 1 allowed\"\n        );\n        staker[msg.sender].referrer = parent;\n        count++;\n        bool validUser = isValidTransfer(msg.sender, count);\n        require(validUser, \"Not a valid user\");\n        staker[msg.sender].activeUser = true;\n        staker[parent].setreferrer = true;\n        changingParent();\n    }\n\n    function isValidTransfer(\n        address user,\n        uint number\n    ) internal returns (bool) {\n        require(inter.findBalance(user) >= 500, \"insufficient balance\");\n        if (number <= 2) {\n            inter.transfer(user, staker[user].referrer, 500);\n        } else {\n            address parent1 = staker[user].referrer;\n            inter.transfer(user, staker[user].referrer, 300);\n            inter.transfer(user, staker[parent1].referrer, 200);\n        }\n        return true;\n    }\n\n    function getparent() public view activeUser returns (address) {\n        return staker[msg.sender].referrer;\n    }\n\n    //To make coming user parent after joining\n    function changingParent() internal activeUser {\n        parent = msg.sender;\n    }\n}\n"
			},
			"contracts/InterfaceERC20.sol": {
				"content": " // SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n interface InterfaceERC20{\n    function mint(address user) external;\n    function transfer(address owner,address referrer,uint tokens) external;\n    function findBalance(address tokenUser) external returns(uint);\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/InterfaceERC20.sol": {
				"InterfaceERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenUser",
									"type": "address"
								}
							],
							"name": "findBalance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "mint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "referrer",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokens",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"findBalance(address)": "cfba4fe0",
							"mint(address)": "6a627842",
							"transfer(address,address,uint256)": "beabacc8"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenUser\",\"type\":\"address\"}],\"name\":\"findBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"referrer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/InterfaceERC20.sol\":\"InterfaceERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/InterfaceERC20.sol\":{\"keccak256\":\"0x490b6c623d965df3544699ed991b0588d85cbecd19d8b7b1b1ecdf78d4ed31b6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1f4de2acb59211df2168ba041dd3810c16113e6a26a79bb992d40b37acc6e410\",\"dweb:/ipfs/QmWQo2Se5JATG9PYeR7d51pJRASHzNcBoo6W9dgyRtuKJj\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/MultilevelTransfer.sol": {
				"Tokenplay": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_ERC20address",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "admins",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getparent",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "inter",
							"outputs": [
								{
									"internalType": "contract InterfaceERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "join",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "parent",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "random",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "staker",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "tokenid",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "referrer",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "setreferrer",
									"type": "bool"
								},
								{
									"internalType": "bool",
									"name": "activeUser",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "tokenId",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/MultilevelTransfer.sol\":88:2744  contract Tokenplay {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/MultilevelTransfer.sol\":153:154  0 */\n  0x00\n    /* \"contracts/MultilevelTransfer.sol\":140:154  uint count = 0 */\n  0x01\n  sstore\n    /* \"contracts/MultilevelTransfer.sol\":440:721  constructor(address _ERC20address) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/MultilevelTransfer.sol\":526:531  inter */\n  0x04\n    /* \"contracts/MultilevelTransfer.sol\":526:563  inter = InterfaceERC20(_ERC20address) */\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n  dup4\n  dup2\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  swap3\n  dup4\n  and\n  or\n  dup4\n  sstore\n  0x00\n    /* \"contracts/MultilevelTransfer.sol\":573:592  admins = msg.sender */\n  dup1\n  sload\n  swap1\n  swap3\n  and\n    /* \"contracts/MultilevelTransfer.sol\":582:592  msg.sender */\n  caller\n    /* \"contracts/MultilevelTransfer.sol\":573:592  admins = msg.sender */\n  swap1\n  dup2\n  or\n  dup4\n  sstore\n    /* \"contracts/MultilevelTransfer.sol\":602:620  staker[msg.sender] */\n  dup1\n  dup4\n  mstore\n    /* \"contracts/MultilevelTransfer.sol\":602:608  staker */\n  0x05\n    /* \"contracts/MultilevelTransfer.sol\":602:620  staker[msg.sender] */\n  0x20\n  mstore\n  0x40\n  dup1\n  dup5\n  keccak256\n  0x01\n    /* \"contracts/MultilevelTransfer.sol\":602:631  staker[msg.sender].activeUser */\n  swap1\n  dup2\n  add\n    /* \"contracts/MultilevelTransfer.sol\":602:638  staker[msg.sender].activeUser = true */\n  dup1\n  sload\n  not(shl(0xa8, 0xff))\n  and\n  shl(0xa8, 0x01)\n  or\n  swap1\n  sstore\n    /* \"contracts/MultilevelTransfer.sol\":648:654  parent */\n  0x02\n    /* \"contracts/MultilevelTransfer.sol\":648:667  parent = msg.sender */\n  dup1\n  sload\n    /* \"contracts/MultilevelTransfer.sol\":526:563  inter = InterfaceERC20(_ERC20address) */\n  0x0100\n    /* \"contracts/MultilevelTransfer.sol\":648:667  parent = msg.sender */\n  swap1\n  swap5\n  mul\n  not(sub(shl(0xa8, 0x01), 0x0100))\n  swap1\n  swap5\n  and\n  swap4\n  swap1\n  swap4\n  or\n  swap1\n  swap3\n  sstore\n    /* \"contracts/MultilevelTransfer.sol\":677:686  count = 1 */\n  swap1\n  dup1\n  sstore\n    /* \"contracts/MultilevelTransfer.sol\":696:701  inter */\n  dup4\n  sload\n    /* \"contracts/MultilevelTransfer.sol\":707:713  admins */\n  swap3\n  sload\n    /* \"contracts/MultilevelTransfer.sol\":696:714  inter.mint(admins) */\n  swap1\n  mload\n  shl(0xe1, 0x35313c21)\n  dup2\n  mstore\n    /* \"contracts/MultilevelTransfer.sol\":707:713  admins */\n  swap1\n  dup3\n  and\n    /* \"contracts/MultilevelTransfer.sol\":696:714  inter.mint(admins) */\n  swap4\n  dup2\n  add\n    /* \"#utility.yul\":455:506   */\n  swap4\n  swap1\n  swap4\n  mstore\n    /* \"contracts/MultilevelTransfer.sol\":696:701  inter */\n  and\n  swap1\n    /* \"contracts/MultilevelTransfer.sol\":696:706  inter.mint */\n  0x6a627842\n  swap1\n    /* \"#utility.yul\":428:446   */\n  0x24\n  add\n    /* \"contracts/MultilevelTransfer.sol\":696:714  inter.mint(admins) */\n  0x00\n  mload(0x40)\n  dup1\n  dup4\n  sub\n  dup2\n  0x00\n  dup8\n  dup1\n  extcodesize\n  iszero\n  dup1\n  iszero\n  tag_8\n  jumpi\n  0x00\n  dup1\n  revert\ntag_8:\n  pop\n  gas\n  call\n  iszero\n  dup1\n  iszero\n  tag_10\n  jumpi\n  returndatasize\n  0x00\n  dup1\n  returndatacopy\n  revert(0x00, returndatasize)\ntag_10:\n  pop\n  pop\n  pop\n  pop\n    /* \"contracts/MultilevelTransfer.sol\":440:721  constructor(address _ERC20address) {... */\n  pop\n    /* \"contracts/MultilevelTransfer.sol\":88:2744  contract Tokenplay {... */\n  jump(tag_12)\n    /* \"#utility.yul\":14:304   */\ntag_3:\n    /* \"#utility.yul\":84:90   */\n  0x00\n    /* \"#utility.yul\":137:139   */\n  0x20\n    /* \"#utility.yul\":125:134   */\n  dup3\n    /* \"#utility.yul\":116:123   */\n  dup5\n    /* \"#utility.yul\":112:135   */\n  sub\n    /* \"#utility.yul\":108:140   */\n  slt\n    /* \"#utility.yul\":105:157   */\n  iszero\n  tag_14\n  jumpi\n    /* \"#utility.yul\":153:154   */\n  0x00\n    /* \"#utility.yul\":150:151   */\n  dup1\n    /* \"#utility.yul\":143:155   */\n  revert\n    /* \"#utility.yul\":105:157   */\ntag_14:\n    /* \"#utility.yul\":179:195   */\n  dup2\n  mload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":224:255   */\n  dup2\n  and\n    /* \"#utility.yul\":214:256   */\n  dup2\n  eq\n    /* \"#utility.yul\":204:274   */\n  tag_15\n  jumpi\n    /* \"#utility.yul\":270:271   */\n  0x00\n    /* \"#utility.yul\":267:268   */\n  dup1\n    /* \"#utility.yul\":260:272   */\n  revert\n    /* \"#utility.yul\":204:274   */\ntag_15:\n    /* \"#utility.yul\":293:298   */\n  swap4\n    /* \"#utility.yul\":14:304   */\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":309:512   */\ntag_12:\n    /* \"contracts/MultilevelTransfer.sol\":88:2744  contract Tokenplay {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/MultilevelTransfer.sol\":88:2744  contract Tokenplay {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x82e4eda4\n      gt\n      tag_11\n      jumpi\n      dup1\n      0x82e4eda4\n      eq\n      tag_7\n      jumpi\n      dup1\n      0xa5de3619\n      eq\n      tag_8\n      jumpi\n      dup1\n      0xb688a363\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xf13ad725\n      eq\n      tag_10\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_11:\n      dup1\n      0x17d70f7c\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x255d45d8\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x5ec01e4d\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x60f96a8f\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/MultilevelTransfer.sol\":1100:1360  function tokenId() public {... */\n    tag_3:\n      tag_12\n      tag_13\n      jump\t// in\n    tag_12:\n      stop\n        /* \"contracts/MultilevelTransfer.sol\":2494:2607  function getparent() public view activeUser returns (address) {... */\n    tag_4:\n      tag_14\n      tag_15\n      jump\t// in\n    tag_14:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":178:210   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":160:211   */\n      dup2\n      mstore\n        /* \"#utility.yul\":148:150   */\n      0x20\n        /* \"#utility.yul\":133:151   */\n      add\n        /* \"contracts/MultilevelTransfer.sol\":2494:2607  function getparent() public view activeUser returns (address) {... */\n    tag_16:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/MultilevelTransfer.sol\":210:228  uint public random */\n    tag_5:\n      tag_18\n      sload(0x03)\n      dup2\n      jump\n    tag_18:\n      mload(0x40)\n        /* \"#utility.yul\":368:393   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":356:358   */\n      0x20\n        /* \"#utility.yul\":341:359   */\n      add\n        /* \"contracts/MultilevelTransfer.sol\":210:228  uint public random */\n      tag_16\n        /* \"#utility.yul\":222:399   */\n      jump\n        /* \"contracts/MultilevelTransfer.sol\":183:204  address public parent */\n    tag_6:\n      sload(0x02)\n      tag_14\n      swap1\n      0x0100\n      swap1\n      div\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"contracts/MultilevelTransfer.sol\":268:308  mapping(address => Staker) public staker */\n    tag_7:\n      tag_25\n      tag_26\n      calldatasize\n      0x04\n      tag_27\n      jump\t// in\n    tag_26:\n      mstore(0x20, 0x05)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      dup1\n      sload\n      0x01\n      swap1\n      swap2\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      dup2\n      and\n      swap1\n      0xff\n      shl(0xa0, 0x01)\n      dup3\n      div\n      dup2\n      and\n      swap2\n      shl(0xa8, 0x01)\n      swap1\n      div\n      and\n      dup5\n      jump\n    tag_25:\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":914:939   */\n      swap5\n      dup6\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":975:1007   */\n      swap1\n      swap4\n      and\n        /* \"#utility.yul\":970:972   */\n      0x20\n        /* \"#utility.yul\":955:973   */\n      dup6\n      add\n        /* \"#utility.yul\":948:1008   */\n      mstore\n        /* \"#utility.yul\":1051:1065   */\n      swap1\n      iszero\n        /* \"#utility.yul\":1044:1066   */\n      iszero\n        /* \"#utility.yul\":1024:1042   */\n      swap2\n      dup4\n      add\n        /* \"#utility.yul\":1017:1067   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":1110:1124   */\n      iszero\n        /* \"#utility.yul\":1103:1125   */\n      iszero\n        /* \"#utility.yul\":1098:1100   */\n      0x60\n        /* \"#utility.yul\":1083:1101   */\n      dup3\n      add\n        /* \"#utility.yul\":1076:1126   */\n      mstore\n        /* \"#utility.yul\":901:904   */\n      0x80\n        /* \"#utility.yul\":886:905   */\n      add\n        /* \"contracts/MultilevelTransfer.sol\":268:308  mapping(address => Staker) public staker */\n      tag_16\n        /* \"#utility.yul\":695:1132   */\n      jump\n        /* \"contracts/MultilevelTransfer.sol\":113:134  address public admins */\n    tag_8:\n      sload(0x00)\n      tag_14\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"contracts/MultilevelTransfer.sol\":1400:1987  function join() public {... */\n    tag_9:\n      tag_12\n      tag_35\n      jump\t// in\n        /* \"contracts/MultilevelTransfer.sol\":234:261  InterfaceERC20 public inter */\n    tag_10:\n      sload(0x04)\n      tag_14\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"contracts/MultilevelTransfer.sol\":1100:1360  function tokenId() public {... */\n    tag_13:\n        /* \"contracts/MultilevelTransfer.sol\":1152:1162  msg.sender */\n      caller\n        /* \"contracts/MultilevelTransfer.sol\":1145:1163  staker[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/MultilevelTransfer.sol\":1145:1151  staker */\n      0x05\n        /* \"contracts/MultilevelTransfer.sol\":1145:1163  staker[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/MultilevelTransfer.sol\":1145:1174  staker[msg.sender].activeUser */\n      0x01\n      add\n      sload\n      shl(0xa8, 0x01)\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/MultilevelTransfer.sol\":1144:1174  !staker[msg.sender].activeUser */\n      iszero\n        /* \"contracts/MultilevelTransfer.sol\":1136:1197  require(!staker[msg.sender].activeUser, \"user already exist\") */\n      tag_41\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":1568:1570   */\n      0x20\n        /* \"contracts/MultilevelTransfer.sol\":1136:1197  require(!staker[msg.sender].activeUser, \"user already exist\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1550:1571   */\n      mstore\n        /* \"#utility.yul\":1607:1609   */\n      0x12\n        /* \"#utility.yul\":1587:1605   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":1580:1610   */\n      mstore\n      shl(0x72, 0x1d5cd95c88185b1c9958591e48195e1a5cdd)\n        /* \"#utility.yul\":1626:1644   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":1619:1667   */\n      mstore\n        /* \"#utility.yul\":1684:1702   */\n      0x64\n      add\n        /* \"contracts/MultilevelTransfer.sol\":1136:1197  require(!staker[msg.sender].activeUser, \"user already exist\") */\n    tag_42:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_41:\n        /* \"contracts/MultilevelTransfer.sol\":1290:1296  random */\n      sload(0x03)\n        /* \"contracts/MultilevelTransfer.sol\":1244:1297  abi.encodePacked(msg.sender, block.timestamp, random) */\n      mload(0x40)\n      not(0xffffffffffffffffffffffff)\n        /* \"contracts/MultilevelTransfer.sol\":1261:1271  msg.sender */\n      caller\n        /* \"#utility.yul\":1918:1920   */\n      0x60\n        /* \"#utility.yul\":1914:1929   */\n      shl\n        /* \"#utility.yul\":1910:1963   */\n      and\n        /* \"contracts/MultilevelTransfer.sol\":1244:1297  abi.encodePacked(msg.sender, block.timestamp, random) */\n      0x20\n      dup3\n      add\n        /* \"#utility.yul\":1898:1964   */\n      mstore\n        /* \"contracts/MultilevelTransfer.sol\":1273:1288  block.timestamp */\n      timestamp\n        /* \"#utility.yul\":1980:1992   */\n      0x34\n      dup3\n      add\n        /* \"#utility.yul\":1973:2001   */\n      mstore\n        /* \"#utility.yul\":2017:2029   */\n      0x54\n      dup2\n      add\n        /* \"#utility.yul\":2010:2038   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":2054:2066   */\n      0x74\n      add\n        /* \"contracts/MultilevelTransfer.sol\":1244:1297  abi.encodePacked(msg.sender, block.timestamp, random) */\n      0x40\n      dup1\n      mload\n      not(0x1f)\n      dup2\n      dup5\n      sub\n      add\n      dup2\n      mstore\n      swap2\n      dup2\n      mstore\n        /* \"contracts/MultilevelTransfer.sol\":1234:1298  keccak256(abi.encodePacked(msg.sender, block.timestamp, random)) */\n      dup2\n      mload\n        /* \"contracts/MultilevelTransfer.sol\":1244:1297  abi.encodePacked(msg.sender, block.timestamp, random) */\n      0x20\n        /* \"contracts/MultilevelTransfer.sol\":1234:1298  keccak256(abi.encodePacked(msg.sender, block.timestamp, random)) */\n      swap3\n      dup4\n      add\n      keccak256\n        /* \"contracts/MultilevelTransfer.sol\":1207:1213  random */\n      0x03\n        /* \"contracts/MultilevelTransfer.sol\":1207:1308  random = uint(... */\n      dup2\n      swap1\n      sstore\n        /* \"contracts/MultilevelTransfer.sol\":1325:1335  msg.sender */\n      caller\n        /* \"contracts/MultilevelTransfer.sol\":1216:1308  uint(... */\n      0x00\n        /* \"contracts/MultilevelTransfer.sol\":1318:1336  staker[msg.sender] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/MultilevelTransfer.sol\":1318:1324  staker */\n      0x05\n        /* \"contracts/MultilevelTransfer.sol\":1318:1336  staker[msg.sender] */\n      swap1\n      swap4\n      mstore\n      swap2\n      keccak256\n        /* \"contracts/MultilevelTransfer.sol\":1318:1353  staker[msg.sender].tokenid = random */\n      sstore\n        /* \"contracts/MultilevelTransfer.sol\":1100:1360  function tokenId() public {... */\n      jump\t// out\n        /* \"contracts/MultilevelTransfer.sol\":2494:2607  function getparent() public view activeUser returns (address) {... */\n    tag_15:\n        /* \"contracts/MultilevelTransfer.sol\":1013:1023  msg.sender */\n      caller\n        /* \"contracts/MultilevelTransfer.sol\":2547:2554  address */\n      0x00\n        /* \"contracts/MultilevelTransfer.sol\":1006:1024  staker[msg.sender] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/MultilevelTransfer.sol\":1006:1012  staker */\n      0x05\n        /* \"contracts/MultilevelTransfer.sol\":1006:1024  staker[msg.sender] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"contracts/MultilevelTransfer.sol\":1006:1035  staker[msg.sender].activeUser */\n      0x01\n      add\n      sload\n      shl(0xa8, 0x01)\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/MultilevelTransfer.sol\":998:1036  require(staker[msg.sender].activeUser) */\n      tag_47\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_47:\n      pop\n        /* \"contracts/MultilevelTransfer.sol\":2580:2590  msg.sender */\n      caller\n        /* \"contracts/MultilevelTransfer.sol\":2573:2591  staker[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/MultilevelTransfer.sol\":2573:2579  staker */\n      0x05\n        /* \"contracts/MultilevelTransfer.sol\":2573:2591  staker[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/MultilevelTransfer.sol\":2573:2600  staker[msg.sender].referrer */\n      0x01\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"contracts/MultilevelTransfer.sol\":2494:2607  function getparent() public view activeUser returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/MultilevelTransfer.sol\":1400:1987  function join() public {... */\n    tag_35:\n        /* \"contracts/MultilevelTransfer.sol\":1449:1459  msg.sender */\n      caller\n        /* \"contracts/MultilevelTransfer.sol\":1442:1460  staker[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/MultilevelTransfer.sol\":1442:1448  staker */\n      0x05\n        /* \"contracts/MultilevelTransfer.sol\":1442:1460  staker[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/MultilevelTransfer.sol\":1442:1471  staker[msg.sender].activeUser */\n      0x01\n      add\n      sload\n      shl(0xa8, 0x01)\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/MultilevelTransfer.sol\":1441:1471  !staker[msg.sender].activeUser */\n      iszero\n        /* \"contracts/MultilevelTransfer.sol\":1433:1494  require(!staker[msg.sender].activeUser, \"user already exist\") */\n      tag_50\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":1568:1570   */\n      0x20\n        /* \"contracts/MultilevelTransfer.sol\":1433:1494  require(!staker[msg.sender].activeUser, \"user already exist\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1550:1571   */\n      mstore\n        /* \"#utility.yul\":1607:1609   */\n      0x12\n        /* \"#utility.yul\":1587:1605   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":1580:1610   */\n      mstore\n      shl(0x72, 0x1d5cd95c88185b1c9958591e48195e1a5cdd)\n        /* \"#utility.yul\":1626:1644   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":1619:1667   */\n      mstore\n        /* \"#utility.yul\":1684:1702   */\n      0x64\n      add\n        /* \"contracts/MultilevelTransfer.sol\":1433:1494  require(!staker[msg.sender].activeUser, \"user already exist\") */\n      tag_42\n        /* \"#utility.yul\":1366:1708   */\n      jump\n        /* \"contracts/MultilevelTransfer.sol\":1433:1494  require(!staker[msg.sender].activeUser, \"user already exist\") */\n    tag_50:\n        /* \"contracts/MultilevelTransfer.sol\":1519:1529  msg.sender */\n      caller\n        /* \"contracts/MultilevelTransfer.sol\":1512:1530  staker[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/MultilevelTransfer.sol\":1512:1518  staker */\n      0x05\n        /* \"contracts/MultilevelTransfer.sol\":1512:1530  staker[msg.sender] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"contracts/MultilevelTransfer.sol\":1512:1538  staker[msg.sender].tokenid */\n      sload\n        /* \"contracts/MultilevelTransfer.sol\":1512:1543  staker[msg.sender].tokenid != 0 */\n      swap1\n      sub\n        /* \"contracts/MultilevelTransfer.sol\":1504:1567  require(staker[msg.sender].tokenid != 0, \"Not a valid TokenID\") */\n      tag_52\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":2279:2281   */\n      0x20\n        /* \"contracts/MultilevelTransfer.sol\":1504:1567  require(staker[msg.sender].tokenid != 0, \"Not a valid TokenID\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2261:2282   */\n      mstore\n        /* \"#utility.yul\":2318:2320   */\n      0x13\n        /* \"#utility.yul\":2298:2316   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":2291:2321   */\n      mstore\n      shl(0x6a, 0x139bdd0818481d985b1a5908151bdad95b9251)\n        /* \"#utility.yul\":2337:2355   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":2330:2379   */\n      mstore\n        /* \"#utility.yul\":2396:2414   */\n      0x64\n      add\n        /* \"contracts/MultilevelTransfer.sol\":1504:1567  require(staker[msg.sender].tokenid != 0, \"Not a valid TokenID\") */\n      tag_42\n        /* \"#utility.yul\":2077:2420   */\n      jump\n        /* \"contracts/MultilevelTransfer.sol\":1504:1567  require(staker[msg.sender].tokenid != 0, \"Not a valid TokenID\") */\n    tag_52:\n        /* \"contracts/MultilevelTransfer.sol\":1607:1617  msg.sender */\n      caller\n        /* \"contracts/MultilevelTransfer.sol\":1600:1618  staker[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/MultilevelTransfer.sol\":1600:1606  staker */\n      0x05\n        /* \"contracts/MultilevelTransfer.sol\":1600:1618  staker[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/MultilevelTransfer.sol\":1600:1630  staker[msg.sender].setreferrer */\n      0x01\n      add\n      sload\n      shl(0xa0, 0x01)\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/MultilevelTransfer.sol\":1598:1631  !(staker[msg.sender].setreferrer) */\n      iszero\n        /* \"contracts/MultilevelTransfer.sol\":1577:1693  require(... */\n      tag_55\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":2627:2629   */\n      0x20\n        /* \"contracts/MultilevelTransfer.sol\":1577:1693  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2609:2630   */\n      mstore\n        /* \"#utility.yul\":2666:2668   */\n      0x24\n        /* \"#utility.yul\":2646:2664   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":2639:2669   */\n      mstore\n        /* \"#utility.yul\":2705:2739   */\n      0x526566657272657220416c72656164792075736564204f6e6c79203120616c6c\n        /* \"#utility.yul\":2685:2703   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":2678:2740   */\n      mstore\n      shl(0xe2, 0x1bddd959)\n        /* \"#utility.yul\":2756:2774   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":2749:2783   */\n      mstore\n        /* \"#utility.yul\":2800:2819   */\n      0x84\n      add\n        /* \"contracts/MultilevelTransfer.sol\":1577:1693  require(... */\n      tag_42\n        /* \"#utility.yul\":2425:2825   */\n      jump\n        /* \"contracts/MultilevelTransfer.sol\":1577:1693  require(... */\n    tag_55:\n        /* \"contracts/MultilevelTransfer.sol\":1733:1739  parent */\n      sload(0x02)\n        /* \"contracts/MultilevelTransfer.sol\":1710:1720  msg.sender */\n      caller\n        /* \"contracts/MultilevelTransfer.sol\":1703:1721  staker[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/MultilevelTransfer.sol\":1703:1709  staker */\n      0x05\n        /* \"contracts/MultilevelTransfer.sol\":1703:1721  staker[msg.sender] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"contracts/MultilevelTransfer.sol\":1733:1739  parent */\n      0x01\n        /* \"contracts/MultilevelTransfer.sol\":1703:1730  staker[msg.sender].referrer */\n      swap1\n      dup2\n      add\n        /* \"contracts/MultilevelTransfer.sol\":1703:1739  staker[msg.sender].referrer = parent */\n      dup1\n      sload\n        /* \"contracts/MultilevelTransfer.sol\":1733:1739  parent */\n      0x0100\n      swap1\n      swap5\n      div\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n        /* \"contracts/MultilevelTransfer.sol\":1703:1739  staker[msg.sender].referrer = parent */\n      swap1\n      swap5\n      and\n      swap4\n      swap1\n      swap4\n      or\n      swap1\n      swap3\n      sstore\n        /* \"contracts/MultilevelTransfer.sol\":1749:1756  count++ */\n      dup2\n      sload\n      swap2\n        /* \"contracts/MultilevelTransfer.sol\":1733:1739  parent */\n      swap1\n        /* \"contracts/MultilevelTransfer.sol\":1749:1756  count++ */\n      tag_58\n      dup4\n      tag_59\n      jump\t// in\n    tag_58:\n      swap2\n      swap1\n      pop\n      sstore\n      pop\n        /* \"contracts/MultilevelTransfer.sol\":1766:1780  bool validUser */\n      0x00\n        /* \"contracts/MultilevelTransfer.sol\":1783:1817  isValidTransfer(msg.sender, count) */\n      tag_60\n        /* \"contracts/MultilevelTransfer.sol\":1799:1809  msg.sender */\n      caller\n        /* \"contracts/MultilevelTransfer.sol\":1811:1816  count */\n      sload(0x01)\n        /* \"contracts/MultilevelTransfer.sol\":1783:1798  isValidTransfer */\n      tag_61\n        /* \"contracts/MultilevelTransfer.sol\":1783:1817  isValidTransfer(msg.sender, count) */\n      jump\t// in\n    tag_60:\n        /* \"contracts/MultilevelTransfer.sol\":1766:1817  bool validUser = isValidTransfer(msg.sender, count) */\n      swap1\n      pop\n        /* \"contracts/MultilevelTransfer.sol\":1835:1844  validUser */\n      dup1\n        /* \"contracts/MultilevelTransfer.sol\":1827:1865  require(validUser, \"Not a valid user\") */\n      tag_62\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3269:3271   */\n      0x20\n        /* \"contracts/MultilevelTransfer.sol\":1827:1865  require(validUser, \"Not a valid user\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3251:3272   */\n      mstore\n        /* \"#utility.yul\":3308:3310   */\n      0x10\n        /* \"#utility.yul\":3288:3306   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3281:3311   */\n      mstore\n      shl(0x81, 0x2737ba1030903b30b634b2103ab9b2b9)\n        /* \"#utility.yul\":3327:3345   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3320:3366   */\n      mstore\n        /* \"#utility.yul\":3383:3401   */\n      0x64\n      add\n        /* \"contracts/MultilevelTransfer.sol\":1827:1865  require(validUser, \"Not a valid user\") */\n      tag_42\n        /* \"#utility.yul\":3067:3407   */\n      jump\n        /* \"contracts/MultilevelTransfer.sol\":1827:1865  require(validUser, \"Not a valid user\") */\n    tag_62:\n        /* \"contracts/MultilevelTransfer.sol\":1882:1892  msg.sender */\n      caller\n        /* \"contracts/MultilevelTransfer.sol\":1875:1893  staker[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/MultilevelTransfer.sol\":1875:1881  staker */\n      0x05\n        /* \"contracts/MultilevelTransfer.sol\":1875:1893  staker[msg.sender] */\n      0x20\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"contracts/MultilevelTransfer.sol\":1907:1911  true */\n      0x01\n        /* \"contracts/MultilevelTransfer.sol\":1875:1904  staker[msg.sender].activeUser */\n      swap1\n      dup2\n      add\n        /* \"contracts/MultilevelTransfer.sol\":1875:1911  staker[msg.sender].activeUser = true */\n      dup1\n      sload\n      not(shl(0xa8, 0xff))\n      and\n      shl(0xa8, 0x01)\n      or\n      swap1\n      sstore\n        /* \"contracts/MultilevelTransfer.sol\":1928:1934  parent */\n      sload(0x02)\n        /* \"contracts/MultilevelTransfer.sol\":1875:1911  staker[msg.sender].activeUser = true */\n      0x0100\n        /* \"contracts/MultilevelTransfer.sol\":1928:1934  parent */\n      swap1\n      div\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"contracts/MultilevelTransfer.sol\":1921:1935  staker[parent] */\n      dup4\n      mstore\n      swap2\n      keccak256\n        /* \"contracts/MultilevelTransfer.sol\":1921:1947  staker[parent].setreferrer */\n      add\n        /* \"contracts/MultilevelTransfer.sol\":1921:1954  staker[parent].setreferrer = true */\n      dup1\n      sload\n      not(shl(0xa0, 0xff))\n      and\n      shl(0xa0, 0x01)\n      or\n      swap1\n      sstore\n        /* \"contracts/MultilevelTransfer.sol\":1964:1980  changingParent() */\n      tag_65\n        /* \"contracts/MultilevelTransfer.sol\":1964:1978  changingParent */\n      tag_66\n        /* \"contracts/MultilevelTransfer.sol\":1964:1980  changingParent() */\n      jump\t// in\n    tag_65:\n        /* \"contracts/MultilevelTransfer.sol\":1423:1987  {... */\n      pop\n        /* \"contracts/MultilevelTransfer.sol\":1400:1987  function join() public {... */\n      jump\t// out\n        /* \"contracts/MultilevelTransfer.sol\":1993:2488  function isValidTransfer(... */\n    tag_61:\n        /* \"contracts/MultilevelTransfer.sol\":2109:2114  inter */\n      0x04\n      dup1\n      sload\n        /* \"contracts/MultilevelTransfer.sol\":2109:2132  inter.findBalance(user) */\n      mload(0x40)\n      shl(0xe5, 0x067dd27f)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":178:210   */\n      dup6\n      dup2\n      and\n        /* \"contracts/MultilevelTransfer.sol\":2109:2132  inter.findBalance(user) */\n      swap4\n      dup3\n      add\n        /* \"#utility.yul\":160:211   */\n      swap4\n      swap1\n      swap4\n      mstore\n        /* \"contracts/MultilevelTransfer.sol\":2085:2089  bool */\n      0x00\n      swap3\n        /* \"contracts/MultilevelTransfer.sol\":2136:2139  500 */\n      0x01f4\n      swap3\n        /* \"contracts/MultilevelTransfer.sol\":2109:2114  inter */\n      and\n      swap1\n        /* \"contracts/MultilevelTransfer.sol\":2109:2126  inter.findBalance */\n      0xcfba4fe0\n      swap1\n        /* \"#utility.yul\":133:151   */\n      0x24\n      add\n        /* \"contracts/MultilevelTransfer.sol\":2109:2132  inter.findBalance(user) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_70\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_70:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_71\n      swap2\n      swap1\n      tag_72\n      jump\t// in\n    tag_71:\n        /* \"contracts/MultilevelTransfer.sol\":2109:2139  inter.findBalance(user) >= 500 */\n      lt\n      iszero\n        /* \"contracts/MultilevelTransfer.sol\":2101:2164  require(inter.findBalance(user) >= 500, \"insufficient balance\") */\n      tag_73\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3803:3805   */\n      0x20\n        /* \"contracts/MultilevelTransfer.sol\":2101:2164  require(inter.findBalance(user) >= 500, \"insufficient balance\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3785:3806   */\n      mstore\n        /* \"#utility.yul\":3842:3844   */\n      0x14\n        /* \"#utility.yul\":3822:3840   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3815:3845   */\n      mstore\n      shl(0x60, 0x696e73756666696369656e742062616c616e6365)\n        /* \"#utility.yul\":3861:3879   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3854:3904   */\n      mstore\n        /* \"#utility.yul\":3921:3939   */\n      0x64\n      add\n        /* \"contracts/MultilevelTransfer.sol\":2101:2164  require(inter.findBalance(user) >= 500, \"insufficient balance\") */\n      tag_42\n        /* \"#utility.yul\":3601:3945   */\n      jump\n        /* \"contracts/MultilevelTransfer.sol\":2101:2164  require(inter.findBalance(user) >= 500, \"insufficient balance\") */\n    tag_73:\n        /* \"contracts/MultilevelTransfer.sol\":2188:2189  2 */\n      0x02\n        /* \"contracts/MultilevelTransfer.sol\":2178:2184  number */\n      dup3\n        /* \"contracts/MultilevelTransfer.sol\":2178:2189  number <= 2 */\n      gt\n        /* \"contracts/MultilevelTransfer.sol\":2174:2461  if (number <= 2) {... */\n      tag_76\n      jumpi\n        /* \"contracts/MultilevelTransfer.sol\":2205:2210  inter */\n      0x04\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/MultilevelTransfer.sol\":2226:2238  staker[user] */\n      dup6\n      dup2\n      and\n        /* \"contracts/MultilevelTransfer.sol\":2205:2210  inter */\n      0x00\n        /* \"contracts/MultilevelTransfer.sol\":2226:2238  staker[user] */\n      dup2\n      dup2\n      mstore\n        /* \"contracts/MultilevelTransfer.sol\":2226:2232  staker */\n      0x05\n        /* \"contracts/MultilevelTransfer.sol\":2226:2238  staker[user] */\n      0x20\n      mstore\n      0x40\n      swap1\n      dup2\n      swap1\n      keccak256\n        /* \"contracts/MultilevelTransfer.sol\":2205:2210  inter */\n      0x01\n        /* \"contracts/MultilevelTransfer.sol\":2226:2247  staker[user].referrer */\n      add\n      sload\n        /* \"contracts/MultilevelTransfer.sol\":2205:2253  inter.transfer(user, staker[user].referrer, 500) */\n      swap1\n      mload\n      shl(0xe3, 0x17d57599)\n      dup2\n      mstore\n      swap5\n      dup6\n      add\n        /* \"#utility.yul\":4200:4234   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"contracts/MultilevelTransfer.sol\":2226:2247  staker[user].referrer */\n      dup2\n      and\n        /* \"#utility.yul\":4250:4268   */\n      0x24\n      dup5\n      add\n        /* \"#utility.yul\":4243:4286   */\n      mstore\n        /* \"contracts/MultilevelTransfer.sol\":2249:2252  500 */\n      0x01f4\n        /* \"#utility.yul\":4302:4320   */\n      0x44\n      dup5\n      add\n        /* \"#utility.yul\":4295:4329   */\n      mstore\n        /* \"contracts/MultilevelTransfer.sol\":2205:2210  inter */\n      and\n      swap1\n        /* \"contracts/MultilevelTransfer.sol\":2205:2219  inter.transfer */\n      0xbeabacc8\n      swap1\n        /* \"#utility.yul\":4135:4153   */\n      0x64\n      add\n        /* \"contracts/MultilevelTransfer.sol\":2205:2253  inter.transfer(user, staker[user].referrer, 500) */\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_79\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_79:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_81\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_81:\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/MultilevelTransfer.sol\":2174:2461  if (number <= 2) {... */\n      jump(tag_82)\n    tag_76:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/MultilevelTransfer.sol\":2302:2314  staker[user] */\n      dup4\n      dup2\n      and\n        /* \"contracts/MultilevelTransfer.sol\":2284:2299  address parent1 */\n      0x00\n        /* \"contracts/MultilevelTransfer.sol\":2302:2314  staker[user] */\n      dup2\n      dup2\n      mstore\n        /* \"contracts/MultilevelTransfer.sol\":2302:2308  staker */\n      0x05\n        /* \"contracts/MultilevelTransfer.sol\":2302:2314  staker[user] */\n      0x20\n      mstore\n      0x40\n      swap1\n      dup2\n      swap1\n      keccak256\n        /* \"contracts/MultilevelTransfer.sol\":2302:2323  staker[user].referrer */\n      0x01\n      add\n      sload\n        /* \"contracts/MultilevelTransfer.sol\":2337:2342  inter */\n      0x04\n      dup1\n      sload\n        /* \"contracts/MultilevelTransfer.sol\":2337:2385  inter.transfer(user, staker[user].referrer, 300) */\n      swap3\n      mload\n      shl(0xe3, 0x17d57599)\n      dup2\n      mstore\n      swap1\n      dup2\n      add\n        /* \"#utility.yul\":4200:4234   */\n      swap4\n      swap1\n      swap4\n      mstore\n        /* \"contracts/MultilevelTransfer.sol\":2302:2323  staker[user].referrer */\n      dup4\n      and\n        /* \"#utility.yul\":4250:4268   */\n      0x24\n      dup4\n      add\n        /* \"#utility.yul\":4243:4286   */\n      dup2\n      swap1\n      mstore\n        /* \"contracts/MultilevelTransfer.sol\":2381:2384  300 */\n      0x012c\n        /* \"#utility.yul\":4302:4320   */\n      0x44\n      dup5\n      add\n        /* \"#utility.yul\":4295:4329   */\n      mstore\n        /* \"contracts/MultilevelTransfer.sol\":2302:2323  staker[user].referrer */\n      swap3\n        /* \"contracts/MultilevelTransfer.sol\":2337:2342  inter */\n      and\n      swap1\n        /* \"contracts/MultilevelTransfer.sol\":2337:2351  inter.transfer */\n      0xbeabacc8\n      swap1\n        /* \"#utility.yul\":4135:4153   */\n      0x64\n      add\n        /* \"contracts/MultilevelTransfer.sol\":2337:2385  inter.transfer(user, staker[user].referrer, 300) */\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_85\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_85:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_87\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_87:\n      pop\n      pop\n        /* \"contracts/MultilevelTransfer.sol\":2399:2404  inter */\n      0x04\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/MultilevelTransfer.sol\":2420:2435  staker[parent1] */\n      dup6\n      dup2\n      and\n        /* \"contracts/MultilevelTransfer.sol\":2399:2404  inter */\n      0x00\n        /* \"contracts/MultilevelTransfer.sol\":2420:2435  staker[parent1] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/MultilevelTransfer.sol\":2420:2426  staker */\n      0x05\n        /* \"contracts/MultilevelTransfer.sol\":2420:2435  staker[parent1] */\n      0x20\n      mstore\n      0x40\n      swap1\n      dup2\n      swap1\n      keccak256\n        /* \"contracts/MultilevelTransfer.sol\":2399:2404  inter */\n      0x01\n        /* \"contracts/MultilevelTransfer.sol\":2420:2444  staker[parent1].referrer */\n      add\n      sload\n        /* \"contracts/MultilevelTransfer.sol\":2399:2450  inter.transfer(user, staker[parent1].referrer, 200) */\n      swap1\n      mload\n      shl(0xe3, 0x17d57599)\n      dup2\n      mstore\n        /* \"#utility.yul\":4218:4233   */\n      dup11\n      dup4\n      and\n        /* \"contracts/MultilevelTransfer.sol\":2399:2450  inter.transfer(user, staker[parent1].referrer, 200) */\n      swap5\n      dup2\n      add\n        /* \"#utility.yul\":4200:4234   */\n      swap5\n      swap1\n      swap5\n      mstore\n        /* \"contracts/MultilevelTransfer.sol\":2420:2444  staker[parent1].referrer */\n      dup2\n      and\n        /* \"#utility.yul\":4250:4268   */\n      0x24\n      dup5\n      add\n        /* \"#utility.yul\":4243:4286   */\n      mstore\n        /* \"contracts/MultilevelTransfer.sol\":2446:2449  200 */\n      0xc8\n        /* \"#utility.yul\":4302:4320   */\n      0x44\n      dup5\n      add\n        /* \"#utility.yul\":4295:4329   */\n      mstore\n        /* \"contracts/MultilevelTransfer.sol\":2399:2404  inter */\n      and\n      swap3\n      pop\n        /* \"contracts/MultilevelTransfer.sol\":2399:2413  inter.transfer */\n      0xbeabacc8\n      swap2\n      pop\n        /* \"#utility.yul\":4135:4153   */\n      0x64\n      add\n        /* \"contracts/MultilevelTransfer.sol\":2399:2450  inter.transfer(user, staker[parent1].referrer, 200) */\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_90\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_90:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_92\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_92:\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/MultilevelTransfer.sol\":2270:2461  {... */\n      pop\n        /* \"contracts/MultilevelTransfer.sol\":2174:2461  if (number <= 2) {... */\n    tag_82:\n      pop\n        /* \"contracts/MultilevelTransfer.sol\":2477:2481  true */\n      0x01\n        /* \"contracts/MultilevelTransfer.sol\":1993:2488  function isValidTransfer(... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/MultilevelTransfer.sol\":2660:2742  function changingParent() internal activeUser {... */\n    tag_66:\n        /* \"contracts/MultilevelTransfer.sol\":1013:1023  msg.sender */\n      caller\n        /* \"contracts/MultilevelTransfer.sol\":1006:1024  staker[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/MultilevelTransfer.sol\":1006:1012  staker */\n      0x05\n        /* \"contracts/MultilevelTransfer.sol\":1006:1024  staker[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/MultilevelTransfer.sol\":1006:1035  staker[msg.sender].activeUser */\n      0x01\n      add\n      sload\n      shl(0xa8, 0x01)\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/MultilevelTransfer.sol\":998:1036  require(staker[msg.sender].activeUser) */\n      tag_94\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_94:\n        /* \"contracts/MultilevelTransfer.sol\":2716:2722  parent */\n      0x02\n        /* \"contracts/MultilevelTransfer.sol\":2716:2735  parent = msg.sender */\n      dup1\n      sload\n      not(sub(shl(0xa8, 0x01), 0x0100))\n      and\n        /* \"contracts/MultilevelTransfer.sol\":2725:2735  msg.sender */\n      caller\n        /* \"contracts/MultilevelTransfer.sol\":2716:2735  parent = msg.sender */\n      0x0100\n      mul\n      or\n      swap1\n      sstore\n        /* \"contracts/MultilevelTransfer.sol\":2660:2742  function changingParent() internal activeUser {... */\n      jump\t// out\n        /* \"#utility.yul\":404:690   */\n    tag_27:\n        /* \"#utility.yul\":463:469   */\n      0x00\n        /* \"#utility.yul\":516:518   */\n      0x20\n        /* \"#utility.yul\":504:513   */\n      dup3\n        /* \"#utility.yul\":495:502   */\n      dup5\n        /* \"#utility.yul\":491:514   */\n      sub\n        /* \"#utility.yul\":487:519   */\n      slt\n        /* \"#utility.yul\":484:536   */\n      iszero\n      tag_100\n      jumpi\n        /* \"#utility.yul\":532:533   */\n      0x00\n        /* \"#utility.yul\":529:530   */\n      dup1\n        /* \"#utility.yul\":522:534   */\n      revert\n        /* \"#utility.yul\":484:536   */\n    tag_100:\n        /* \"#utility.yul\":558:581   */\n      dup2\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":610:641   */\n      dup2\n      and\n        /* \"#utility.yul\":600:642   */\n      dup2\n      eq\n        /* \"#utility.yul\":590:660   */\n      tag_101\n      jumpi\n        /* \"#utility.yul\":656:657   */\n      0x00\n        /* \"#utility.yul\":653:654   */\n      dup1\n        /* \"#utility.yul\":646:658   */\n      revert\n        /* \"#utility.yul\":590:660   */\n    tag_101:\n        /* \"#utility.yul\":679:684   */\n      swap4\n        /* \"#utility.yul\":404:690   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2830:3062   */\n    tag_59:\n        /* \"#utility.yul\":2869:2872   */\n      0x00\n        /* \"#utility.yul\":2890:2907   */\n      0x01\n      dup3\n      add\n        /* \"#utility.yul\":2887:3027   */\n      tag_109\n      jumpi\n        /* \"#utility.yul\":2949:2959   */\n      0x4e487b71\n        /* \"#utility.yul\":2944:2947   */\n      0xe0\n        /* \"#utility.yul\":2940:2960   */\n      shl\n        /* \"#utility.yul\":2937:2938   */\n      0x00\n        /* \"#utility.yul\":2930:2961   */\n      mstore\n        /* \"#utility.yul\":2984:2988   */\n      0x11\n        /* \"#utility.yul\":2981:2982   */\n      0x04\n        /* \"#utility.yul\":2974:2989   */\n      mstore\n        /* \"#utility.yul\":3012:3016   */\n      0x24\n        /* \"#utility.yul\":3009:3010   */\n      0x00\n        /* \"#utility.yul\":3002:3017   */\n      revert\n        /* \"#utility.yul\":2887:3027   */\n    tag_109:\n      pop\n        /* \"#utility.yul\":3054:3055   */\n      0x01\n        /* \"#utility.yul\":3043:3056   */\n      add\n      swap1\n        /* \"#utility.yul\":2830:3062   */\n      jump\t// out\n        /* \"#utility.yul\":3412:3596   */\n    tag_72:\n        /* \"#utility.yul\":3482:3488   */\n      0x00\n        /* \"#utility.yul\":3535:3537   */\n      0x20\n        /* \"#utility.yul\":3523:3532   */\n      dup3\n        /* \"#utility.yul\":3514:3521   */\n      dup5\n        /* \"#utility.yul\":3510:3533   */\n      sub\n        /* \"#utility.yul\":3506:3538   */\n      slt\n        /* \"#utility.yul\":3503:3555   */\n      iszero\n      tag_112\n      jumpi\n        /* \"#utility.yul\":3551:3552   */\n      0x00\n        /* \"#utility.yul\":3548:3549   */\n      dup1\n        /* \"#utility.yul\":3541:3553   */\n      revert\n        /* \"#utility.yul\":3503:3555   */\n    tag_112:\n      pop\n        /* \"#utility.yul\":3574:3590   */\n      mload\n      swap2\n        /* \"#utility.yul\":3412:3596   */\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220ef5bbeb29f226be6244d83e439cbf0c06b11ba675fb9d03266a5adc5042d7dd364736f6c63430008140033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_94": {
									"entryPoint": null,
									"id": 94,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 248,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:514:2",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:2",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "95:209:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "141:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "150:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "153:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "143:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "143:12:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "143:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "116:7:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "125:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "112:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "112:23:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "137:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "108:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "108:32:2"
															},
															"nodeType": "YulIf",
															"src": "105:52:2"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "166:29:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "185:9:2"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "179:5:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "179:16:2"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "170:5:2",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "258:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "267:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "270:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "260:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "260:12:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "260:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "217:5:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "228:5:2"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "243:3:2",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "248:1:2",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "239:3:2"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "239:11:2"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "252:1:2",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "235:3:2"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "235:19:2"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "224:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "224:31:2"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "214:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "214:42:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "207:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "207:50:2"
															},
															"nodeType": "YulIf",
															"src": "204:70:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "283:15:2",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "293:5:2"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "283:6:2"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "61:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "72:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "84:6:2",
														"type": ""
													}
												],
												"src": "14:290:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "410:102:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "420:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "432:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "443:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "428:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "428:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "420:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "462:9:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "477:6:2"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "493:3:2",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "498:1:2",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "489:3:2"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "489:11:2"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "502:1:2",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "485:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "485:19:2"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "473:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "473:32:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "455:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "455:51:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "455:51:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "379:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "390:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "401:4:2",
														"type": ""
													}
												],
												"src": "309:203:2"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n}",
									"id": 2,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040525f600155348015610013575f80fd5b506040516108f93803806108f9833981016040819052610032916100f8565b600480546001600160a01b038381166001600160a01b03199283161783555f8054909216339081178355808352600560205260408084206001908101805460ff60a81b1916600160a81b17905560028054610100909402610100600160a81b0319909416939093179092559080558354925490516335313c2160e11b8152908216938101939093521690636a627842906024015f604051808303815f87803b1580156100dc575f80fd5b505af11580156100ee573d5f803e3d5ffd5b5050505050610125565b5f60208284031215610108575f80fd5b81516001600160a01b038116811461011e575f80fd5b9392505050565b6107c7806101325f395ff3fe608060405234801561000f575f80fd5b5060043610610085575f3560e01c806382e4eda41161005857806382e4eda4146100e7578063a5de36191461015c578063b688a3631461016e578063f13ad72514610176575f80fd5b806317d70f7c14610089578063255d45d8146100935780635ec01e4d146100b857806360f96a8f146100cf575b5f80fd5b610091610189565b005b61009b610247565b6040516001600160a01b0390911681526020015b60405180910390f35b6100c160035481565b6040519081526020016100af565b60025461009b9061010090046001600160a01b031681565b61012c6100f5366004610729565b60056020525f9081526040902080546001909101546001600160a01b0381169060ff600160a01b8204811691600160a81b90041684565b604080519485526001600160a01b03909316602085015290151591830191909152151560608201526080016100af565b5f5461009b906001600160a01b031681565b61009161028a565b60045461009b906001600160a01b031681565b335f90815260056020526040902060010154600160a81b900460ff16156101ec5760405162461bcd60e51b81526020600482015260126024820152711d5cd95c88185b1c9958591e48195e1a5cdd60721b60448201526064015b60405180910390fd5b6003546040516bffffffffffffffffffffffff193360601b166020820152426034820152605481019190915260740160408051601f1981840301815291815281516020928301206003819055335f9081526005909352912055565b335f90815260056020526040812060010154600160a81b900460ff1661026b575f80fd5b50335f908152600560205260409020600101546001600160a01b031690565b335f90815260056020526040902060010154600160a81b900460ff16156102e85760405162461bcd60e51b81526020600482015260126024820152711d5cd95c88185b1c9958591e48195e1a5cdd60721b60448201526064016101e3565b335f90815260056020526040812054900361033b5760405162461bcd60e51b8152602060048201526013602482015272139bdd0818481d985b1a5908151bdad95b9251606a1b60448201526064016101e3565b335f90815260056020526040902060010154600160a01b900460ff16156103b05760405162461bcd60e51b8152602060048201526024808201527f526566657272657220416c72656164792075736564204f6e6c79203120616c6c6044820152631bddd95960e21b60648201526084016101e3565b600254335f908152600560205260408120600190810180546101009094046001600160a01b03166001600160a01b031990941693909317909255815491906103f783610756565b91905055505f610409336001546104a2565b90508061044b5760405162461bcd60e51b815260206004820152601060248201526f2737ba1030903b30b634b2103ab9b2b960811b60448201526064016101e3565b335f908152600560205260408082206001908101805460ff60a81b1916600160a81b17905560025461010090046001600160a01b03168352912001805460ff60a01b1916600160a01b17905561049f6106ec565b50565b6004805460405163067dd27f60e51b81526001600160a01b03858116938201939093525f926101f492169063cfba4fe0906024016020604051808303815f875af11580156104f2573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610516919061077a565b101561055b5760405162461bcd60e51b8152602060048201526014602482015273696e73756666696369656e742062616c616e636560601b60448201526064016101e3565b600282116105e457600480546001600160a01b038581165f81815260056020526040908190206001015490516317d5759960e31b815294850191909152811660248401526101f46044840152169063beabacc8906064015f604051808303815f87803b1580156105c9575f80fd5b505af11580156105db573d5f803e3d5ffd5b505050506106e3565b6001600160a01b038381165f8181526005602052604090819020600101546004805492516317d5759960e31b81529081019390935283166024830181905261012c604484015292169063beabacc8906064015f604051808303815f87803b15801561064d575f80fd5b505af115801561065f573d5f803e3d5ffd5b5050600480546001600160a01b038581165f90815260056020526040908190206001015490516317d5759960e31b81528a8316948101949094528116602484015260c8604484015216925063beabacc891506064015f604051808303815f87803b1580156106cb575f80fd5b505af11580156106dd573d5f803e3d5ffd5b50505050505b50600192915050565b335f90815260056020526040902060010154600160a81b900460ff16610710575f80fd5b60028054610100600160a81b0319163361010002179055565b5f60208284031215610739575f80fd5b81356001600160a01b038116811461074f575f80fd5b9392505050565b5f6001820161077357634e487b7160e01b5f52601160045260245ffd5b5060010190565b5f6020828403121561078a575f80fd5b505191905056fea2646970667358221220ef5bbeb29f226be6244d83e439cbf0c06b11ba675fb9d03266a5adc5042d7dd364736f6c63430008140033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH1 0x1 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x13 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x8F9 CODESIZE SUB DUP1 PUSH2 0x8F9 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x32 SWAP2 PUSH2 0xF8 JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP3 DUP4 AND OR DUP4 SSTORE PUSH0 DUP1 SLOAD SWAP1 SWAP3 AND CALLER SWAP1 DUP2 OR DUP4 SSTORE DUP1 DUP4 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 PUSH1 0x1 SWAP1 DUP2 ADD DUP1 SLOAD PUSH1 0xFF PUSH1 0xA8 SHL NOT AND PUSH1 0x1 PUSH1 0xA8 SHL OR SWAP1 SSTORE PUSH1 0x2 DUP1 SLOAD PUSH2 0x100 SWAP1 SWAP5 MUL PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT SWAP1 SWAP5 AND SWAP4 SWAP1 SWAP4 OR SWAP1 SWAP3 SSTORE SWAP1 DUP1 SSTORE DUP4 SLOAD SWAP3 SLOAD SWAP1 MLOAD PUSH4 0x35313C21 PUSH1 0xE1 SHL DUP2 MSTORE SWAP1 DUP3 AND SWAP4 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE AND SWAP1 PUSH4 0x6A627842 SWAP1 PUSH1 0x24 ADD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xDC JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xEE JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP POP PUSH2 0x125 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x108 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x11E JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x7C7 DUP1 PUSH2 0x132 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x85 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x82E4EDA4 GT PUSH2 0x58 JUMPI DUP1 PUSH4 0x82E4EDA4 EQ PUSH2 0xE7 JUMPI DUP1 PUSH4 0xA5DE3619 EQ PUSH2 0x15C JUMPI DUP1 PUSH4 0xB688A363 EQ PUSH2 0x16E JUMPI DUP1 PUSH4 0xF13AD725 EQ PUSH2 0x176 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x17D70F7C EQ PUSH2 0x89 JUMPI DUP1 PUSH4 0x255D45D8 EQ PUSH2 0x93 JUMPI DUP1 PUSH4 0x5EC01E4D EQ PUSH2 0xB8 JUMPI DUP1 PUSH4 0x60F96A8F EQ PUSH2 0xCF JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x91 PUSH2 0x189 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x9B PUSH2 0x247 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC1 PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xAF JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x9B SWAP1 PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x12C PUSH2 0xF5 CALLDATASIZE PUSH1 0x4 PUSH2 0x729 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 PUSH1 0xFF PUSH1 0x1 PUSH1 0xA0 SHL DUP3 DIV DUP2 AND SWAP2 PUSH1 0x1 PUSH1 0xA8 SHL SWAP1 DIV AND DUP5 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP5 DUP6 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND PUSH1 0x20 DUP6 ADD MSTORE SWAP1 ISZERO ISZERO SWAP2 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ISZERO ISZERO PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD PUSH2 0xAF JUMP JUMPDEST PUSH0 SLOAD PUSH2 0x9B SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x91 PUSH2 0x28A JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH2 0x9B SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH1 0x1 PUSH1 0xA8 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x1EC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x1D5CD95C88185B1C9958591E48195E1A5CDD PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT CALLER PUSH1 0x60 SHL AND PUSH1 0x20 DUP3 ADD MSTORE TIMESTAMP PUSH1 0x34 DUP3 ADD MSTORE PUSH1 0x54 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x74 ADD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 DUP2 MSTORE DUP2 MLOAD PUSH1 0x20 SWAP3 DUP4 ADD KECCAK256 PUSH1 0x3 DUP2 SWAP1 SSTORE CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x5 SWAP1 SWAP4 MSTORE SWAP2 KECCAK256 SSTORE JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH1 0x1 PUSH1 0xA8 SHL SWAP1 DIV PUSH1 0xFF AND PUSH2 0x26B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH1 0x1 PUSH1 0xA8 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x2E8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x1D5CD95C88185B1C9958591E48195E1A5CDD PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x1E3 JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SUB PUSH2 0x33B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x139BDD0818481D985B1A5908151BDAD95B9251 PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x1E3 JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x3B0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x526566657272657220416C72656164792075736564204F6E6C79203120616C6C PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x1BDDD959 PUSH1 0xE2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1E3 JUMP JUMPDEST PUSH1 0x2 SLOAD CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x1 SWAP1 DUP2 ADD DUP1 SLOAD PUSH2 0x100 SWAP1 SWAP5 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 SWAP5 AND SWAP4 SWAP1 SWAP4 OR SWAP1 SWAP3 SSTORE DUP2 SLOAD SWAP2 SWAP1 PUSH2 0x3F7 DUP4 PUSH2 0x756 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH0 PUSH2 0x409 CALLER PUSH1 0x1 SLOAD PUSH2 0x4A2 JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x44B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x2737BA1030903B30B634B2103AB9B2B9 PUSH1 0x81 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x1E3 JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 PUSH1 0x1 SWAP1 DUP2 ADD DUP1 SLOAD PUSH1 0xFF PUSH1 0xA8 SHL NOT AND PUSH1 0x1 PUSH1 0xA8 SHL OR SWAP1 SSTORE PUSH1 0x2 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE SWAP2 KECCAK256 ADD DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND PUSH1 0x1 PUSH1 0xA0 SHL OR SWAP1 SSTORE PUSH2 0x49F PUSH2 0x6EC JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x67DD27F PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND SWAP4 DUP3 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH0 SWAP3 PUSH2 0x1F4 SWAP3 AND SWAP1 PUSH4 0xCFBA4FE0 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x4F2 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x516 SWAP2 SWAP1 PUSH2 0x77A JUMP JUMPDEST LT ISZERO PUSH2 0x55B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x696E73756666696369656E742062616C616E6365 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x1E3 JUMP JUMPDEST PUSH1 0x2 DUP3 GT PUSH2 0x5E4 JUMPI PUSH1 0x4 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 MLOAD PUSH4 0x17D57599 PUSH1 0xE3 SHL DUP2 MSTORE SWAP5 DUP6 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP2 AND PUSH1 0x24 DUP5 ADD MSTORE PUSH2 0x1F4 PUSH1 0x44 DUP5 ADD MSTORE AND SWAP1 PUSH4 0xBEABACC8 SWAP1 PUSH1 0x64 ADD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x5C9 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x5DB JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH2 0x6E3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH1 0x4 DUP1 SLOAD SWAP3 MLOAD PUSH4 0x17D57599 PUSH1 0xE3 SHL DUP2 MSTORE SWAP1 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE DUP4 AND PUSH1 0x24 DUP4 ADD DUP2 SWAP1 MSTORE PUSH2 0x12C PUSH1 0x44 DUP5 ADD MSTORE SWAP3 AND SWAP1 PUSH4 0xBEABACC8 SWAP1 PUSH1 0x64 ADD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x64D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x65F JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP PUSH1 0x4 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 MLOAD PUSH4 0x17D57599 PUSH1 0xE3 SHL DUP2 MSTORE DUP11 DUP4 AND SWAP5 DUP2 ADD SWAP5 SWAP1 SWAP5 MSTORE DUP2 AND PUSH1 0x24 DUP5 ADD MSTORE PUSH1 0xC8 PUSH1 0x44 DUP5 ADD MSTORE AND SWAP3 POP PUSH4 0xBEABACC8 SWAP2 POP PUSH1 0x64 ADD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x6CB JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x6DD JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP POP JUMPDEST POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH1 0x1 PUSH1 0xA8 SHL SWAP1 DIV PUSH1 0xFF AND PUSH2 0x710 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT AND CALLER PUSH2 0x100 MUL OR SWAP1 SSTORE JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x739 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x74F JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 DUP3 ADD PUSH2 0x773 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x78A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEF JUMPDEST 0xBE 0xB2 SWAP16 0x22 PUSH12 0xE6244D83E439CBF0C06B11BA PUSH8 0x5FB9D03266A5ADC5 DIV 0x2D PUSH30 0xD364736F6C63430008140033000000000000000000000000000000000000 ",
							"sourceMap": "88:2656:1:-:0;;;153:1;140:14;;440:281;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;526:5;:37;;-1:-1:-1;;;;;526:37:1;;;-1:-1:-1;;;;;;526:37:1;;;;;;-1:-1:-1;573:19:1;;;;;582:10;573:19;;;;;602:18;;;:6;:18;;;;;;-1:-1:-1;602:29:1;;;:36;;-1:-1:-1;;;;602:36:1;-1:-1:-1;;;602:36:1;;;648:6;:19;;526:37;648:19;;;-1:-1:-1;;;;;;648:19:1;;;;;;;;;;677:9;;;696:5;;707:6;;696:18;;-1:-1:-1;;;696:18:1;;707:6;;;696:18;;;455:51:2;;;;696:5:1;;:10;;428:18:2;;696::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;440:281;88:2656;;14:290:2;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;179:16;;-1:-1:-1;;;;;224:31:2;;214:42;;204:70;;270:1;267;260:12;204:70;293:5;14:290;-1:-1:-1;;;14:290:2:o;309:203::-;88:2656:1;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@admins_28": {
									"entryPoint": null,
									"id": 28,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@changingParent_346": {
									"entryPoint": 1772,
									"id": 346,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@getparent_335": {
									"entryPoint": 583,
									"id": 335,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@inter_40": {
									"entryPoint": null,
									"id": 40,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@isValidTransfer_321": {
									"entryPoint": 1186,
									"id": 321,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@join_253": {
									"entryPoint": 650,
									"id": 253,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@parent_35": {
									"entryPoint": null,
									"id": 35,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@random_37": {
									"entryPoint": null,
									"id": 37,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@staker_45": {
									"entryPoint": null,
									"id": 45,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@tokenId_175": {
									"entryPoint": 393,
									"id": 175,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 1833,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 1914,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_rational_200_by_1__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_rational_300_by_1__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_rational_500_by_1__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_InterfaceERC20_$23__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_2547072ea1669624254ad98a29f387fdce4aca4498930b07c148c345758a3f9d__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_61cd3a7ce172e8143be870a803fc424cc2dc95cf837e5e148fec23edfad807b7__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_7e2c3d148196343ecd06c5b2a71b5ba4e09bd917096447f8a1ece3694fde0be6__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_a6d1ff1db3d0b9b8c60e12ccab5ce7431be9a2cd0518ac362f1c5c1e0b1cefee__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d2a30e0d5845e97b1b92823282b1c8f66fb85bf930b451b83a45ce7bac4460aa__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_address_t_bool_t_bool__to_t_uint256_t_address_t_bool_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"increment_t_uint256": {
									"entryPoint": 1878,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:5117:2",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:2",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "115:102:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "125:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "137:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "148:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "133:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "133:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "125:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "167:9:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "182:6:2"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "198:3:2",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "203:1:2",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "194:3:2"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "194:11:2"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "207:1:2",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "190:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "190:19:2"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "178:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "178:32:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "160:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "160:51:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "160:51:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "84:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "95:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "106:4:2",
														"type": ""
													}
												],
												"src": "14:203:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "323:76:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "333:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "345:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "356:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "341:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "341:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "333:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "375:9:2"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "386:6:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "368:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "368:25:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "368:25:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "292:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "303:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "314:4:2",
														"type": ""
													}
												],
												"src": "222:177:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "474:216:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "520:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "529:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "532:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "522:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "522:12:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "522:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "495:7:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "504:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "491:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "491:23:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "516:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "487:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "487:32:2"
															},
															"nodeType": "YulIf",
															"src": "484:52:2"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "545:36:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "571:9:2"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "558:12:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "558:23:2"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "549:5:2",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "644:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "653:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "656:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "646:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "646:12:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "646:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "603:5:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "614:5:2"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "629:3:2",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "634:1:2",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "625:3:2"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "625:11:2"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "638:1:2",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "621:3:2"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "621:19:2"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "610:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "610:31:2"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "600:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "600:42:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "593:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "593:50:2"
															},
															"nodeType": "YulIf",
															"src": "590:70:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "669:15:2",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "679:5:2"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "669:6:2"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "440:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "451:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "463:6:2",
														"type": ""
													}
												],
												"src": "404:286:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "868:264:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "878:27:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "890:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "901:3:2",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "886:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "886:19:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "878:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "921:9:2"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "932:6:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "914:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "914:25:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "914:25:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "959:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "970:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "955:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "955:18:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "979:6:2"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "995:3:2",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1000:1:2",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "991:3:2"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "991:11:2"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1004:1:2",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "987:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "987:19:2"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "975:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "975:32:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "948:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "948:60:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "948:60:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1028:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1039:2:2",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1024:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1024:18:2"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value2",
																						"nodeType": "YulIdentifier",
																						"src": "1058:6:2"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "1051:6:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1051:14:2"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1044:6:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1044:22:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1017:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1017:50:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1017:50:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1087:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1098:2:2",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1083:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1083:18:2"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value3",
																						"nodeType": "YulIdentifier",
																						"src": "1117:6:2"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "1110:6:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1110:14:2"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1103:6:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1103:22:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1076:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1076:50:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1076:50:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_address_t_bool_t_bool__to_t_uint256_t_address_t_bool_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "813:9:2",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "824:6:2",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "832:6:2",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "840:6:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "848:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "859:4:2",
														"type": ""
													}
												],
												"src": "695:437:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1259:102:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1269:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1281:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1292:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1277:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1277:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1269:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1311:9:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "1326:6:2"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1342:3:2",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1347:1:2",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "1338:3:2"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1338:11:2"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1351:1:2",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "1334:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1334:19:2"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1322:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1322:32:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1304:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1304:51:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1304:51:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_InterfaceERC20_$23__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1228:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1239:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1250:4:2",
														"type": ""
													}
												],
												"src": "1137:224:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1540:168:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1557:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1568:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1550:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1550:21:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1550:21:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1591:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1602:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1587:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1587:18:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1607:2:2",
																		"type": "",
																		"value": "18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1580:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1580:30:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1580:30:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1630:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1641:2:2",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1626:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1626:18:2"
																	},
																	{
																		"hexValue": "7573657220616c7265616479206578697374",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "1646:20:2",
																		"type": "",
																		"value": "user already exist"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1619:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1619:48:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1619:48:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1676:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1688:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1699:2:2",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1684:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1684:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1676:4:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d2a30e0d5845e97b1b92823282b1c8f66fb85bf930b451b83a45ce7bac4460aa__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1517:9:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1531:4:2",
														"type": ""
													}
												],
												"src": "1366:342:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1888:184:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1905:3:2"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1918:2:2",
																						"type": "",
																						"value": "96"
																					},
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "1922:6:2"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "1914:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1914:15:2"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1935:26:2",
																						"type": "",
																						"value": "0xffffffffffffffffffffffff"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "1931:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1931:31:2"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1910:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1910:53:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1898:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1898:66:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1898:66:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "1984:3:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1989:2:2",
																				"type": "",
																				"value": "20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1980:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1980:12:2"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "1994:6:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1973:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1973:28:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1973:28:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "2021:3:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2026:2:2",
																				"type": "",
																				"value": "52"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2017:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2017:12:2"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "2031:6:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2010:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2010:28:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2010:28:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2047:19:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2058:3:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2063:2:2",
																		"type": "",
																		"value": "84"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2054:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2054:12:2"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "2047:3:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1848:3:2",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "1853:6:2",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1861:6:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1869:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1880:3:2",
														"type": ""
													}
												],
												"src": "1713:359:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2251:169:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2268:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2279:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2261:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2261:21:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2261:21:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2302:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2313:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2298:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2298:18:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2318:2:2",
																		"type": "",
																		"value": "19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2291:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2291:30:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2291:30:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2341:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2352:2:2",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2337:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2337:18:2"
																	},
																	{
																		"hexValue": "4e6f7420612076616c696420546f6b656e4944",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2357:21:2",
																		"type": "",
																		"value": "Not a valid TokenID"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2330:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2330:49:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2330:49:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2388:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2400:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2411:2:2",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2396:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2396:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2388:4:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_61cd3a7ce172e8143be870a803fc424cc2dc95cf837e5e148fec23edfad807b7__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2228:9:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2242:4:2",
														"type": ""
													}
												],
												"src": "2077:343:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2599:226:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2616:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2627:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2609:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2609:21:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2609:21:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2650:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2661:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2646:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2646:18:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2666:2:2",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2639:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2639:30:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2639:30:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2689:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2700:2:2",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2685:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2685:18:2"
																	},
																	{
																		"hexValue": "526566657272657220416c72656164792075736564204f6e6c79203120616c6c",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2705:34:2",
																		"type": "",
																		"value": "Referrer Already used Only 1 all"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2678:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2678:62:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2678:62:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2760:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2771:2:2",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2756:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2756:18:2"
																	},
																	{
																		"hexValue": "6f776564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2776:6:2",
																		"type": "",
																		"value": "owed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2749:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2749:34:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2749:34:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2792:27:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2804:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2815:3:2",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2800:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2800:19:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2792:4:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_2547072ea1669624254ad98a29f387fdce4aca4498930b07c148c345758a3f9d__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2576:9:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2590:4:2",
														"type": ""
													}
												],
												"src": "2425:400:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2877:185:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2916:111:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2937:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2944:3:2",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2949:10:2",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "2940:3:2"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2940:20:2"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2930:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2930:31:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2930:31:2"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2981:1:2",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2984:4:2",
																					"type": "",
																					"value": "0x11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2974:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2974:15:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2974:15:2"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3009:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3012:4:2",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3002:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3002:15:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3002:15:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2893:5:2"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2904:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "2900:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2900:6:2"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "2890:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2890:17:2"
															},
															"nodeType": "YulIf",
															"src": "2887:140:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3036:20:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3047:5:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3054:1:2",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3043:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3043:13:2"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "3036:3:2"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2859:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "2869:3:2",
														"type": ""
													}
												],
												"src": "2830:232:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3241:166:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3258:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3269:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3251:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3251:21:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3251:21:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3292:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3303:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3288:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3288:18:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3308:2:2",
																		"type": "",
																		"value": "16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3281:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3281:30:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3281:30:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3331:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3342:2:2",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3327:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3327:18:2"
																	},
																	{
																		"hexValue": "4e6f7420612076616c69642075736572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3347:18:2",
																		"type": "",
																		"value": "Not a valid user"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3320:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3320:46:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3320:46:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3375:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3387:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3398:2:2",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3383:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3383:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3375:4:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_7e2c3d148196343ecd06c5b2a71b5ba4e09bd917096447f8a1ece3694fde0be6__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3218:9:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3232:4:2",
														"type": ""
													}
												],
												"src": "3067:340:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3493:103:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3539:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3548:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3551:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3541:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3541:12:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3541:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3514:7:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3523:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3510:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3510:23:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3535:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3506:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3506:32:2"
															},
															"nodeType": "YulIf",
															"src": "3503:52:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3564:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3580:9:2"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3574:5:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3574:16:2"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "3564:6:2"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3459:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3470:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3482:6:2",
														"type": ""
													}
												],
												"src": "3412:184:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3775:170:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3792:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3803:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3785:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3785:21:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3785:21:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3826:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3837:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3822:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3822:18:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3842:2:2",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3815:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3815:30:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3815:30:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3865:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3876:2:2",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3861:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3861:18:2"
																	},
																	{
																		"hexValue": "696e73756666696369656e742062616c616e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3881:22:2",
																		"type": "",
																		"value": "insufficient balance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3854:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3854:50:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3854:50:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3913:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3925:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3936:2:2",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3921:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3921:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3913:4:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_a6d1ff1db3d0b9b8c60e12ccab5ce7431be9a2cd0518ac362f1c5c1e0b1cefee__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3752:9:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3766:4:2",
														"type": ""
													}
												],
												"src": "3601:344:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4117:218:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4127:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4139:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4150:2:2",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4135:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4135:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4127:4:2"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4162:29:2",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4180:3:2",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4185:1:2",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "4176:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4176:11:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4189:1:2",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "4172:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4172:19:2"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "4166:2:2",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4207:9:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "4222:6:2"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "4230:2:2"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "4218:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4218:15:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4200:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4200:34:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4200:34:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4254:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4265:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4250:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4250:18:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "4274:6:2"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "4282:2:2"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "4270:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4270:15:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4243:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4243:43:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4243:43:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4306:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4317:2:2",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4302:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4302:18:2"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "4322:6:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4295:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4295:34:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4295:34:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_rational_500_by_1__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4070:9:2",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "4081:6:2",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4089:6:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4097:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4108:4:2",
														"type": ""
													}
												],
												"src": "3950:385:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4507:218:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4517:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4529:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4540:2:2",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4525:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4525:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4517:4:2"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4552:29:2",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4570:3:2",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4575:1:2",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "4566:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4566:11:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4579:1:2",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "4562:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4562:19:2"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "4556:2:2",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4597:9:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "4612:6:2"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "4620:2:2"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "4608:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4608:15:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4590:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4590:34:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4590:34:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4644:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4655:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4640:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4640:18:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "4664:6:2"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "4672:2:2"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "4660:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4660:15:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4633:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4633:43:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4633:43:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4696:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4707:2:2",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4692:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4692:18:2"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "4712:6:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4685:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4685:34:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4685:34:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_rational_300_by_1__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4460:9:2",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "4471:6:2",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4479:6:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4487:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4498:4:2",
														"type": ""
													}
												],
												"src": "4340:385:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4897:218:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4907:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4919:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4930:2:2",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4915:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4915:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4907:4:2"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4942:29:2",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4960:3:2",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4965:1:2",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "4956:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4956:11:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4969:1:2",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "4952:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4952:19:2"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "4946:2:2",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4987:9:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "5002:6:2"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "5010:2:2"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "4998:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4998:15:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4980:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4980:34:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4980:34:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5034:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5045:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5030:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5030:18:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "5054:6:2"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "5062:2:2"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "5050:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5050:15:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5023:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5023:43:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5023:43:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5086:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5097:2:2",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5082:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5082:18:2"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "5102:6:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5075:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5075:34:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5075:34:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_rational_200_by_1__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4850:9:2",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "4861:6:2",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4869:6:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4877:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4888:4:2",
														"type": ""
													}
												],
												"src": "4730:385:2"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_uint256_t_address_t_bool_t_bool__to_t_uint256_t_address_t_bool_t_bool__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), and(value1, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 64), iszero(iszero(value2)))\n        mstore(add(headStart, 96), iszero(iszero(value3)))\n    }\n    function abi_encode_tuple_t_contract$_InterfaceERC20_$23__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_stringliteral_d2a30e0d5845e97b1b92823282b1c8f66fb85bf930b451b83a45ce7bac4460aa__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 18)\n        mstore(add(headStart, 64), \"user already exist\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_packed_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__nonPadded_inplace_fromStack_reversed(pos, value2, value1, value0) -> end\n    {\n        mstore(pos, and(shl(96, value0), not(0xffffffffffffffffffffffff)))\n        mstore(add(pos, 20), value1)\n        mstore(add(pos, 52), value2)\n        end := add(pos, 84)\n    }\n    function abi_encode_tuple_t_stringliteral_61cd3a7ce172e8143be870a803fc424cc2dc95cf837e5e148fec23edfad807b7__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 19)\n        mstore(add(headStart, 64), \"Not a valid TokenID\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_2547072ea1669624254ad98a29f387fdce4aca4498930b07c148c345758a3f9d__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"Referrer Already used Only 1 all\")\n        mstore(add(headStart, 96), \"owed\")\n        tail := add(headStart, 128)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n        ret := add(value, 1)\n    }\n    function abi_encode_tuple_t_stringliteral_7e2c3d148196343ecd06c5b2a71b5ba4e09bd917096447f8a1ece3694fde0be6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 16)\n        mstore(add(headStart, 64), \"Not a valid user\")\n        tail := add(headStart, 96)\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_tuple_t_stringliteral_a6d1ff1db3d0b9b8c60e12ccab5ce7431be9a2cd0518ac362f1c5c1e0b1cefee__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"insufficient balance\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_address_t_rational_500_by_1__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_address_t_address_t_rational_300_by_1__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_address_t_address_t_rational_200_by_1__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n    }\n}",
									"id": 2,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b5060043610610085575f3560e01c806382e4eda41161005857806382e4eda4146100e7578063a5de36191461015c578063b688a3631461016e578063f13ad72514610176575f80fd5b806317d70f7c14610089578063255d45d8146100935780635ec01e4d146100b857806360f96a8f146100cf575b5f80fd5b610091610189565b005b61009b610247565b6040516001600160a01b0390911681526020015b60405180910390f35b6100c160035481565b6040519081526020016100af565b60025461009b9061010090046001600160a01b031681565b61012c6100f5366004610729565b60056020525f9081526040902080546001909101546001600160a01b0381169060ff600160a01b8204811691600160a81b90041684565b604080519485526001600160a01b03909316602085015290151591830191909152151560608201526080016100af565b5f5461009b906001600160a01b031681565b61009161028a565b60045461009b906001600160a01b031681565b335f90815260056020526040902060010154600160a81b900460ff16156101ec5760405162461bcd60e51b81526020600482015260126024820152711d5cd95c88185b1c9958591e48195e1a5cdd60721b60448201526064015b60405180910390fd5b6003546040516bffffffffffffffffffffffff193360601b166020820152426034820152605481019190915260740160408051601f1981840301815291815281516020928301206003819055335f9081526005909352912055565b335f90815260056020526040812060010154600160a81b900460ff1661026b575f80fd5b50335f908152600560205260409020600101546001600160a01b031690565b335f90815260056020526040902060010154600160a81b900460ff16156102e85760405162461bcd60e51b81526020600482015260126024820152711d5cd95c88185b1c9958591e48195e1a5cdd60721b60448201526064016101e3565b335f90815260056020526040812054900361033b5760405162461bcd60e51b8152602060048201526013602482015272139bdd0818481d985b1a5908151bdad95b9251606a1b60448201526064016101e3565b335f90815260056020526040902060010154600160a01b900460ff16156103b05760405162461bcd60e51b8152602060048201526024808201527f526566657272657220416c72656164792075736564204f6e6c79203120616c6c6044820152631bddd95960e21b60648201526084016101e3565b600254335f908152600560205260408120600190810180546101009094046001600160a01b03166001600160a01b031990941693909317909255815491906103f783610756565b91905055505f610409336001546104a2565b90508061044b5760405162461bcd60e51b815260206004820152601060248201526f2737ba1030903b30b634b2103ab9b2b960811b60448201526064016101e3565b335f908152600560205260408082206001908101805460ff60a81b1916600160a81b17905560025461010090046001600160a01b03168352912001805460ff60a01b1916600160a01b17905561049f6106ec565b50565b6004805460405163067dd27f60e51b81526001600160a01b03858116938201939093525f926101f492169063cfba4fe0906024016020604051808303815f875af11580156104f2573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610516919061077a565b101561055b5760405162461bcd60e51b8152602060048201526014602482015273696e73756666696369656e742062616c616e636560601b60448201526064016101e3565b600282116105e457600480546001600160a01b038581165f81815260056020526040908190206001015490516317d5759960e31b815294850191909152811660248401526101f46044840152169063beabacc8906064015f604051808303815f87803b1580156105c9575f80fd5b505af11580156105db573d5f803e3d5ffd5b505050506106e3565b6001600160a01b038381165f8181526005602052604090819020600101546004805492516317d5759960e31b81529081019390935283166024830181905261012c604484015292169063beabacc8906064015f604051808303815f87803b15801561064d575f80fd5b505af115801561065f573d5f803e3d5ffd5b5050600480546001600160a01b038581165f90815260056020526040908190206001015490516317d5759960e31b81528a8316948101949094528116602484015260c8604484015216925063beabacc891506064015f604051808303815f87803b1580156106cb575f80fd5b505af11580156106dd573d5f803e3d5ffd5b50505050505b50600192915050565b335f90815260056020526040902060010154600160a81b900460ff16610710575f80fd5b60028054610100600160a81b0319163361010002179055565b5f60208284031215610739575f80fd5b81356001600160a01b038116811461074f575f80fd5b9392505050565b5f6001820161077357634e487b7160e01b5f52601160045260245ffd5b5060010190565b5f6020828403121561078a575f80fd5b505191905056fea2646970667358221220ef5bbeb29f226be6244d83e439cbf0c06b11ba675fb9d03266a5adc5042d7dd364736f6c63430008140033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x85 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x82E4EDA4 GT PUSH2 0x58 JUMPI DUP1 PUSH4 0x82E4EDA4 EQ PUSH2 0xE7 JUMPI DUP1 PUSH4 0xA5DE3619 EQ PUSH2 0x15C JUMPI DUP1 PUSH4 0xB688A363 EQ PUSH2 0x16E JUMPI DUP1 PUSH4 0xF13AD725 EQ PUSH2 0x176 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x17D70F7C EQ PUSH2 0x89 JUMPI DUP1 PUSH4 0x255D45D8 EQ PUSH2 0x93 JUMPI DUP1 PUSH4 0x5EC01E4D EQ PUSH2 0xB8 JUMPI DUP1 PUSH4 0x60F96A8F EQ PUSH2 0xCF JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x91 PUSH2 0x189 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x9B PUSH2 0x247 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC1 PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xAF JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x9B SWAP1 PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x12C PUSH2 0xF5 CALLDATASIZE PUSH1 0x4 PUSH2 0x729 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 PUSH1 0xFF PUSH1 0x1 PUSH1 0xA0 SHL DUP3 DIV DUP2 AND SWAP2 PUSH1 0x1 PUSH1 0xA8 SHL SWAP1 DIV AND DUP5 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP5 DUP6 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND PUSH1 0x20 DUP6 ADD MSTORE SWAP1 ISZERO ISZERO SWAP2 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ISZERO ISZERO PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD PUSH2 0xAF JUMP JUMPDEST PUSH0 SLOAD PUSH2 0x9B SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x91 PUSH2 0x28A JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH2 0x9B SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH1 0x1 PUSH1 0xA8 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x1EC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x1D5CD95C88185B1C9958591E48195E1A5CDD PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT CALLER PUSH1 0x60 SHL AND PUSH1 0x20 DUP3 ADD MSTORE TIMESTAMP PUSH1 0x34 DUP3 ADD MSTORE PUSH1 0x54 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x74 ADD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 DUP2 MSTORE DUP2 MLOAD PUSH1 0x20 SWAP3 DUP4 ADD KECCAK256 PUSH1 0x3 DUP2 SWAP1 SSTORE CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x5 SWAP1 SWAP4 MSTORE SWAP2 KECCAK256 SSTORE JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH1 0x1 PUSH1 0xA8 SHL SWAP1 DIV PUSH1 0xFF AND PUSH2 0x26B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH1 0x1 PUSH1 0xA8 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x2E8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x1D5CD95C88185B1C9958591E48195E1A5CDD PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x1E3 JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SUB PUSH2 0x33B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x139BDD0818481D985B1A5908151BDAD95B9251 PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x1E3 JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x3B0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x526566657272657220416C72656164792075736564204F6E6C79203120616C6C PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x1BDDD959 PUSH1 0xE2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1E3 JUMP JUMPDEST PUSH1 0x2 SLOAD CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x1 SWAP1 DUP2 ADD DUP1 SLOAD PUSH2 0x100 SWAP1 SWAP5 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 SWAP5 AND SWAP4 SWAP1 SWAP4 OR SWAP1 SWAP3 SSTORE DUP2 SLOAD SWAP2 SWAP1 PUSH2 0x3F7 DUP4 PUSH2 0x756 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH0 PUSH2 0x409 CALLER PUSH1 0x1 SLOAD PUSH2 0x4A2 JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x44B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x2737BA1030903B30B634B2103AB9B2B9 PUSH1 0x81 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x1E3 JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 PUSH1 0x1 SWAP1 DUP2 ADD DUP1 SLOAD PUSH1 0xFF PUSH1 0xA8 SHL NOT AND PUSH1 0x1 PUSH1 0xA8 SHL OR SWAP1 SSTORE PUSH1 0x2 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE SWAP2 KECCAK256 ADD DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND PUSH1 0x1 PUSH1 0xA0 SHL OR SWAP1 SSTORE PUSH2 0x49F PUSH2 0x6EC JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x67DD27F PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND SWAP4 DUP3 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH0 SWAP3 PUSH2 0x1F4 SWAP3 AND SWAP1 PUSH4 0xCFBA4FE0 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x4F2 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x516 SWAP2 SWAP1 PUSH2 0x77A JUMP JUMPDEST LT ISZERO PUSH2 0x55B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x696E73756666696369656E742062616C616E6365 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x1E3 JUMP JUMPDEST PUSH1 0x2 DUP3 GT PUSH2 0x5E4 JUMPI PUSH1 0x4 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 MLOAD PUSH4 0x17D57599 PUSH1 0xE3 SHL DUP2 MSTORE SWAP5 DUP6 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP2 AND PUSH1 0x24 DUP5 ADD MSTORE PUSH2 0x1F4 PUSH1 0x44 DUP5 ADD MSTORE AND SWAP1 PUSH4 0xBEABACC8 SWAP1 PUSH1 0x64 ADD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x5C9 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x5DB JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH2 0x6E3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH1 0x4 DUP1 SLOAD SWAP3 MLOAD PUSH4 0x17D57599 PUSH1 0xE3 SHL DUP2 MSTORE SWAP1 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE DUP4 AND PUSH1 0x24 DUP4 ADD DUP2 SWAP1 MSTORE PUSH2 0x12C PUSH1 0x44 DUP5 ADD MSTORE SWAP3 AND SWAP1 PUSH4 0xBEABACC8 SWAP1 PUSH1 0x64 ADD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x64D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x65F JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP PUSH1 0x4 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 MLOAD PUSH4 0x17D57599 PUSH1 0xE3 SHL DUP2 MSTORE DUP11 DUP4 AND SWAP5 DUP2 ADD SWAP5 SWAP1 SWAP5 MSTORE DUP2 AND PUSH1 0x24 DUP5 ADD MSTORE PUSH1 0xC8 PUSH1 0x44 DUP5 ADD MSTORE AND SWAP3 POP PUSH4 0xBEABACC8 SWAP2 POP PUSH1 0x64 ADD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x6CB JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x6DD JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP POP JUMPDEST POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH1 0x1 PUSH1 0xA8 SHL SWAP1 DIV PUSH1 0xFF AND PUSH2 0x710 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT AND CALLER PUSH2 0x100 MUL OR SWAP1 SSTORE JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x739 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x74F JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 DUP3 ADD PUSH2 0x773 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x78A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEF JUMPDEST 0xBE 0xB2 SWAP16 0x22 PUSH12 0xE6244D83E439CBF0C06B11BA PUSH8 0x5FB9D03266A5ADC5 DIV 0x2D PUSH30 0xD364736F6C63430008140033000000000000000000000000000000000000 ",
							"sourceMap": "88:2656:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1100:260;;;:::i;:::-;;2494:113;;;:::i;:::-;;;-1:-1:-1;;;;;178:32:2;;;160:51;;148:2;133:18;2494:113:1;;;;;;;;210:18;;;;;;;;;368:25:2;;;356:2;341:18;210::1;222:177:2;183:21:1;;;;;;;;-1:-1:-1;;;;;183:21:1;;;268:40;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;268:40:1;;;;-1:-1:-1;;;268:40:1;;;;;-1:-1:-1;;;268:40:1;;;;;;;;;914:25:2;;;-1:-1:-1;;;;;975:32:2;;;970:2;955:18;;948:60;1051:14;;1044:22;1024:18;;;1017:50;;;;1110:14;1103:22;1098:2;1083:18;;1076:50;901:3;886:19;268:40:1;695:437:2;113:21:1;;;;;-1:-1:-1;;;;;113:21:1;;;1400:587;;;:::i;234:27::-;;;;;-1:-1:-1;;;;;234:27:1;;;1100:260;1152:10;1145:18;;;;:6;:18;;;;;:29;;;-1:-1:-1;;;1145:29:1;;;;1144:30;1136:61;;;;-1:-1:-1;;;1136:61:1;;1568:2:2;1136:61:1;;;1550:21:2;1607:2;1587:18;;;1580:30;-1:-1:-1;;;1626:18:2;;;1619:48;1684:18;;1136:61:1;;;;;;;;;1290:6;;1244:53;;-1:-1:-1;;1261:10:1;1918:2:2;1914:15;1910:53;1244::1;;;1898:66:2;1273:15:1;1980:12:2;;;1973:28;2017:12;;;2010:28;;;;2054:12;;1244:53:1;;;-1:-1:-1;;1244:53:1;;;;;;;;;1234:64;;1244:53;1234:64;;;;1207:6;:101;;;1325:10;1216:92;1318:18;;;:6;:18;;;;;:35;1100:260::o;2494:113::-;1013:10;2547:7;1006:18;;;:6;:18;;;;;:29;;;-1:-1:-1;;;1006:29:1;;;;998:38;;;;;;-1:-1:-1;2580:10:1::1;2573:18;::::0;;;:6:::1;:18;::::0;;;;:27:::1;;::::0;-1:-1:-1;;;;;2573:27:1::1;2494:113:::0;:::o;1400:587::-;1449:10;1442:18;;;;:6;:18;;;;;:29;;;-1:-1:-1;;;1442:29:1;;;;1441:30;1433:61;;;;-1:-1:-1;;;1433:61:1;;1568:2:2;1433:61:1;;;1550:21:2;1607:2;1587:18;;;1580:30;-1:-1:-1;;;1626:18:2;;;1619:48;1684:18;;1433:61:1;1366:342:2;1433:61:1;1519:10;1512:18;;;;:6;:18;;;;;:26;:31;;1504:63;;;;-1:-1:-1;;;1504:63:1;;2279:2:2;1504:63:1;;;2261:21:2;2318:2;2298:18;;;2291:30;-1:-1:-1;;;2337:18:2;;;2330:49;2396:18;;1504:63:1;2077:343:2;1504:63:1;1607:10;1600:18;;;;:6;:18;;;;;:30;;;-1:-1:-1;;;1600:30:1;;;;1598:33;1577:116;;;;-1:-1:-1;;;1577:116:1;;2627:2:2;1577:116:1;;;2609:21:2;2666:2;2646:18;;;2639:30;2705:34;2685:18;;;2678:62;-1:-1:-1;;;2756:18:2;;;2749:34;2800:19;;1577:116:1;2425:400:2;1577:116:1;1733:6;;1710:10;1703:18;;;;:6;:18;;;;;1733:6;1703:27;;;:36;;1733:6;;;;-1:-1:-1;;;;;1733:6:1;-1:-1:-1;;;;;;1703:36:1;;;;;;;;;;1749:7;;;1733:6;1749:7;;;:::i;:::-;;;;;;1766:14;1783:34;1799:10;1811:5;;1783:15;:34::i;:::-;1766:51;;1835:9;1827:38;;;;-1:-1:-1;;;1827:38:1;;3269:2:2;1827:38:1;;;3251:21:2;3308:2;3288:18;;;3281:30;-1:-1:-1;;;3327:18:2;;;3320:46;3383:18;;1827:38:1;3067:340:2;1827:38:1;1882:10;1875:18;;;;:6;:18;;;;;;1907:4;1875:29;;;:36;;-1:-1:-1;;;;1875:36:1;-1:-1:-1;;;1875:36:1;;;1928:6;;1875:36;1928:6;;-1:-1:-1;;;;;1928:6:1;1921:14;;;;:26;:33;;-1:-1:-1;;;;1921:33:1;-1:-1:-1;;;1921:33:1;;;1964:16;:14;:16::i;:::-;1423:564;1400:587::o;1993:495::-;2109:5;;;:23;;-1:-1:-1;;;2109:23:1;;-1:-1:-1;;;;;178:32:2;;;2109:23:1;;;160:51:2;;;;2085:4:1;;2136:3;;2109:5;;:17;;133:18:2;;2109:23:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:30;;2101:63;;;;-1:-1:-1;;;2101:63:1;;3803:2:2;2101:63:1;;;3785:21:2;3842:2;3822:18;;;3815:30;-1:-1:-1;;;3861:18:2;;;3854:50;3921:18;;2101:63:1;3601:344:2;2101:63:1;2188:1;2178:6;:11;2174:287;;2205:5;;;-1:-1:-1;;;;;2226:12:1;;;2205:5;2226:12;;;:6;:12;;;;;;;2205:5;2226:21;;2205:48;;-1:-1:-1;;;2205:48:1;;;;;4200:34:2;;;;2226:21:1;;4250:18:2;;;4243:43;2249:3:1;4302:18:2;;;4295:34;2205:5:1;;:14;;4135:18:2;;2205:48:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2174:287;;;-1:-1:-1;;;;;2302:12:1;;;2284:15;2302:12;;;:6;:12;;;;;;;:21;;;2337:5;;;:48;;-1:-1:-1;;;2337:48:1;;;;;4200:34:2;;;;2302:21:1;;4250:18:2;;;4243:43;;;2381:3:1;4302:18:2;;;4295:34;2302:21:1;2337:5;;:14;;4135:18:2;;2337:48:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2399:5:1;;;-1:-1:-1;;;;;2420:15:1;;;2399:5;2420:15;;;:6;:15;;;;;;;2399:5;2420:24;;2399:51;;-1:-1:-1;;;2399:51:1;;4218:15:2;;;2399:51:1;;;4200:34:2;;;;2420:24:1;;4250:18:2;;;4243:43;2446:3:1;4302:18:2;;;4295:34;2399:5:1;;-1:-1:-1;2399:14:1;;-1:-1:-1;4135:18:2;;2399:51:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2270:191;2174:287;-1:-1:-1;2477:4:1;1993:495;;;;:::o;2660:82::-;1013:10;1006:18;;;;:6;:18;;;;;:29;;;-1:-1:-1;;;1006:29:1;;;;998:38;;;;;;2716:6:::1;:19:::0;;-1:-1:-1;;;;;;2716:19:1::1;2725:10;2716:19;;;::::0;;2660:82::o;404:286:2:-;463:6;516:2;504:9;495:7;491:23;487:32;484:52;;;532:1;529;522:12;484:52;558:23;;-1:-1:-1;;;;;610:31:2;;600:42;;590:70;;656:1;653;646:12;590:70;679:5;404:286;-1:-1:-1;;;404:286:2:o;2830:232::-;2869:3;2890:17;;;2887:140;;2949:10;2944:3;2940:20;2937:1;2930:31;2984:4;2981:1;2974:15;3012:4;3009:1;3002:15;2887:140;-1:-1:-1;3054:1:2;3043:13;;2830:232::o;3412:184::-;3482:6;3535:2;3523:9;3514:7;3510:23;3506:32;3503:52;;;3551:1;3548;3541:12;3503:52;-1:-1:-1;3574:16:2;;3412:184;-1:-1:-1;3412:184:2:o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "398200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"admins()": "2346",
								"getparent()": "4645",
								"inter()": "2391",
								"join()": "infinite",
								"parent()": "2403",
								"random()": "2339",
								"staker(address)": "4765",
								"tokenId()": "48941"
							},
							"internal": {
								"changingParent()": "26471",
								"isValidTransfer(address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 88,
									"end": 2744,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 88,
									"end": 2744,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 88,
									"end": 2744,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 153,
									"end": 154,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 140,
									"end": 154,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 140,
									"end": 154,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 440,
									"end": 721,
									"name": "CALLVALUE",
									"source": 1
								},
								{
									"begin": 440,
									"end": 721,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 440,
									"end": 721,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 440,
									"end": 721,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 440,
									"end": 721,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 440,
									"end": 721,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 440,
									"end": 721,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 440,
									"end": 721,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 440,
									"end": 721,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 440,
									"end": 721,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 440,
									"end": 721,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 440,
									"end": 721,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 440,
									"end": 721,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 440,
									"end": 721,
									"name": "PUSHSIZE",
									"source": 1
								},
								{
									"begin": 440,
									"end": 721,
									"name": "CODESIZE",
									"source": 1
								},
								{
									"begin": 440,
									"end": 721,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 440,
									"end": 721,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 440,
									"end": 721,
									"name": "PUSHSIZE",
									"source": 1
								},
								{
									"begin": 440,
									"end": 721,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 440,
									"end": 721,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 440,
									"end": 721,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 440,
									"end": 721,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 440,
									"end": 721,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 440,
									"end": 721,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 440,
									"end": 721,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 440,
									"end": 721,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 440,
									"end": 721,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 440,
									"end": 721,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 440,
									"end": 721,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 440,
									"end": 721,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 440,
									"end": 721,
									"name": "tag",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 440,
									"end": 721,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 526,
									"end": 531,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 526,
									"end": 563,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 526,
									"end": 563,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 526,
									"end": 563,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 526,
									"end": 563,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 526,
									"end": 563,
									"name": "AND",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 526,
									"end": 563,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 526,
									"end": 563,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 526,
									"end": 563,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 526,
									"end": 563,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 526,
									"end": 563,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 526,
									"end": 563,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 573,
									"end": 592,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 573,
									"end": 592,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 573,
									"end": 592,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 573,
									"end": 592,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 573,
									"end": 592,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 582,
									"end": 592,
									"name": "CALLER",
									"source": 1
								},
								{
									"begin": 573,
									"end": 592,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 573,
									"end": 592,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 573,
									"end": 592,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 573,
									"end": 592,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 573,
									"end": 592,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 602,
									"end": 620,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 602,
									"end": 620,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 602,
									"end": 620,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 602,
									"end": 608,
									"name": "PUSH",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 602,
									"end": 620,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 602,
									"end": 620,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 602,
									"end": 620,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 602,
									"end": 620,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 602,
									"end": 620,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 602,
									"end": 620,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": 602,
									"end": 631,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 602,
									"end": 631,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 602,
									"end": 631,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 602,
									"end": 638,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 602,
									"end": 638,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "FF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A8"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 602,
									"end": 638,
									"name": "AND",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A8"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 602,
									"end": 638,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 602,
									"end": 638,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 602,
									"end": 638,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 648,
									"end": 654,
									"name": "PUSH",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 648,
									"end": 667,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 648,
									"end": 667,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 526,
									"end": 563,
									"name": "PUSH",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 648,
									"end": 667,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 648,
									"end": 667,
									"name": "SWAP5",
									"source": 1
								},
								{
									"begin": 648,
									"end": 667,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "100"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A8"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 648,
									"end": 667,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 648,
									"end": 667,
									"name": "SWAP5",
									"source": 1
								},
								{
									"begin": 648,
									"end": 667,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 648,
									"end": 667,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 648,
									"end": 667,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 648,
									"end": 667,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 648,
									"end": 667,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 648,
									"end": 667,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 648,
									"end": 667,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 648,
									"end": 667,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 677,
									"end": 686,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 677,
									"end": 686,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 677,
									"end": 686,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 696,
									"end": 701,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 696,
									"end": 701,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 707,
									"end": 713,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 707,
									"end": 713,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 696,
									"end": 714,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 696,
									"end": 714,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "35313C21"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 696,
									"end": 714,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 696,
									"end": 714,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 707,
									"end": 713,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 707,
									"end": 713,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 707,
									"end": 713,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 696,
									"end": 714,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 696,
									"end": 714,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 696,
									"end": 714,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 455,
									"end": 506,
									"name": "SWAP4",
									"source": 2
								},
								{
									"begin": 455,
									"end": 506,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 455,
									"end": 506,
									"name": "SWAP4",
									"source": 2
								},
								{
									"begin": 455,
									"end": 506,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 696,
									"end": 701,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 696,
									"end": 701,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 696,
									"end": 706,
									"name": "PUSH",
									"source": 1,
									"value": "6A627842"
								},
								{
									"begin": 696,
									"end": 706,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 428,
									"end": 446,
									"name": "PUSH",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 428,
									"end": 446,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 696,
									"end": 714,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 696,
									"end": 714,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 696,
									"end": 714,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 696,
									"end": 714,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 696,
									"end": 714,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 696,
									"end": 714,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 696,
									"end": 714,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 696,
									"end": 714,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 696,
									"end": 714,
									"name": "DUP8",
									"source": 1
								},
								{
									"begin": 696,
									"end": 714,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 696,
									"end": 714,
									"name": "EXTCODESIZE",
									"source": 1
								},
								{
									"begin": 696,
									"end": 714,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 696,
									"end": 714,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 696,
									"end": 714,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 696,
									"end": 714,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 696,
									"end": 714,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 696,
									"end": 714,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 696,
									"end": 714,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 696,
									"end": 714,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 696,
									"end": 714,
									"name": "tag",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 696,
									"end": 714,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 696,
									"end": 714,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 696,
									"end": 714,
									"name": "GAS",
									"source": 1
								},
								{
									"begin": 696,
									"end": 714,
									"name": "CALL",
									"source": 1
								},
								{
									"begin": 696,
									"end": 714,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 696,
									"end": 714,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 696,
									"end": 714,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 696,
									"end": 714,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 696,
									"end": 714,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 696,
									"end": 714,
									"name": "RETURNDATASIZE",
									"source": 1
								},
								{
									"begin": 696,
									"end": 714,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 696,
									"end": 714,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 696,
									"end": 714,
									"name": "RETURNDATACOPY",
									"source": 1
								},
								{
									"begin": 696,
									"end": 714,
									"name": "RETURNDATASIZE",
									"source": 1
								},
								{
									"begin": 696,
									"end": 714,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 696,
									"end": 714,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 696,
									"end": 714,
									"name": "tag",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 696,
									"end": 714,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 696,
									"end": 714,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 696,
									"end": 714,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 696,
									"end": 714,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 696,
									"end": 714,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 440,
									"end": 721,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 88,
									"end": 2744,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "12"
								},
								{
									"begin": 88,
									"end": 2744,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 14,
									"end": 304,
									"name": "tag",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 14,
									"end": 304,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 84,
									"end": 90,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 137,
									"end": 139,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 125,
									"end": 134,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 116,
									"end": 123,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 112,
									"end": 135,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 108,
									"end": 140,
									"name": "SLT",
									"source": 2
								},
								{
									"begin": 105,
									"end": 157,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 105,
									"end": 157,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "14"
								},
								{
									"begin": 105,
									"end": 157,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 153,
									"end": 154,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 150,
									"end": 151,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 143,
									"end": 155,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 105,
									"end": 157,
									"name": "tag",
									"source": 2,
									"value": "14"
								},
								{
									"begin": 105,
									"end": 157,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 179,
									"end": 195,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 179,
									"end": 195,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 224,
									"end": 255,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 224,
									"end": 255,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 214,
									"end": 256,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 214,
									"end": 256,
									"name": "EQ",
									"source": 2
								},
								{
									"begin": 204,
									"end": 274,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "15"
								},
								{
									"begin": 204,
									"end": 274,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 270,
									"end": 271,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 267,
									"end": 268,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 260,
									"end": 272,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 204,
									"end": 274,
									"name": "tag",
									"source": 2,
									"value": "15"
								},
								{
									"begin": 204,
									"end": 274,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 293,
									"end": 298,
									"name": "SWAP4",
									"source": 2
								},
								{
									"begin": 14,
									"end": 304,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 14,
									"end": 304,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 309,
									"end": 512,
									"name": "tag",
									"source": 2,
									"value": "12"
								},
								{
									"begin": 309,
									"end": 512,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 88,
									"end": 2744,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 88,
									"end": 2744,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 88,
									"end": 2744,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 88,
									"end": 2744,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 88,
									"end": 2744,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 88,
									"end": 2744,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 88,
									"end": 2744,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220ef5bbeb29f226be6244d83e439cbf0c06b11ba675fb9d03266a5adc5042d7dd364736f6c63430008140033",
									".code": [
										{
											"begin": 88,
											"end": 2744,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 88,
											"end": 2744,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 88,
											"end": 2744,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 88,
											"end": 2744,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 88,
											"end": 2744,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 88,
											"end": 2744,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 88,
											"end": 2744,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 88,
											"end": 2744,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 88,
											"end": 2744,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 88,
											"end": 2744,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 88,
											"end": 2744,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 88,
											"end": 2744,
											"name": "tag",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 88,
											"end": 2744,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 88,
											"end": 2744,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 88,
											"end": 2744,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 88,
											"end": 2744,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 88,
											"end": 2744,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 88,
											"end": 2744,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 88,
											"end": 2744,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 88,
											"end": 2744,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 88,
											"end": 2744,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 88,
											"end": 2744,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 88,
											"end": 2744,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 88,
											"end": 2744,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 88,
											"end": 2744,
											"name": "PUSH",
											"source": 1,
											"value": "82E4EDA4"
										},
										{
											"begin": 88,
											"end": 2744,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 88,
											"end": 2744,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 88,
											"end": 2744,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 88,
											"end": 2744,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 88,
											"end": 2744,
											"name": "PUSH",
											"source": 1,
											"value": "82E4EDA4"
										},
										{
											"begin": 88,
											"end": 2744,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 88,
											"end": 2744,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 88,
											"end": 2744,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 88,
											"end": 2744,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 88,
											"end": 2744,
											"name": "PUSH",
											"source": 1,
											"value": "A5DE3619"
										},
										{
											"begin": 88,
											"end": 2744,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 88,
											"end": 2744,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 88,
											"end": 2744,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 88,
											"end": 2744,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 88,
											"end": 2744,
											"name": "PUSH",
											"source": 1,
											"value": "B688A363"
										},
										{
											"begin": 88,
											"end": 2744,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 88,
											"end": 2744,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 88,
											"end": 2744,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 88,
											"end": 2744,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 88,
											"end": 2744,
											"name": "PUSH",
											"source": 1,
											"value": "F13AD725"
										},
										{
											"begin": 88,
											"end": 2744,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 88,
											"end": 2744,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 88,
											"end": 2744,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 88,
											"end": 2744,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 88,
											"end": 2744,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 88,
											"end": 2744,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 88,
											"end": 2744,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 88,
											"end": 2744,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 88,
											"end": 2744,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 88,
											"end": 2744,
											"name": "PUSH",
											"source": 1,
											"value": "17D70F7C"
										},
										{
											"begin": 88,
											"end": 2744,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 88,
											"end": 2744,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 88,
											"end": 2744,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 88,
											"end": 2744,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 88,
											"end": 2744,
											"name": "PUSH",
											"source": 1,
											"value": "255D45D8"
										},
										{
											"begin": 88,
											"end": 2744,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 88,
											"end": 2744,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 88,
											"end": 2744,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 88,
											"end": 2744,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 88,
											"end": 2744,
											"name": "PUSH",
											"source": 1,
											"value": "5EC01E4D"
										},
										{
											"begin": 88,
											"end": 2744,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 88,
											"end": 2744,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 88,
											"end": 2744,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 88,
											"end": 2744,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 88,
											"end": 2744,
											"name": "PUSH",
											"source": 1,
											"value": "60F96A8F"
										},
										{
											"begin": 88,
											"end": 2744,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 88,
											"end": 2744,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 88,
											"end": 2744,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 88,
											"end": 2744,
											"name": "tag",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 88,
											"end": 2744,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 88,
											"end": 2744,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 88,
											"end": 2744,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 88,
											"end": 2744,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1100,
											"end": 1360,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 1100,
											"end": 1360,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1100,
											"end": 1360,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 1100,
											"end": 1360,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 1100,
											"end": 1360,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1100,
											"end": 1360,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 1100,
											"end": 1360,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1100,
											"end": 1360,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 2494,
											"end": 2607,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2494,
											"end": 2607,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2494,
											"end": 2607,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 2494,
											"end": 2607,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 2494,
											"end": 2607,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2494,
											"end": 2607,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 2494,
											"end": 2607,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2494,
											"end": 2607,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2494,
											"end": 2607,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 178,
											"end": 210,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 178,
											"end": 210,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 178,
											"end": 210,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 160,
											"end": 211,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 160,
											"end": 211,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 148,
											"end": 150,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2494,
											"end": 2607,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 2494,
											"end": 2607,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2494,
											"end": 2607,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2494,
											"end": 2607,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2494,
											"end": 2607,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2494,
											"end": 2607,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2494,
											"end": 2607,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2494,
											"end": 2607,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2494,
											"end": 2607,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 210,
											"end": 228,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 210,
											"end": 228,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 210,
											"end": 228,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 210,
											"end": 228,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 210,
											"end": 228,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 210,
											"end": 228,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 210,
											"end": 228,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 210,
											"end": 228,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 210,
											"end": 228,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 210,
											"end": 228,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 210,
											"end": 228,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 368,
											"end": 393,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 368,
											"end": 393,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 368,
											"end": 393,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 356,
											"end": 358,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 341,
											"end": 359,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 210,
											"end": 228,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 222,
											"end": 399,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 183,
											"end": 204,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 183,
											"end": 204,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 183,
											"end": 204,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 183,
											"end": 204,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 183,
											"end": 204,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 183,
											"end": 204,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 183,
											"end": 204,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 183,
											"end": 204,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 183,
											"end": 204,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 183,
											"end": 204,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 183,
											"end": 204,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 183,
											"end": 204,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 268,
											"end": 308,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 268,
											"end": 308,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 268,
											"end": 308,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 268,
											"end": 308,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 268,
											"end": 308,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 268,
											"end": 308,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 268,
											"end": 308,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 268,
											"end": 308,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 268,
											"end": 308,
											"name": "tag",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 268,
											"end": 308,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 268,
											"end": 308,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 268,
											"end": 308,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 268,
											"end": 308,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 268,
											"end": 308,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 268,
											"end": 308,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 268,
											"end": 308,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 268,
											"end": 308,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 268,
											"end": 308,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 268,
											"end": 308,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 268,
											"end": 308,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 268,
											"end": 308,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 268,
											"end": 308,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 268,
											"end": 308,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 268,
											"end": 308,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 268,
											"end": 308,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 268,
											"end": 308,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 268,
											"end": 308,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 268,
											"end": 308,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 268,
											"end": 308,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 268,
											"end": 308,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 268,
											"end": 308,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 268,
											"end": 308,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 268,
											"end": 308,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 268,
											"end": 308,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 268,
											"end": 308,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 268,
											"end": 308,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 268,
											"end": 308,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 268,
											"end": 308,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 268,
											"end": 308,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 268,
											"end": 308,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 268,
											"end": 308,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 268,
											"end": 308,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 268,
											"end": 308,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 268,
											"end": 308,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 268,
											"end": 308,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 268,
											"end": 308,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 914,
											"end": 939,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 914,
											"end": 939,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 914,
											"end": 939,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 975,
											"end": 1007,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 975,
											"end": 1007,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 975,
											"end": 1007,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 970,
											"end": 972,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 955,
											"end": 973,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 955,
											"end": 973,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 948,
											"end": 1008,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1051,
											"end": 1065,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1051,
											"end": 1065,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1044,
											"end": 1066,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1024,
											"end": 1042,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1024,
											"end": 1042,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1024,
											"end": 1042,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1017,
											"end": 1067,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1017,
											"end": 1067,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1017,
											"end": 1067,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1017,
											"end": 1067,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1110,
											"end": 1124,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1103,
											"end": 1125,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1098,
											"end": 1100,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 1083,
											"end": 1101,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1083,
											"end": 1101,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1076,
											"end": 1126,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 901,
											"end": 904,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 886,
											"end": 905,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 268,
											"end": 308,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 695,
											"end": 1132,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 113,
											"end": 134,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 113,
											"end": 134,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 113,
											"end": 134,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 113,
											"end": 134,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 113,
											"end": 134,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 113,
											"end": 134,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 113,
											"end": 134,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 113,
											"end": 134,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 113,
											"end": 134,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1400,
											"end": 1987,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 1400,
											"end": 1987,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1400,
											"end": 1987,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 1400,
											"end": 1987,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 1400,
											"end": 1987,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 234,
											"end": 261,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 234,
											"end": 261,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 234,
											"end": 261,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 234,
											"end": 261,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 234,
											"end": 261,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 234,
											"end": 261,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 234,
											"end": 261,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 234,
											"end": 261,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 234,
											"end": 261,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1100,
											"end": 1360,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 1100,
											"end": 1360,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1152,
											"end": 1162,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 1145,
											"end": 1163,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1145,
											"end": 1163,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1145,
											"end": 1163,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1145,
											"end": 1163,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1145,
											"end": 1151,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 1145,
											"end": 1163,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1145,
											"end": 1163,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1145,
											"end": 1163,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1145,
											"end": 1163,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1145,
											"end": 1163,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 1145,
											"end": 1174,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1145,
											"end": 1174,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1145,
											"end": 1174,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1145,
											"end": 1174,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1145,
											"end": 1174,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 1145,
											"end": 1174,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 1145,
											"end": 1174,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1144,
											"end": 1174,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1136,
											"end": 1197,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 1136,
											"end": 1197,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1136,
											"end": 1197,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1136,
											"end": 1197,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1136,
											"end": 1197,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1136,
											"end": 1197,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1568,
											"end": 1570,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1136,
											"end": 1197,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1136,
											"end": 1197,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1136,
											"end": 1197,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1550,
											"end": 1571,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1607,
											"end": 1609,
											"name": "PUSH",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 1587,
											"end": 1605,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 1587,
											"end": 1605,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1587,
											"end": 1605,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1580,
											"end": 1610,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1D5CD95C88185B1C9958591E48195E1A5CDD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "72"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1626,
											"end": 1644,
											"name": "PUSH",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 1626,
											"end": 1644,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1626,
											"end": 1644,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1619,
											"end": 1667,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1684,
											"end": 1702,
											"name": "PUSH",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 1684,
											"end": 1702,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1136,
											"end": 1197,
											"name": "tag",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 1136,
											"end": 1197,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1136,
											"end": 1197,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1136,
											"end": 1197,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1136,
											"end": 1197,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1136,
											"end": 1197,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1136,
											"end": 1197,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1136,
											"end": 1197,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1136,
											"end": 1197,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1136,
											"end": 1197,
											"name": "tag",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 1136,
											"end": 1197,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1290,
											"end": 1296,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 1290,
											"end": 1296,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1244,
											"end": 1297,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1244,
											"end": 1297,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1261,
											"end": 1271,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 1918,
											"end": 1920,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 1914,
											"end": 1929,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 1910,
											"end": 1963,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1244,
											"end": 1297,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1244,
											"end": 1297,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1244,
											"end": 1297,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1898,
											"end": 1964,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1273,
											"end": 1288,
											"name": "TIMESTAMP",
											"source": 1
										},
										{
											"begin": 1980,
											"end": 1992,
											"name": "PUSH",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 1980,
											"end": 1992,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1980,
											"end": 1992,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1973,
											"end": 2001,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2017,
											"end": 2029,
											"name": "PUSH",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 2017,
											"end": 2029,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2017,
											"end": 2029,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2010,
											"end": 2038,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2010,
											"end": 2038,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2010,
											"end": 2038,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2010,
											"end": 2038,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2054,
											"end": 2066,
											"name": "PUSH",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 2054,
											"end": 2066,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1244,
											"end": 1297,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1244,
											"end": 1297,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1244,
											"end": 1297,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1244,
											"end": 1297,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1244,
											"end": 1297,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1244,
											"end": 1297,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1244,
											"end": 1297,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1244,
											"end": 1297,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1244,
											"end": 1297,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1244,
											"end": 1297,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1244,
											"end": 1297,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1244,
											"end": 1297,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1234,
											"end": 1298,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1234,
											"end": 1298,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1244,
											"end": 1297,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1234,
											"end": 1298,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1234,
											"end": 1298,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1234,
											"end": 1298,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1234,
											"end": 1298,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 1207,
											"end": 1213,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 1207,
											"end": 1308,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1207,
											"end": 1308,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1207,
											"end": 1308,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 1325,
											"end": 1335,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 1216,
											"end": 1308,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1318,
											"end": 1336,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1318,
											"end": 1336,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1318,
											"end": 1336,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1318,
											"end": 1324,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 1318,
											"end": 1336,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1318,
											"end": 1336,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 1318,
											"end": 1336,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1318,
											"end": 1336,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1318,
											"end": 1336,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 1318,
											"end": 1353,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 1100,
											"end": 1360,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2494,
											"end": 2607,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 2494,
											"end": 2607,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1013,
											"end": 1023,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 2547,
											"end": 2554,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1006,
											"end": 1024,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1006,
											"end": 1024,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1006,
											"end": 1024,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1006,
											"end": 1012,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 1006,
											"end": 1024,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1006,
											"end": 1024,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1006,
											"end": 1024,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1006,
											"end": 1024,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1006,
											"end": 1024,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 1006,
											"end": 1035,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1006,
											"end": 1035,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1006,
											"end": 1035,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1006,
											"end": 1035,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1006,
											"end": 1035,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 1006,
											"end": 1035,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 1006,
											"end": 1035,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 998,
											"end": 1036,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 998,
											"end": 1036,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 998,
											"end": 1036,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 998,
											"end": 1036,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 998,
											"end": 1036,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 998,
											"end": 1036,
											"name": "tag",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 998,
											"end": 1036,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2580,
											"end": 2590,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 2573,
											"end": 2591,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2573,
											"end": 2591,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2573,
											"end": 2591,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2573,
											"end": 2591,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2573,
											"end": 2579,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 2573,
											"end": 2591,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2573,
											"end": 2591,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2573,
											"end": 2591,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2573,
											"end": 2591,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2573,
											"end": 2591,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2573,
											"end": 2600,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2573,
											"end": 2600,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2573,
											"end": 2600,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2573,
											"end": 2600,
											"modifierDepth": 1,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2494,
											"end": 2607,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2494,
											"end": 2607,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1400,
											"end": 1987,
											"name": "tag",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 1400,
											"end": 1987,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1449,
											"end": 1459,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 1442,
											"end": 1460,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1442,
											"end": 1460,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1442,
											"end": 1460,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1442,
											"end": 1460,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1442,
											"end": 1448,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 1442,
											"end": 1460,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1442,
											"end": 1460,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1442,
											"end": 1460,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1442,
											"end": 1460,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1442,
											"end": 1460,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 1442,
											"end": 1471,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1442,
											"end": 1471,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1442,
											"end": 1471,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1442,
											"end": 1471,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1442,
											"end": 1471,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 1442,
											"end": 1471,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 1442,
											"end": 1471,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1441,
											"end": 1471,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1433,
											"end": 1494,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 1433,
											"end": 1494,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1433,
											"end": 1494,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1433,
											"end": 1494,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1433,
											"end": 1494,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1433,
											"end": 1494,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1568,
											"end": 1570,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1433,
											"end": 1494,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1433,
											"end": 1494,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1433,
											"end": 1494,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1550,
											"end": 1571,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1607,
											"end": 1609,
											"name": "PUSH",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 1587,
											"end": 1605,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 1587,
											"end": 1605,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1587,
											"end": 1605,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1580,
											"end": 1610,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1D5CD95C88185B1C9958591E48195E1A5CDD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "72"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1626,
											"end": 1644,
											"name": "PUSH",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 1626,
											"end": 1644,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1626,
											"end": 1644,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1619,
											"end": 1667,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1684,
											"end": 1702,
											"name": "PUSH",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 1684,
											"end": 1702,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1433,
											"end": 1494,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 1366,
											"end": 1708,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1433,
											"end": 1494,
											"name": "tag",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 1433,
											"end": 1494,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1519,
											"end": 1529,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 1512,
											"end": 1530,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1512,
											"end": 1530,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1512,
											"end": 1530,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1512,
											"end": 1530,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1512,
											"end": 1518,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 1512,
											"end": 1530,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1512,
											"end": 1530,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1512,
											"end": 1530,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1512,
											"end": 1530,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1512,
											"end": 1530,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 1512,
											"end": 1538,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1512,
											"end": 1543,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1512,
											"end": 1543,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1504,
											"end": 1567,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 1504,
											"end": 1567,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1504,
											"end": 1567,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1504,
											"end": 1567,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1504,
											"end": 1567,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1504,
											"end": 1567,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2279,
											"end": 2281,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1504,
											"end": 1567,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1504,
											"end": 1567,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1504,
											"end": 1567,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2318,
											"end": 2320,
											"name": "PUSH",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 2298,
											"end": 2316,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 2298,
											"end": 2316,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2298,
											"end": 2316,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2291,
											"end": 2321,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "139BDD0818481D985B1A5908151BDAD95B9251"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2337,
											"end": 2355,
											"name": "PUSH",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 2337,
											"end": 2355,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2337,
											"end": 2355,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2330,
											"end": 2379,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2396,
											"end": 2414,
											"name": "PUSH",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 2396,
											"end": 2414,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1504,
											"end": 1567,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 2077,
											"end": 2420,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1504,
											"end": 1567,
											"name": "tag",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 1504,
											"end": 1567,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1607,
											"end": 1617,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 1600,
											"end": 1618,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1600,
											"end": 1618,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1600,
											"end": 1618,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1600,
											"end": 1618,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1600,
											"end": 1606,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 1600,
											"end": 1618,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1600,
											"end": 1618,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1600,
											"end": 1618,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1600,
											"end": 1618,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1600,
											"end": 1618,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 1600,
											"end": 1630,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1600,
											"end": 1630,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1600,
											"end": 1630,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1600,
											"end": 1630,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1600,
											"end": 1630,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 1600,
											"end": 1630,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 1600,
											"end": 1630,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1598,
											"end": 1631,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1577,
											"end": 1693,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 1577,
											"end": 1693,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1577,
											"end": 1693,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1577,
											"end": 1693,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1577,
											"end": 1693,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1577,
											"end": 1693,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2627,
											"end": 2629,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1577,
											"end": 1693,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1577,
											"end": 1693,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1577,
											"end": 1693,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2609,
											"end": 2630,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2666,
											"end": 2668,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 2646,
											"end": 2664,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2646,
											"end": 2664,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2646,
											"end": 2664,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2639,
											"end": 2669,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2705,
											"end": 2739,
											"name": "PUSH",
											"source": 2,
											"value": "526566657272657220416C72656164792075736564204F6E6C79203120616C6C"
										},
										{
											"begin": 2685,
											"end": 2703,
											"name": "PUSH",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 2685,
											"end": 2703,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2685,
											"end": 2703,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2678,
											"end": 2740,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1BDDD959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2756,
											"end": 2774,
											"name": "PUSH",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 2756,
											"end": 2774,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2756,
											"end": 2774,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2749,
											"end": 2783,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2800,
											"end": 2819,
											"name": "PUSH",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 2800,
											"end": 2819,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1577,
											"end": 1693,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 2425,
											"end": 2825,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1577,
											"end": 1693,
											"name": "tag",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 1577,
											"end": 1693,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1733,
											"end": 1739,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 1733,
											"end": 1739,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1710,
											"end": 1720,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 1703,
											"end": 1721,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1703,
											"end": 1721,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1703,
											"end": 1721,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1703,
											"end": 1721,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1703,
											"end": 1709,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 1703,
											"end": 1721,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1703,
											"end": 1721,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1703,
											"end": 1721,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1703,
											"end": 1721,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1703,
											"end": 1721,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 1733,
											"end": 1739,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1703,
											"end": 1730,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1703,
											"end": 1730,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1703,
											"end": 1730,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1703,
											"end": 1739,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1703,
											"end": 1739,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1733,
											"end": 1739,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 1733,
											"end": 1739,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1733,
											"end": 1739,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 1733,
											"end": 1739,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1733,
											"end": 1739,
											"name": "AND",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1703,
											"end": 1739,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1703,
											"end": 1739,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 1703,
											"end": 1739,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1703,
											"end": 1739,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 1703,
											"end": 1739,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1703,
											"end": 1739,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 1703,
											"end": 1739,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 1703,
											"end": 1739,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1703,
											"end": 1739,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1703,
											"end": 1739,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 1749,
											"end": 1756,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1749,
											"end": 1756,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1749,
											"end": 1756,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1733,
											"end": 1739,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1749,
											"end": 1756,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 1749,
											"end": 1756,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1749,
											"end": 1756,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 1749,
											"end": 1756,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1749,
											"end": 1756,
											"name": "tag",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 1749,
											"end": 1756,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1749,
											"end": 1756,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1749,
											"end": 1756,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1749,
											"end": 1756,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1749,
											"end": 1756,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 1749,
											"end": 1756,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1766,
											"end": 1780,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1783,
											"end": 1817,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 1799,
											"end": 1809,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 1811,
											"end": 1816,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1811,
											"end": 1816,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1783,
											"end": 1798,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 1783,
											"end": 1817,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1783,
											"end": 1817,
											"name": "tag",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 1783,
											"end": 1817,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1766,
											"end": 1817,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1766,
											"end": 1817,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1835,
											"end": 1844,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1827,
											"end": 1865,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 1827,
											"end": 1865,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1827,
											"end": 1865,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1827,
											"end": 1865,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1827,
											"end": 1865,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1827,
											"end": 1865,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3269,
											"end": 3271,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1827,
											"end": 1865,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1827,
											"end": 1865,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1827,
											"end": 1865,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3251,
											"end": 3272,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3308,
											"end": 3310,
											"name": "PUSH",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 3288,
											"end": 3306,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 3288,
											"end": 3306,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3288,
											"end": 3306,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3281,
											"end": 3311,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2737BA1030903B30B634B2103AB9B2B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "81"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3327,
											"end": 3345,
											"name": "PUSH",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 3327,
											"end": 3345,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3327,
											"end": 3345,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3320,
											"end": 3366,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3383,
											"end": 3401,
											"name": "PUSH",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 3383,
											"end": 3401,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1827,
											"end": 1865,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 3067,
											"end": 3407,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1827,
											"end": 1865,
											"name": "tag",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 1827,
											"end": 1865,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1882,
											"end": 1892,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 1875,
											"end": 1893,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1875,
											"end": 1893,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1875,
											"end": 1893,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1875,
											"end": 1893,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1875,
											"end": 1881,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 1875,
											"end": 1893,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1875,
											"end": 1893,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1875,
											"end": 1893,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1875,
											"end": 1893,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1875,
											"end": 1893,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1875,
											"end": 1893,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 1907,
											"end": 1911,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1875,
											"end": 1904,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1875,
											"end": 1904,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1875,
											"end": 1904,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1875,
											"end": 1911,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1875,
											"end": 1911,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1875,
											"end": 1911,
											"name": "AND",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1875,
											"end": 1911,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 1875,
											"end": 1911,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1875,
											"end": 1911,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 1928,
											"end": 1934,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 1928,
											"end": 1934,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1875,
											"end": 1911,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 1928,
											"end": 1934,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1928,
											"end": 1934,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1928,
											"end": 1934,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1921,
											"end": 1935,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1921,
											"end": 1935,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1921,
											"end": 1935,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1921,
											"end": 1935,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 1921,
											"end": 1947,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1921,
											"end": 1954,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1921,
											"end": 1954,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1921,
											"end": 1954,
											"name": "AND",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1921,
											"end": 1954,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 1921,
											"end": 1954,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1921,
											"end": 1954,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 1964,
											"end": 1980,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 1964,
											"end": 1978,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 1964,
											"end": 1980,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1964,
											"end": 1980,
											"name": "tag",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 1964,
											"end": 1980,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1423,
											"end": 1987,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1400,
											"end": 1987,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1993,
											"end": 2488,
											"name": "tag",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 1993,
											"end": 2488,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2109,
											"end": 2114,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2109,
											"end": 2114,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2109,
											"end": 2114,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2109,
											"end": 2132,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2109,
											"end": 2132,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "67DD27F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2109,
											"end": 2132,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2109,
											"end": 2132,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 178,
											"end": 210,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 178,
											"end": 210,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 178,
											"end": 210,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2109,
											"end": 2132,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 2109,
											"end": 2132,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2109,
											"end": 2132,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 160,
											"end": 211,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 160,
											"end": 211,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 160,
											"end": 211,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 160,
											"end": 211,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2085,
											"end": 2089,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2085,
											"end": 2089,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2136,
											"end": 2139,
											"name": "PUSH",
											"source": 1,
											"value": "1F4"
										},
										{
											"begin": 2136,
											"end": 2139,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2109,
											"end": 2114,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2109,
											"end": 2114,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2109,
											"end": 2126,
											"name": "PUSH",
											"source": 1,
											"value": "CFBA4FE0"
										},
										{
											"begin": 2109,
											"end": 2126,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 133,
											"end": 151,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2109,
											"end": 2132,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2109,
											"end": 2132,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2109,
											"end": 2132,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2109,
											"end": 2132,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2109,
											"end": 2132,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2109,
											"end": 2132,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2109,
											"end": 2132,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2109,
											"end": 2132,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2109,
											"end": 2132,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 2109,
											"end": 2132,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 2109,
											"end": 2132,
											"name": "CALL",
											"source": 1
										},
										{
											"begin": 2109,
											"end": 2132,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2109,
											"end": 2132,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2109,
											"end": 2132,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2109,
											"end": 2132,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 2109,
											"end": 2132,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2109,
											"end": 2132,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 2109,
											"end": 2132,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2109,
											"end": 2132,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2109,
											"end": 2132,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 2109,
											"end": 2132,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 2109,
											"end": 2132,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2109,
											"end": 2132,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2109,
											"end": 2132,
											"name": "tag",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 2109,
											"end": 2132,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2109,
											"end": 2132,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2109,
											"end": 2132,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2109,
											"end": 2132,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2109,
											"end": 2132,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2109,
											"end": 2132,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2109,
											"end": 2132,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2109,
											"end": 2132,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 2109,
											"end": 2132,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2109,
											"end": 2132,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 2109,
											"end": 2132,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2109,
											"end": 2132,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2109,
											"end": 2132,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2109,
											"end": 2132,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2109,
											"end": 2132,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2109,
											"end": 2132,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2109,
											"end": 2132,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2109,
											"end": 2132,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2109,
											"end": 2132,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2109,
											"end": 2132,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2109,
											"end": 2132,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2109,
											"end": 2132,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2109,
											"end": 2132,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2109,
											"end": 2132,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 2109,
											"end": 2132,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2109,
											"end": 2132,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2109,
											"end": 2132,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 2109,
											"end": 2132,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2109,
											"end": 2132,
											"name": "tag",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 2109,
											"end": 2132,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2109,
											"end": 2139,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2109,
											"end": 2139,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2101,
											"end": 2164,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 2101,
											"end": 2164,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2101,
											"end": 2164,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2101,
											"end": 2164,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2101,
											"end": 2164,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2101,
											"end": 2164,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3803,
											"end": 3805,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2101,
											"end": 2164,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2101,
											"end": 2164,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2101,
											"end": 2164,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3785,
											"end": 3806,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3842,
											"end": 3844,
											"name": "PUSH",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 3822,
											"end": 3840,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 3822,
											"end": 3840,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3822,
											"end": 3840,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3815,
											"end": 3845,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "696E73756666696369656E742062616C616E6365"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3861,
											"end": 3879,
											"name": "PUSH",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 3861,
											"end": 3879,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3861,
											"end": 3879,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3854,
											"end": 3904,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3921,
											"end": 3939,
											"name": "PUSH",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 3921,
											"end": 3939,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2101,
											"end": 2164,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 3601,
											"end": 3945,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2101,
											"end": 2164,
											"name": "tag",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 2101,
											"end": 2164,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2188,
											"end": 2189,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 2178,
											"end": 2184,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2178,
											"end": 2189,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2174,
											"end": 2461,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 2174,
											"end": 2461,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2205,
											"end": 2210,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2205,
											"end": 2210,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2205,
											"end": 2210,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2226,
											"end": 2238,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2226,
											"end": 2238,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2226,
											"end": 2238,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2205,
											"end": 2210,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2226,
											"end": 2238,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2226,
											"end": 2238,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2226,
											"end": 2238,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2226,
											"end": 2232,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 2226,
											"end": 2238,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2226,
											"end": 2238,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2226,
											"end": 2238,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2226,
											"end": 2238,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2226,
											"end": 2238,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2226,
											"end": 2238,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2226,
											"end": 2238,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2205,
											"end": 2210,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2226,
											"end": 2247,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2226,
											"end": 2247,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2205,
											"end": 2253,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2205,
											"end": 2253,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "17D57599"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2205,
											"end": 2253,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2205,
											"end": 2253,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2205,
											"end": 2253,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 2205,
											"end": 2253,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2205,
											"end": 2253,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4200,
											"end": 4234,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4200,
											"end": 4234,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4200,
											"end": 4234,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4200,
											"end": 4234,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2226,
											"end": 2247,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2226,
											"end": 2247,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4250,
											"end": 4268,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 4250,
											"end": 4268,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 4250,
											"end": 4268,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4243,
											"end": 4286,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2249,
											"end": 2252,
											"name": "PUSH",
											"source": 1,
											"value": "1F4"
										},
										{
											"begin": 4302,
											"end": 4320,
											"name": "PUSH",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 4302,
											"end": 4320,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 4302,
											"end": 4320,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4295,
											"end": 4329,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2205,
											"end": 2210,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2205,
											"end": 2210,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2205,
											"end": 2219,
											"name": "PUSH",
											"source": 1,
											"value": "BEABACC8"
										},
										{
											"begin": 2205,
											"end": 2219,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4135,
											"end": 4153,
											"name": "PUSH",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 4135,
											"end": 4153,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2205,
											"end": 2253,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2205,
											"end": 2253,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2205,
											"end": 2253,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2205,
											"end": 2253,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2205,
											"end": 2253,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2205,
											"end": 2253,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2205,
											"end": 2253,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2205,
											"end": 2253,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2205,
											"end": 2253,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 2205,
											"end": 2253,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2205,
											"end": 2253,
											"name": "EXTCODESIZE",
											"source": 1
										},
										{
											"begin": 2205,
											"end": 2253,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2205,
											"end": 2253,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2205,
											"end": 2253,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2205,
											"end": 2253,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 2205,
											"end": 2253,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2205,
											"end": 2253,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2205,
											"end": 2253,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2205,
											"end": 2253,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2205,
											"end": 2253,
											"name": "tag",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 2205,
											"end": 2253,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2205,
											"end": 2253,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2205,
											"end": 2253,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 2205,
											"end": 2253,
											"name": "CALL",
											"source": 1
										},
										{
											"begin": 2205,
											"end": 2253,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2205,
											"end": 2253,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2205,
											"end": 2253,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2205,
											"end": 2253,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 2205,
											"end": 2253,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2205,
											"end": 2253,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 2205,
											"end": 2253,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2205,
											"end": 2253,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2205,
											"end": 2253,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 2205,
											"end": 2253,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 2205,
											"end": 2253,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2205,
											"end": 2253,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2205,
											"end": 2253,
											"name": "tag",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 2205,
											"end": 2253,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2205,
											"end": 2253,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2205,
											"end": 2253,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2205,
											"end": 2253,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2205,
											"end": 2253,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2174,
											"end": 2461,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 2174,
											"end": 2461,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2174,
											"end": 2461,
											"name": "tag",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 2174,
											"end": 2461,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2302,
											"end": 2314,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2302,
											"end": 2314,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2302,
											"end": 2314,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2284,
											"end": 2299,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2302,
											"end": 2314,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2302,
											"end": 2314,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2302,
											"end": 2314,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2302,
											"end": 2308,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 2302,
											"end": 2314,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2302,
											"end": 2314,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2302,
											"end": 2314,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2302,
											"end": 2314,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2302,
											"end": 2314,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2302,
											"end": 2314,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2302,
											"end": 2314,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2302,
											"end": 2323,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2302,
											"end": 2323,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2302,
											"end": 2323,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2337,
											"end": 2342,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2337,
											"end": 2342,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2337,
											"end": 2342,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2337,
											"end": 2385,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2337,
											"end": 2385,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "17D57599"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2337,
											"end": 2385,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2337,
											"end": 2385,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2337,
											"end": 2385,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2337,
											"end": 2385,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2337,
											"end": 2385,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4200,
											"end": 4234,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 4200,
											"end": 4234,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4200,
											"end": 4234,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 4200,
											"end": 4234,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2302,
											"end": 2323,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2302,
											"end": 2323,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4250,
											"end": 4268,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 4250,
											"end": 4268,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4250,
											"end": 4268,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4243,
											"end": 4286,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4243,
											"end": 4286,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4243,
											"end": 4286,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2381,
											"end": 2384,
											"name": "PUSH",
											"source": 1,
											"value": "12C"
										},
										{
											"begin": 4302,
											"end": 4320,
											"name": "PUSH",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 4302,
											"end": 4320,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 4302,
											"end": 4320,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4295,
											"end": 4329,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2302,
											"end": 2323,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2337,
											"end": 2342,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2337,
											"end": 2342,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2337,
											"end": 2351,
											"name": "PUSH",
											"source": 1,
											"value": "BEABACC8"
										},
										{
											"begin": 2337,
											"end": 2351,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4135,
											"end": 4153,
											"name": "PUSH",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 4135,
											"end": 4153,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2337,
											"end": 2385,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2337,
											"end": 2385,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2337,
											"end": 2385,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2337,
											"end": 2385,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2337,
											"end": 2385,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2337,
											"end": 2385,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2337,
											"end": 2385,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2337,
											"end": 2385,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2337,
											"end": 2385,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 2337,
											"end": 2385,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2337,
											"end": 2385,
											"name": "EXTCODESIZE",
											"source": 1
										},
										{
											"begin": 2337,
											"end": 2385,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2337,
											"end": 2385,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2337,
											"end": 2385,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2337,
											"end": 2385,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 2337,
											"end": 2385,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2337,
											"end": 2385,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2337,
											"end": 2385,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2337,
											"end": 2385,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2337,
											"end": 2385,
											"name": "tag",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 2337,
											"end": 2385,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2337,
											"end": 2385,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2337,
											"end": 2385,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 2337,
											"end": 2385,
											"name": "CALL",
											"source": 1
										},
										{
											"begin": 2337,
											"end": 2385,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2337,
											"end": 2385,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2337,
											"end": 2385,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2337,
											"end": 2385,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 2337,
											"end": 2385,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2337,
											"end": 2385,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 2337,
											"end": 2385,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2337,
											"end": 2385,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2337,
											"end": 2385,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 2337,
											"end": 2385,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 2337,
											"end": 2385,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2337,
											"end": 2385,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2337,
											"end": 2385,
											"name": "tag",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 2337,
											"end": 2385,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2399,
											"end": 2404,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2399,
											"end": 2404,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2399,
											"end": 2404,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2420,
											"end": 2435,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2420,
											"end": 2435,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2420,
											"end": 2435,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2399,
											"end": 2404,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2420,
											"end": 2435,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2420,
											"end": 2435,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2420,
											"end": 2435,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2420,
											"end": 2426,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 2420,
											"end": 2435,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2420,
											"end": 2435,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2420,
											"end": 2435,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2420,
											"end": 2435,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2420,
											"end": 2435,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2420,
											"end": 2435,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2420,
											"end": 2435,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2399,
											"end": 2404,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2420,
											"end": 2444,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2420,
											"end": 2444,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2399,
											"end": 2450,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2399,
											"end": 2450,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "17D57599"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2399,
											"end": 2450,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2399,
											"end": 2450,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4218,
											"end": 4233,
											"name": "DUP11",
											"source": 2
										},
										{
											"begin": 4218,
											"end": 4233,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4218,
											"end": 4233,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2399,
											"end": 2450,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 2399,
											"end": 2450,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2399,
											"end": 2450,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4200,
											"end": 4234,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 4200,
											"end": 4234,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4200,
											"end": 4234,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 4200,
											"end": 4234,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2420,
											"end": 2444,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2420,
											"end": 2444,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4250,
											"end": 4268,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 4250,
											"end": 4268,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 4250,
											"end": 4268,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4243,
											"end": 4286,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2446,
											"end": 2449,
											"name": "PUSH",
											"source": 1,
											"value": "C8"
										},
										{
											"begin": 4302,
											"end": 4320,
											"name": "PUSH",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 4302,
											"end": 4320,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 4302,
											"end": 4320,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4295,
											"end": 4329,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2399,
											"end": 2404,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2399,
											"end": 2404,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2399,
											"end": 2413,
											"name": "PUSH",
											"source": 1,
											"value": "BEABACC8"
										},
										{
											"begin": 2399,
											"end": 2413,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4135,
											"end": 4153,
											"name": "PUSH",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 4135,
											"end": 4153,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2399,
											"end": 2450,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2399,
											"end": 2450,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2399,
											"end": 2450,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2399,
											"end": 2450,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2399,
											"end": 2450,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2399,
											"end": 2450,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2399,
											"end": 2450,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2399,
											"end": 2450,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2399,
											"end": 2450,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 2399,
											"end": 2450,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2399,
											"end": 2450,
											"name": "EXTCODESIZE",
											"source": 1
										},
										{
											"begin": 2399,
											"end": 2450,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2399,
											"end": 2450,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2399,
											"end": 2450,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2399,
											"end": 2450,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 2399,
											"end": 2450,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2399,
											"end": 2450,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2399,
											"end": 2450,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2399,
											"end": 2450,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2399,
											"end": 2450,
											"name": "tag",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 2399,
											"end": 2450,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2399,
											"end": 2450,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2399,
											"end": 2450,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 2399,
											"end": 2450,
											"name": "CALL",
											"source": 1
										},
										{
											"begin": 2399,
											"end": 2450,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2399,
											"end": 2450,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2399,
											"end": 2450,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2399,
											"end": 2450,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 2399,
											"end": 2450,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2399,
											"end": 2450,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 2399,
											"end": 2450,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2399,
											"end": 2450,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2399,
											"end": 2450,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 2399,
											"end": 2450,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 2399,
											"end": 2450,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2399,
											"end": 2450,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2399,
											"end": 2450,
											"name": "tag",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 2399,
											"end": 2450,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2399,
											"end": 2450,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2399,
											"end": 2450,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2399,
											"end": 2450,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2399,
											"end": 2450,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2270,
											"end": 2461,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2174,
											"end": 2461,
											"name": "tag",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 2174,
											"end": 2461,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2477,
											"end": 2481,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1993,
											"end": 2488,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1993,
											"end": 2488,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1993,
											"end": 2488,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1993,
											"end": 2488,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1993,
											"end": 2488,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2660,
											"end": 2742,
											"name": "tag",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 2660,
											"end": 2742,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1013,
											"end": 1023,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 1006,
											"end": 1024,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1006,
											"end": 1024,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1006,
											"end": 1024,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1006,
											"end": 1024,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1006,
											"end": 1012,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 1006,
											"end": 1024,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1006,
											"end": 1024,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1006,
											"end": 1024,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1006,
											"end": 1024,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1006,
											"end": 1024,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 1006,
											"end": 1035,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1006,
											"end": 1035,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1006,
											"end": 1035,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1006,
											"end": 1035,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1006,
											"end": 1035,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 1006,
											"end": 1035,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 1006,
											"end": 1035,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 998,
											"end": 1036,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 998,
											"end": 1036,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 998,
											"end": 1036,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 998,
											"end": 1036,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 998,
											"end": 1036,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 998,
											"end": 1036,
											"name": "tag",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 998,
											"end": 1036,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2716,
											"end": 2722,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 2716,
											"end": 2735,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2716,
											"end": 2735,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "100"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2716,
											"end": 2735,
											"modifierDepth": 1,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2725,
											"end": 2735,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 2716,
											"end": 2735,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2716,
											"end": 2735,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2716,
											"end": 2735,
											"modifierDepth": 1,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 2716,
											"end": 2735,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2716,
											"end": 2735,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 2660,
											"end": 2742,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 404,
											"end": 690,
											"name": "tag",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 404,
											"end": 690,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 463,
											"end": 469,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 516,
											"end": 518,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 504,
											"end": 513,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 495,
											"end": 502,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 491,
											"end": 514,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 487,
											"end": 519,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 484,
											"end": 536,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 484,
											"end": 536,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 484,
											"end": 536,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 532,
											"end": 533,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 529,
											"end": 530,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 522,
											"end": 534,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 484,
											"end": 536,
											"name": "tag",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 484,
											"end": 536,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 558,
											"end": 581,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 558,
											"end": 581,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 610,
											"end": 641,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 610,
											"end": 641,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 600,
											"end": 642,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 600,
											"end": 642,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 590,
											"end": 660,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 590,
											"end": 660,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 656,
											"end": 657,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 653,
											"end": 654,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 646,
											"end": 658,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 590,
											"end": 660,
											"name": "tag",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 590,
											"end": 660,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 679,
											"end": 684,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 404,
											"end": 690,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 404,
											"end": 690,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2830,
											"end": 3062,
											"name": "tag",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 2830,
											"end": 3062,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2869,
											"end": 2872,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2890,
											"end": 2907,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2890,
											"end": 2907,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2890,
											"end": 2907,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2887,
											"end": 3027,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 2887,
											"end": 3027,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2949,
											"end": 2959,
											"name": "PUSH",
											"source": 2,
											"value": "4E487B71"
										},
										{
											"begin": 2944,
											"end": 2947,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 2940,
											"end": 2960,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 2937,
											"end": 2938,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2930,
											"end": 2961,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2984,
											"end": 2988,
											"name": "PUSH",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 2981,
											"end": 2982,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2974,
											"end": 2989,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3012,
											"end": 3016,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 3009,
											"end": 3010,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3002,
											"end": 3017,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2887,
											"end": 3027,
											"name": "tag",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 2887,
											"end": 3027,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3054,
											"end": 3055,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3043,
											"end": 3056,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3043,
											"end": 3056,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2830,
											"end": 3062,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3412,
											"end": 3596,
											"name": "tag",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 3412,
											"end": 3596,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3482,
											"end": 3488,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3535,
											"end": 3537,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3523,
											"end": 3532,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3514,
											"end": 3521,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3510,
											"end": 3533,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3506,
											"end": 3538,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 3503,
											"end": 3555,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3503,
											"end": 3555,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 3503,
											"end": 3555,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3552,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3548,
											"end": 3549,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3541,
											"end": 3553,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3503,
											"end": 3555,
											"name": "tag",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 3503,
											"end": 3555,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3574,
											"end": 3590,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3574,
											"end": 3590,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3412,
											"end": 3596,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3412,
											"end": 3596,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										}
									]
								}
							},
							"sourceList": [
								"contracts/InterfaceERC20.sol",
								"contracts/MultilevelTransfer.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"admins()": "a5de3619",
							"getparent()": "255d45d8",
							"inter()": "f13ad725",
							"join()": "b688a363",
							"parent()": "60f96a8f",
							"random()": "5ec01e4d",
							"staker(address)": "82e4eda4",
							"tokenId()": "17d70f7c"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_ERC20address\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"admins\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getparent\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"inter\",\"outputs\":[{\"internalType\":\"contract InterfaceERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"join\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"parent\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"random\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"staker\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenid\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"referrer\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"setreferrer\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"activeUser\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenId\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/MultilevelTransfer.sol\":\"Tokenplay\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/InterfaceERC20.sol\":{\"keccak256\":\"0x490b6c623d965df3544699ed991b0588d85cbecd19d8b7b1b1ecdf78d4ed31b6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1f4de2acb59211df2168ba041dd3810c16113e6a26a79bb992d40b37acc6e410\",\"dweb:/ipfs/QmWQo2Se5JATG9PYeR7d51pJRASHzNcBoo6W9dgyRtuKJj\"]},\"contracts/MultilevelTransfer.sol\":{\"keccak256\":\"0x6b0af0f5060ccd85c7447ee9fdfff4a96ae6f4d4550986721a08b1f5ebc99729\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1a64b0bc9d16340fdbad457f22764564d48388493a86b43feebb3caa62c78b58\",\"dweb:/ipfs/QmX75sbCSU1ewTo4mvSHHxqNG7xNabDzDdPzM56xytSBEr\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 28,
								"contract": "contracts/MultilevelTransfer.sol:Tokenplay",
								"label": "admins",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 31,
								"contract": "contracts/MultilevelTransfer.sol:Tokenplay",
								"label": "count",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 33,
								"contract": "contracts/MultilevelTransfer.sol:Tokenplay",
								"label": "sync",
								"offset": 0,
								"slot": "2",
								"type": "t_bool"
							},
							{
								"astId": 35,
								"contract": "contracts/MultilevelTransfer.sol:Tokenplay",
								"label": "parent",
								"offset": 1,
								"slot": "2",
								"type": "t_address"
							},
							{
								"astId": 37,
								"contract": "contracts/MultilevelTransfer.sol:Tokenplay",
								"label": "random",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							},
							{
								"astId": 40,
								"contract": "contracts/MultilevelTransfer.sol:Tokenplay",
								"label": "inter",
								"offset": 0,
								"slot": "4",
								"type": "t_contract(InterfaceERC20)23"
							},
							{
								"astId": 45,
								"contract": "contracts/MultilevelTransfer.sol:Tokenplay",
								"label": "staker",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_struct(Staker)54_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_contract(InterfaceERC20)23": {
								"encoding": "inplace",
								"label": "contract InterfaceERC20",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_struct(Staker)54_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct Tokenplay.Staker)",
								"numberOfBytes": "32",
								"value": "t_struct(Staker)54_storage"
							},
							"t_struct(Staker)54_storage": {
								"encoding": "inplace",
								"label": "struct Tokenplay.Staker",
								"members": [
									{
										"astId": 47,
										"contract": "contracts/MultilevelTransfer.sol:Tokenplay",
										"label": "tokenid",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 49,
										"contract": "contracts/MultilevelTransfer.sol:Tokenplay",
										"label": "referrer",
										"offset": 0,
										"slot": "1",
										"type": "t_address"
									},
									{
										"astId": 51,
										"contract": "contracts/MultilevelTransfer.sol:Tokenplay",
										"label": "setreferrer",
										"offset": 20,
										"slot": "1",
										"type": "t_bool"
									},
									{
										"astId": 53,
										"contract": "contracts/MultilevelTransfer.sol:Tokenplay",
										"label": "activeUser",
										"offset": 21,
										"slot": "1",
										"type": "t_bool"
									}
								],
								"numberOfBytes": "64"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/InterfaceERC20.sol": {
				"ast": {
					"absolutePath": "contracts/InterfaceERC20.sol",
					"exportedSymbols": {
						"InterfaceERC20": [
							23
						]
					},
					"id": 24,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "InterfaceERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 23,
							"linearizedBaseContracts": [
								23
							],
							"name": "InterfaceERC20",
							"nameLocation": "68:14:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "6a627842",
									"id": 6,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "mint",
									"nameLocation": "97:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "110:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 6,
												"src": "102:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "102:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "101:14:0"
									},
									"returnParameters": {
										"id": 5,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "124:0:0"
									},
									"scope": 23,
									"src": "88:37:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "beabacc8",
									"id": 15,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "139:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 13,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 8,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "156:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 15,
												"src": "148:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 7,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "148:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 10,
												"mutability": "mutable",
												"name": "referrer",
												"nameLocation": "170:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 15,
												"src": "162:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 9,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "162:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 12,
												"mutability": "mutable",
												"name": "tokens",
												"nameLocation": "184:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 15,
												"src": "179:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 11,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "179:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "147:44:0"
									},
									"returnParameters": {
										"id": 14,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "200:0:0"
									},
									"scope": 23,
									"src": "130:71:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "cfba4fe0",
									"id": 22,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "findBalance",
									"nameLocation": "215:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 18,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 17,
												"mutability": "mutable",
												"name": "tokenUser",
												"nameLocation": "235:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 22,
												"src": "227:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 16,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "227:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "226:19:0"
									},
									"returnParameters": {
										"id": 21,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 22,
												"src": "263:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 19,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "263:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "262:6:0"
									},
									"scope": 23,
									"src": "206:63:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 24,
							"src": "58:213:0",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "33:238:0"
				},
				"id": 0
			},
			"contracts/MultilevelTransfer.sol": {
				"ast": {
					"absolutePath": "contracts/MultilevelTransfer.sol",
					"exportedSymbols": {
						"InterfaceERC20": [
							23
						],
						"Tokenplay": [
							347
						]
					},
					"id": 348,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 25,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:1"
						},
						{
							"absolutePath": "contracts/InterfaceERC20.sol",
							"file": "./InterfaceERC20.sol",
							"id": 26,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 348,
							"sourceUnit": 24,
							"src": "56:30:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Tokenplay",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 347,
							"linearizedBaseContracts": [
								347
							],
							"name": "Tokenplay",
							"nameLocation": "97:9:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "a5de3619",
									"id": 28,
									"mutability": "mutable",
									"name": "admins",
									"nameLocation": "128:6:1",
									"nodeType": "VariableDeclaration",
									"scope": 347,
									"src": "113:21:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 27,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "113:7:1",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 31,
									"mutability": "mutable",
									"name": "count",
									"nameLocation": "145:5:1",
									"nodeType": "VariableDeclaration",
									"scope": 347,
									"src": "140:14:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 29,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "140:4:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30",
										"id": 30,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "153:1:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0"
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 33,
									"mutability": "mutable",
									"name": "sync",
									"nameLocation": "173:4:1",
									"nodeType": "VariableDeclaration",
									"scope": 347,
									"src": "160:17:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 32,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "160:4:1",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"functionSelector": "60f96a8f",
									"id": 35,
									"mutability": "mutable",
									"name": "parent",
									"nameLocation": "198:6:1",
									"nodeType": "VariableDeclaration",
									"scope": 347,
									"src": "183:21:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 34,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "183:7:1",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "5ec01e4d",
									"id": 37,
									"mutability": "mutable",
									"name": "random",
									"nameLocation": "222:6:1",
									"nodeType": "VariableDeclaration",
									"scope": 347,
									"src": "210:18:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 36,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "210:4:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "f13ad725",
									"id": 40,
									"mutability": "mutable",
									"name": "inter",
									"nameLocation": "256:5:1",
									"nodeType": "VariableDeclaration",
									"scope": 347,
									"src": "234:27:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_InterfaceERC20_$23",
										"typeString": "contract InterfaceERC20"
									},
									"typeName": {
										"id": 39,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 38,
											"name": "InterfaceERC20",
											"nameLocations": [
												"234:14:1"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 23,
											"src": "234:14:1"
										},
										"referencedDeclaration": 23,
										"src": "234:14:1",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_InterfaceERC20_$23",
											"typeString": "contract InterfaceERC20"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "82e4eda4",
									"id": 45,
									"mutability": "mutable",
									"name": "staker",
									"nameLocation": "302:6:1",
									"nodeType": "VariableDeclaration",
									"scope": 347,
									"src": "268:40:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$54_storage_$",
										"typeString": "mapping(address => struct Tokenplay.Staker)"
									},
									"typeName": {
										"id": 44,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 41,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "276:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "268:26:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$54_storage_$",
											"typeString": "mapping(address => struct Tokenplay.Staker)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 43,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 42,
												"name": "Staker",
												"nameLocations": [
													"287:6:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 54,
												"src": "287:6:1"
											},
											"referencedDeclaration": 54,
											"src": "287:6:1",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Staker_$54_storage_ptr",
												"typeString": "struct Tokenplay.Staker"
											}
										}
									},
									"visibility": "public"
								},
								{
									"canonicalName": "Tokenplay.Staker",
									"id": 54,
									"members": [
										{
											"constant": false,
											"id": 47,
											"mutability": "mutable",
											"name": "tokenid",
											"nameLocation": "343:7:1",
											"nodeType": "VariableDeclaration",
											"scope": 54,
											"src": "338:12:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 46,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "338:4:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 49,
											"mutability": "mutable",
											"name": "referrer",
											"nameLocation": "368:8:1",
											"nodeType": "VariableDeclaration",
											"scope": 54,
											"src": "360:16:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 48,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "360:7:1",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 51,
											"mutability": "mutable",
											"name": "setreferrer",
											"nameLocation": "391:11:1",
											"nodeType": "VariableDeclaration",
											"scope": 54,
											"src": "386:16:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 50,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "386:4:1",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 53,
											"mutability": "mutable",
											"name": "activeUser",
											"nameLocation": "417:10:1",
											"nodeType": "VariableDeclaration",
											"scope": 54,
											"src": "412:15:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 52,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "412:4:1",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Staker",
									"nameLocation": "321:6:1",
									"nodeType": "StructDefinition",
									"scope": 347,
									"src": "314:120:1",
									"visibility": "public"
								},
								{
									"body": {
										"id": 93,
										"nodeType": "Block",
										"src": "475:246:1",
										"statements": [
											{
												"expression": {
													"id": 63,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 59,
														"name": "inter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 40,
														"src": "526:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_InterfaceERC20_$23",
															"typeString": "contract InterfaceERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 61,
																"name": "_ERC20address",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 56,
																"src": "549:13:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 60,
															"name": "InterfaceERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 23,
															"src": "534:14:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_InterfaceERC20_$23_$",
																"typeString": "type(contract InterfaceERC20)"
															}
														},
														"id": 62,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "534:29:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_InterfaceERC20_$23",
															"typeString": "contract InterfaceERC20"
														}
													},
													"src": "526:37:1",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_InterfaceERC20_$23",
														"typeString": "contract InterfaceERC20"
													}
												},
												"id": 64,
												"nodeType": "ExpressionStatement",
												"src": "526:37:1"
											},
											{
												"expression": {
													"id": 68,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 65,
														"name": "admins",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 28,
														"src": "573:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 66,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "582:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 67,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "586:6:1",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "582:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "573:19:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 69,
												"nodeType": "ExpressionStatement",
												"src": "573:19:1"
											},
											{
												"expression": {
													"id": 76,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 70,
																"name": "staker",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 45,
																"src": "602:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$54_storage_$",
																	"typeString": "mapping(address => struct Tokenplay.Staker storage ref)"
																}
															},
															"id": 73,
															"indexExpression": {
																"expression": {
																	"id": 71,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "609:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 72,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "613:6:1",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "609:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "602:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Staker_$54_storage",
																"typeString": "struct Tokenplay.Staker storage ref"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "621:10:1",
														"memberName": "activeUser",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 53,
														"src": "602:29:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 75,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "634:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "602:36:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 77,
												"nodeType": "ExpressionStatement",
												"src": "602:36:1"
											},
											{
												"expression": {
													"id": 81,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 78,
														"name": "parent",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 35,
														"src": "648:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 79,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "657:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 80,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "661:6:1",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "657:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "648:19:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 82,
												"nodeType": "ExpressionStatement",
												"src": "648:19:1"
											},
											{
												"expression": {
													"id": 85,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 83,
														"name": "count",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 31,
														"src": "677:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 84,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "685:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "677:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 86,
												"nodeType": "ExpressionStatement",
												"src": "677:9:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 90,
															"name": "admins",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 28,
															"src": "707:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 87,
															"name": "inter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 40,
															"src": "696:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_InterfaceERC20_$23",
																"typeString": "contract InterfaceERC20"
															}
														},
														"id": 89,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "702:4:1",
														"memberName": "mint",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 6,
														"src": "696:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address) external"
														}
													},
													"id": 91,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "696:18:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 92,
												"nodeType": "ExpressionStatement",
												"src": "696:18:1"
											}
										]
									},
									"id": 94,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 57,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 56,
												"mutability": "mutable",
												"name": "_ERC20address",
												"nameLocation": "460:13:1",
												"nodeType": "VariableDeclaration",
												"scope": 94,
												"src": "452:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 55,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "452:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "451:23:1"
									},
									"returnParameters": {
										"id": 58,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "475:0:1"
									},
									"scope": 347,
									"src": "440:281:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 105,
										"nodeType": "Block",
										"src": "749:73:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 100,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 97,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "767:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 98,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "771:6:1",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "767:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 99,
																"name": "admins",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 28,
																"src": "781:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "767:20:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "6e6f7420616e2061646d696e",
															"id": 101,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "789:14:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5bda5c05acf463623cf6a3055122b4addea65e88452f82ecd21a6e144b0ee898",
																"typeString": "literal_string \"not an admin\""
															},
															"value": "not an admin"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5bda5c05acf463623cf6a3055122b4addea65e88452f82ecd21a6e144b0ee898",
																"typeString": "literal_string \"not an admin\""
															}
														],
														"id": 96,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "759:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 102,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "759:45:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 103,
												"nodeType": "ExpressionStatement",
												"src": "759:45:1"
											},
											{
												"id": 104,
												"nodeType": "PlaceholderStatement",
												"src": "814:1:1"
											}
										]
									},
									"id": 106,
									"name": "onlyAdmins",
									"nameLocation": "736:10:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 95,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "746:2:1"
									},
									"src": "727:95:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 124,
										"nodeType": "Block",
										"src": "852:109:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 110,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "870:5:1",
															"subExpression": {
																"id": 109,
																"name": "sync",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 33,
																"src": "871:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "53796e63206c6f636b",
															"id": 111,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "877:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_28154d7df0746c056677657a3fabff6d81e7502de98f08c2da6504e75b63e771",
																"typeString": "literal_string \"Sync lock\""
															},
															"value": "Sync lock"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_28154d7df0746c056677657a3fabff6d81e7502de98f08c2da6504e75b63e771",
																"typeString": "literal_string \"Sync lock\""
															}
														],
														"id": 108,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "862:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 112,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "862:27:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 113,
												"nodeType": "ExpressionStatement",
												"src": "862:27:1"
											},
											{
												"expression": {
													"id": 116,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 114,
														"name": "sync",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 33,
														"src": "899:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 115,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "906:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "899:11:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 117,
												"nodeType": "ExpressionStatement",
												"src": "899:11:1"
											},
											{
												"id": 118,
												"nodeType": "PlaceholderStatement",
												"src": "920:1:1"
											},
											{
												"expression": {
													"id": 121,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 119,
														"name": "sync",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 33,
														"src": "931:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 120,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "938:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "931:12:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 122,
												"nodeType": "ExpressionStatement",
												"src": "931:12:1"
											},
											{
												"id": 123,
												"nodeType": "PlaceholderStatement",
												"src": "953:1:1"
											}
										]
									},
									"id": 125,
									"name": "synchronized",
									"nameLocation": "837:12:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 107,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "849:2:1"
									},
									"src": "828:133:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 136,
										"nodeType": "Block",
										"src": "988:66:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"baseExpression": {
																	"id": 128,
																	"name": "staker",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 45,
																	"src": "1006:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$54_storage_$",
																		"typeString": "mapping(address => struct Tokenplay.Staker storage ref)"
																	}
																},
																"id": 131,
																"indexExpression": {
																	"expression": {
																		"id": 129,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "1013:3:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 130,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1017:6:1",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "1013:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "1006:18:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Staker_$54_storage",
																	"typeString": "struct Tokenplay.Staker storage ref"
																}
															},
															"id": 132,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1025:10:1",
															"memberName": "activeUser",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 53,
															"src": "1006:29:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 127,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "998:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 133,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "998:38:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 134,
												"nodeType": "ExpressionStatement",
												"src": "998:38:1"
											},
											{
												"id": 135,
												"nodeType": "PlaceholderStatement",
												"src": "1046:1:1"
											}
										]
									},
									"id": 137,
									"name": "activeUser",
									"nameLocation": "975:10:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 126,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "985:2:1"
									},
									"src": "966:88:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 174,
										"nodeType": "Block",
										"src": "1126:234:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 146,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "1144:30:1",
															"subExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 141,
																		"name": "staker",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 45,
																		"src": "1145:6:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$54_storage_$",
																			"typeString": "mapping(address => struct Tokenplay.Staker storage ref)"
																		}
																	},
																	"id": 144,
																	"indexExpression": {
																		"expression": {
																			"id": 142,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "1152:3:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 143,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1156:6:1",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "1152:10:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "1145:18:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Staker_$54_storage",
																		"typeString": "struct Tokenplay.Staker storage ref"
																	}
																},
																"id": 145,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1164:10:1",
																"memberName": "activeUser",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 53,
																"src": "1145:29:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "7573657220616c7265616479206578697374",
															"id": 147,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1176:20:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d2a30e0d5845e97b1b92823282b1c8f66fb85bf930b451b83a45ce7bac4460aa",
																"typeString": "literal_string \"user already exist\""
															},
															"value": "user already exist"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d2a30e0d5845e97b1b92823282b1c8f66fb85bf930b451b83a45ce7bac4460aa",
																"typeString": "literal_string \"user already exist\""
															}
														],
														"id": 140,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1136:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 148,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1136:61:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 149,
												"nodeType": "ExpressionStatement",
												"src": "1136:61:1"
											},
											{
												"expression": {
													"id": 164,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 150,
														"name": "random",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 37,
														"src": "1207:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"arguments": [
																	{
																		"arguments": [
																			{
																				"expression": {
																					"id": 156,
																					"name": "msg",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967281,
																					"src": "1261:3:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_message",
																						"typeString": "msg"
																					}
																				},
																				"id": 157,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "1265:6:1",
																				"memberName": "sender",
																				"nodeType": "MemberAccess",
																				"src": "1261:10:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"expression": {
																					"id": 158,
																					"name": "block",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967292,
																					"src": "1273:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_block",
																						"typeString": "block"
																					}
																				},
																				"id": 159,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "1279:9:1",
																				"memberName": "timestamp",
																				"nodeType": "MemberAccess",
																				"src": "1273:15:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"id": 160,
																				"name": "random",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 37,
																				"src": "1290:6:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"id": 154,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "1244:3:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 155,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "1248:12:1",
																			"memberName": "encodePacked",
																			"nodeType": "MemberAccess",
																			"src": "1244:16:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																				"typeString": "function () pure returns (bytes memory)"
																			}
																		},
																		"id": 161,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1244:53:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 153,
																	"name": "keccak256",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967288,
																	"src": "1234:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																		"typeString": "function (bytes memory) pure returns (bytes32)"
																	}
																},
																"id": 162,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1234:64:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"id": 152,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1216:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint256_$",
																"typeString": "type(uint256)"
															},
															"typeName": {
																"id": 151,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "1216:4:1",
																"typeDescriptions": {}
															}
														},
														"id": 163,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1216:92:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1207:101:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 165,
												"nodeType": "ExpressionStatement",
												"src": "1207:101:1"
											},
											{
												"expression": {
													"id": 172,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 166,
																"name": "staker",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 45,
																"src": "1318:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$54_storage_$",
																	"typeString": "mapping(address => struct Tokenplay.Staker storage ref)"
																}
															},
															"id": 169,
															"indexExpression": {
																"expression": {
																	"id": 167,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1325:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 168,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1329:6:1",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "1325:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1318:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Staker_$54_storage",
																"typeString": "struct Tokenplay.Staker storage ref"
															}
														},
														"id": 170,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "1337:7:1",
														"memberName": "tokenid",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 47,
														"src": "1318:26:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 171,
														"name": "random",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 37,
														"src": "1347:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1318:35:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 173,
												"nodeType": "ExpressionStatement",
												"src": "1318:35:1"
											}
										]
									},
									"functionSelector": "17d70f7c",
									"id": 175,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tokenId",
									"nameLocation": "1109:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 138,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1116:2:1"
									},
									"returnParameters": {
										"id": 139,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1126:0:1"
									},
									"scope": 347,
									"src": "1100:260:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 252,
										"nodeType": "Block",
										"src": "1423:564:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 184,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "1441:30:1",
															"subExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 179,
																		"name": "staker",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 45,
																		"src": "1442:6:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$54_storage_$",
																			"typeString": "mapping(address => struct Tokenplay.Staker storage ref)"
																		}
																	},
																	"id": 182,
																	"indexExpression": {
																		"expression": {
																			"id": 180,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "1449:3:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 181,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1453:6:1",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "1449:10:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "1442:18:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Staker_$54_storage",
																		"typeString": "struct Tokenplay.Staker storage ref"
																	}
																},
																"id": 183,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1461:10:1",
																"memberName": "activeUser",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 53,
																"src": "1442:29:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "7573657220616c7265616479206578697374",
															"id": 185,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1473:20:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d2a30e0d5845e97b1b92823282b1c8f66fb85bf930b451b83a45ce7bac4460aa",
																"typeString": "literal_string \"user already exist\""
															},
															"value": "user already exist"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d2a30e0d5845e97b1b92823282b1c8f66fb85bf930b451b83a45ce7bac4460aa",
																"typeString": "literal_string \"user already exist\""
															}
														],
														"id": 178,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1433:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 186,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1433:61:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 187,
												"nodeType": "ExpressionStatement",
												"src": "1433:61:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 195,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 189,
																		"name": "staker",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 45,
																		"src": "1512:6:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$54_storage_$",
																			"typeString": "mapping(address => struct Tokenplay.Staker storage ref)"
																		}
																	},
																	"id": 192,
																	"indexExpression": {
																		"expression": {
																			"id": 190,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "1519:3:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 191,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1523:6:1",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "1519:10:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "1512:18:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Staker_$54_storage",
																		"typeString": "struct Tokenplay.Staker storage ref"
																	}
																},
																"id": 193,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1531:7:1",
																"memberName": "tokenid",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 47,
																"src": "1512:26:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 194,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1542:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1512:31:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f7420612076616c696420546f6b656e4944",
															"id": 196,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1545:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_61cd3a7ce172e8143be870a803fc424cc2dc95cf837e5e148fec23edfad807b7",
																"typeString": "literal_string \"Not a valid TokenID\""
															},
															"value": "Not a valid TokenID"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_61cd3a7ce172e8143be870a803fc424cc2dc95cf837e5e148fec23edfad807b7",
																"typeString": "literal_string \"Not a valid TokenID\""
															}
														],
														"id": 188,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1504:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 197,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1504:63:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 198,
												"nodeType": "ExpressionStatement",
												"src": "1504:63:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 206,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "1598:33:1",
															"subExpression": {
																"components": [
																	{
																		"expression": {
																			"baseExpression": {
																				"id": 200,
																				"name": "staker",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 45,
																				"src": "1600:6:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$54_storage_$",
																					"typeString": "mapping(address => struct Tokenplay.Staker storage ref)"
																				}
																			},
																			"id": 203,
																			"indexExpression": {
																				"expression": {
																					"id": 201,
																					"name": "msg",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967281,
																					"src": "1607:3:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_message",
																						"typeString": "msg"
																					}
																				},
																				"id": 202,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "1611:6:1",
																				"memberName": "sender",
																				"nodeType": "MemberAccess",
																				"src": "1607:10:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "1600:18:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Staker_$54_storage",
																				"typeString": "struct Tokenplay.Staker storage ref"
																			}
																		},
																		"id": 204,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1619:11:1",
																		"memberName": "setreferrer",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 51,
																		"src": "1600:30:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 205,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1599:32:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "526566657272657220416c72656164792075736564204f6e6c79203120616c6c6f776564",
															"id": 207,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1645:38:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2547072ea1669624254ad98a29f387fdce4aca4498930b07c148c345758a3f9d",
																"typeString": "literal_string \"Referrer Already used Only 1 allowed\""
															},
															"value": "Referrer Already used Only 1 allowed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2547072ea1669624254ad98a29f387fdce4aca4498930b07c148c345758a3f9d",
																"typeString": "literal_string \"Referrer Already used Only 1 allowed\""
															}
														],
														"id": 199,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1577:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 208,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1577:116:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 209,
												"nodeType": "ExpressionStatement",
												"src": "1577:116:1"
											},
											{
												"expression": {
													"id": 216,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 210,
																"name": "staker",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 45,
																"src": "1703:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$54_storage_$",
																	"typeString": "mapping(address => struct Tokenplay.Staker storage ref)"
																}
															},
															"id": 213,
															"indexExpression": {
																"expression": {
																	"id": 211,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1710:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 212,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1714:6:1",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "1710:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1703:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Staker_$54_storage",
																"typeString": "struct Tokenplay.Staker storage ref"
															}
														},
														"id": 214,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "1722:8:1",
														"memberName": "referrer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 49,
														"src": "1703:27:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 215,
														"name": "parent",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 35,
														"src": "1733:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1703:36:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 217,
												"nodeType": "ExpressionStatement",
												"src": "1703:36:1"
											},
											{
												"expression": {
													"id": 219,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "++",
													"prefix": false,
													"src": "1749:7:1",
													"subExpression": {
														"id": 218,
														"name": "count",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 31,
														"src": "1749:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 220,
												"nodeType": "ExpressionStatement",
												"src": "1749:7:1"
											},
											{
												"assignments": [
													222
												],
												"declarations": [
													{
														"constant": false,
														"id": 222,
														"mutability": "mutable",
														"name": "validUser",
														"nameLocation": "1771:9:1",
														"nodeType": "VariableDeclaration",
														"scope": 252,
														"src": "1766:14:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 221,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "1766:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 228,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 224,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1799:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 225,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1803:6:1",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1799:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 226,
															"name": "count",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 31,
															"src": "1811:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 223,
														"name": "isValidTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 321,
														"src": "1783:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) returns (bool)"
														}
													},
													"id": 227,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1783:34:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1766:51:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 230,
															"name": "validUser",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 222,
															"src": "1835:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f7420612076616c69642075736572",
															"id": 231,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1846:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7e2c3d148196343ecd06c5b2a71b5ba4e09bd917096447f8a1ece3694fde0be6",
																"typeString": "literal_string \"Not a valid user\""
															},
															"value": "Not a valid user"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7e2c3d148196343ecd06c5b2a71b5ba4e09bd917096447f8a1ece3694fde0be6",
																"typeString": "literal_string \"Not a valid user\""
															}
														],
														"id": 229,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1827:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 232,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1827:38:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 233,
												"nodeType": "ExpressionStatement",
												"src": "1827:38:1"
											},
											{
												"expression": {
													"id": 240,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 234,
																"name": "staker",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 45,
																"src": "1875:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$54_storage_$",
																	"typeString": "mapping(address => struct Tokenplay.Staker storage ref)"
																}
															},
															"id": 237,
															"indexExpression": {
																"expression": {
																	"id": 235,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1882:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 236,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1886:6:1",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "1882:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1875:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Staker_$54_storage",
																"typeString": "struct Tokenplay.Staker storage ref"
															}
														},
														"id": 238,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "1894:10:1",
														"memberName": "activeUser",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 53,
														"src": "1875:29:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 239,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1907:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "1875:36:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 241,
												"nodeType": "ExpressionStatement",
												"src": "1875:36:1"
											},
											{
												"expression": {
													"id": 247,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 242,
																"name": "staker",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 45,
																"src": "1921:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$54_storage_$",
																	"typeString": "mapping(address => struct Tokenplay.Staker storage ref)"
																}
															},
															"id": 244,
															"indexExpression": {
																"id": 243,
																"name": "parent",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 35,
																"src": "1928:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1921:14:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Staker_$54_storage",
																"typeString": "struct Tokenplay.Staker storage ref"
															}
														},
														"id": 245,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "1936:11:1",
														"memberName": "setreferrer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 51,
														"src": "1921:26:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 246,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1950:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "1921:33:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 248,
												"nodeType": "ExpressionStatement",
												"src": "1921:33:1"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 249,
														"name": "changingParent",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 346,
														"src": "1964:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 250,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1964:16:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 251,
												"nodeType": "ExpressionStatement",
												"src": "1964:16:1"
											}
										]
									},
									"functionSelector": "b688a363",
									"id": 253,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "join",
									"nameLocation": "1409:4:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 176,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1413:2:1"
									},
									"returnParameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1423:0:1"
									},
									"scope": 347,
									"src": "1400:587:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 320,
										"nodeType": "Block",
										"src": "2091:397:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 268,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 265,
																		"name": "user",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 255,
																		"src": "2127:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"id": 263,
																		"name": "inter",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 40,
																		"src": "2109:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_InterfaceERC20_$23",
																			"typeString": "contract InterfaceERC20"
																		}
																	},
																	"id": 264,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2115:11:1",
																	"memberName": "findBalance",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 22,
																	"src": "2109:17:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) external returns (uint256)"
																	}
																},
																"id": 266,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2109:23:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"hexValue": "353030",
																"id": 267,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2136:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_500_by_1",
																	"typeString": "int_const 500"
																},
																"value": "500"
															},
															"src": "2109:30:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "696e73756666696369656e742062616c616e6365",
															"id": 269,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2141:22:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a6d1ff1db3d0b9b8c60e12ccab5ce7431be9a2cd0518ac362f1c5c1e0b1cefee",
																"typeString": "literal_string \"insufficient balance\""
															},
															"value": "insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a6d1ff1db3d0b9b8c60e12ccab5ce7431be9a2cd0518ac362f1c5c1e0b1cefee",
																"typeString": "literal_string \"insufficient balance\""
															}
														],
														"id": 262,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2101:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 270,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2101:63:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 271,
												"nodeType": "ExpressionStatement",
												"src": "2101:63:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 274,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 272,
														"name": "number",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 257,
														"src": "2178:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"hexValue": "32",
														"id": 273,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2188:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_2_by_1",
															"typeString": "int_const 2"
														},
														"value": "2"
													},
													"src": "2178:11:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 316,
													"nodeType": "Block",
													"src": "2270:191:1",
													"statements": [
														{
															"assignments": [
																288
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 288,
																	"mutability": "mutable",
																	"name": "parent1",
																	"nameLocation": "2292:7:1",
																	"nodeType": "VariableDeclaration",
																	"scope": 316,
																	"src": "2284:15:1",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"typeName": {
																		"id": 287,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2284:7:1",
																		"stateMutability": "nonpayable",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 293,
															"initialValue": {
																"expression": {
																	"baseExpression": {
																		"id": 289,
																		"name": "staker",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 45,
																		"src": "2302:6:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$54_storage_$",
																			"typeString": "mapping(address => struct Tokenplay.Staker storage ref)"
																		}
																	},
																	"id": 291,
																	"indexExpression": {
																		"id": 290,
																		"name": "user",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 255,
																		"src": "2309:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2302:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Staker_$54_storage",
																		"typeString": "struct Tokenplay.Staker storage ref"
																	}
																},
																"id": 292,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2315:8:1",
																"memberName": "referrer",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 49,
																"src": "2302:21:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "2284:39:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 297,
																		"name": "user",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 255,
																		"src": "2352:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"expression": {
																			"baseExpression": {
																				"id": 298,
																				"name": "staker",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 45,
																				"src": "2358:6:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$54_storage_$",
																					"typeString": "mapping(address => struct Tokenplay.Staker storage ref)"
																				}
																			},
																			"id": 300,
																			"indexExpression": {
																				"id": 299,
																				"name": "user",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 255,
																				"src": "2365:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "2358:12:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Staker_$54_storage",
																				"typeString": "struct Tokenplay.Staker storage ref"
																			}
																		},
																		"id": 301,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2371:8:1",
																		"memberName": "referrer",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 49,
																		"src": "2358:21:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"hexValue": "333030",
																		"id": 302,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2381:3:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_300_by_1",
																			"typeString": "int_const 300"
																		},
																		"value": "300"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_rational_300_by_1",
																			"typeString": "int_const 300"
																		}
																	],
																	"expression": {
																		"id": 294,
																		"name": "inter",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 40,
																		"src": "2337:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_InterfaceERC20_$23",
																			"typeString": "contract InterfaceERC20"
																		}
																	},
																	"id": 296,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2343:8:1",
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 15,
																	"src": "2337:14:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256) external"
																	}
																},
																"id": 303,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2337:48:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 304,
															"nodeType": "ExpressionStatement",
															"src": "2337:48:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 308,
																		"name": "user",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 255,
																		"src": "2414:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"expression": {
																			"baseExpression": {
																				"id": 309,
																				"name": "staker",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 45,
																				"src": "2420:6:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$54_storage_$",
																					"typeString": "mapping(address => struct Tokenplay.Staker storage ref)"
																				}
																			},
																			"id": 311,
																			"indexExpression": {
																				"id": 310,
																				"name": "parent1",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 288,
																				"src": "2427:7:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "2420:15:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Staker_$54_storage",
																				"typeString": "struct Tokenplay.Staker storage ref"
																			}
																		},
																		"id": 312,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2436:8:1",
																		"memberName": "referrer",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 49,
																		"src": "2420:24:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"hexValue": "323030",
																		"id": 313,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2446:3:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_200_by_1",
																			"typeString": "int_const 200"
																		},
																		"value": "200"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_rational_200_by_1",
																			"typeString": "int_const 200"
																		}
																	],
																	"expression": {
																		"id": 305,
																		"name": "inter",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 40,
																		"src": "2399:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_InterfaceERC20_$23",
																			"typeString": "contract InterfaceERC20"
																		}
																	},
																	"id": 307,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2405:8:1",
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 15,
																	"src": "2399:14:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256) external"
																	}
																},
																"id": 314,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2399:51:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 315,
															"nodeType": "ExpressionStatement",
															"src": "2399:51:1"
														}
													]
												},
												"id": 317,
												"nodeType": "IfStatement",
												"src": "2174:287:1",
												"trueBody": {
													"id": 286,
													"nodeType": "Block",
													"src": "2191:73:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 278,
																		"name": "user",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 255,
																		"src": "2220:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"expression": {
																			"baseExpression": {
																				"id": 279,
																				"name": "staker",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 45,
																				"src": "2226:6:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$54_storage_$",
																					"typeString": "mapping(address => struct Tokenplay.Staker storage ref)"
																				}
																			},
																			"id": 281,
																			"indexExpression": {
																				"id": 280,
																				"name": "user",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 255,
																				"src": "2233:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "2226:12:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Staker_$54_storage",
																				"typeString": "struct Tokenplay.Staker storage ref"
																			}
																		},
																		"id": 282,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2239:8:1",
																		"memberName": "referrer",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 49,
																		"src": "2226:21:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"hexValue": "353030",
																		"id": 283,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2249:3:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_500_by_1",
																			"typeString": "int_const 500"
																		},
																		"value": "500"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_rational_500_by_1",
																			"typeString": "int_const 500"
																		}
																	],
																	"expression": {
																		"id": 275,
																		"name": "inter",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 40,
																		"src": "2205:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_InterfaceERC20_$23",
																			"typeString": "contract InterfaceERC20"
																		}
																	},
																	"id": 277,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2211:8:1",
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 15,
																	"src": "2205:14:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256) external"
																	}
																},
																"id": 284,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2205:48:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 285,
															"nodeType": "ExpressionStatement",
															"src": "2205:48:1"
														}
													]
												}
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 318,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2477:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 261,
												"id": 319,
												"nodeType": "Return",
												"src": "2470:11:1"
											}
										]
									},
									"id": 321,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isValidTransfer",
									"nameLocation": "2002:15:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 258,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 255,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "2035:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 321,
												"src": "2027:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 254,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2027:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 257,
												"mutability": "mutable",
												"name": "number",
												"nameLocation": "2054:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 321,
												"src": "2049:11:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 256,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2049:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2017:49:1"
									},
									"returnParameters": {
										"id": 261,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 260,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 321,
												"src": "2085:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 259,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2085:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2084:6:1"
									},
									"scope": 347,
									"src": "1993:495:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 334,
										"nodeType": "Block",
										"src": "2556:51:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"baseExpression": {
															"id": 328,
															"name": "staker",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 45,
															"src": "2573:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$54_storage_$",
																"typeString": "mapping(address => struct Tokenplay.Staker storage ref)"
															}
														},
														"id": 331,
														"indexExpression": {
															"expression": {
																"id": 329,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2580:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 330,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2584:6:1",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2580:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "2573:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Staker_$54_storage",
															"typeString": "struct Tokenplay.Staker storage ref"
														}
													},
													"id": 332,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "2592:8:1",
													"memberName": "referrer",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 49,
													"src": "2573:27:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 327,
												"id": 333,
												"nodeType": "Return",
												"src": "2566:34:1"
											}
										]
									},
									"functionSelector": "255d45d8",
									"id": 335,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 324,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 323,
												"name": "activeUser",
												"nameLocations": [
													"2527:10:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 137,
												"src": "2527:10:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "2527:10:1"
										}
									],
									"name": "getparent",
									"nameLocation": "2503:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 322,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2512:2:1"
									},
									"returnParameters": {
										"id": 327,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 326,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 335,
												"src": "2547:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 325,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2547:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2546:9:1"
									},
									"scope": 347,
									"src": "2494:113:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 345,
										"nodeType": "Block",
										"src": "2706:36:1",
										"statements": [
											{
												"expression": {
													"id": 343,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 340,
														"name": "parent",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 35,
														"src": "2716:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 341,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "2725:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 342,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2729:6:1",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "2725:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2716:19:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 344,
												"nodeType": "ExpressionStatement",
												"src": "2716:19:1"
											}
										]
									},
									"id": 346,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 338,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 337,
												"name": "activeUser",
												"nameLocations": [
													"2695:10:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 137,
												"src": "2695:10:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "2695:10:1"
										}
									],
									"name": "changingParent",
									"nameLocation": "2669:14:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 336,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2683:2:1"
									},
									"returnParameters": {
										"id": 339,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2706:0:1"
									},
									"scope": 347,
									"src": "2660:82:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 348,
							"src": "88:2656:1",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "32:2713:1"
				},
				"id": 1
			}
		}
	}
}